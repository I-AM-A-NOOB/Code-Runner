{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"pa",
				"parser"
			],
			[
				"ar",
				"args"
			],
			[
				"de",
				"debug"
			],
			[
				"con",
				"config"
			],
			[
				"st",
				"str"
			],
			[
				"debu",
				"debugMode"
			],
			[
				"fi",
				"filetype"
			],
			[
				"Boo",
				"bool"
			],
			[
				"file",
				"file_dir"
			],
			[
				"ex",
				"exec"
			],
			[
				"fil",
				"filetype"
			],
			[
				"py",
				"python"
			],
			[
				"in",
				"input"
			],
			[
				"non",
				"None"
			],
			[
				"resu",
				"num_result"
			],
			[
				"rand",
				"randint"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/D/Projects/Project/code runner/main.py",
			"settings":
			{
				"buffer_size": 3439,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					46,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMwAAAAAAAAAzQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAAAAAAAAADMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"paste",
					null,
					"AgAAAMAAAAAAAAAABAQAAAAAAAAAAAAABAQAAAAAAAAEBAAAAAAAAAQAAABwYXNz",
					"AQAAAAAAAAABAAAAxAAAAAAAAADAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "\t\t"
					},
					"AgAAAOMAAAAAAAAA5wAAAAAAAAAAAAAA5wAAAAAAAADrAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wAAAAAAAADjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "\t\t"
					},
					"AgAAABIBAAAAAAAAFgEAAAAAAAAAAAAAFgEAAAAAAAAaAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgEAAAAAAAASAQAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "\t\t"
					},
					"LgAAAPwDAAAAAAAAAAQAAAAAAAAAAAAA1AMAAAAAAADYAwAAAAAAAAAAAACqAwAAAAAAAK4DAAAAAAAAAAAAAIADAAAAAAAAhAMAAAAAAAAAAAAAYAMAAAAAAABkAwAAAAAAAAAAAAAyAwAAAAAAADYDAAAAAAAAAAAAAA8DAAAAAAAAEwMAAAAAAAAAAAAA7AIAAAAAAADwAgAAAAAAAAAAAADgAgAAAAAAAOQCAAAAAAAAAAAAAN8CAAAAAAAA4wIAAAAAAAAAAAAAwwIAAAAAAADHAgAAAAAAAAAAAADCAgAAAAAAAMYCAAAAAAAAAAAAAJkCAAAAAAAAnQIAAAAAAAAAAAAAawIAAAAAAABvAgAAAAAAAAAAAABDAgAAAAAAAEcCAAAAAAAAAAAAACACAAAAAAAAJAIAAAAAAAAAAAAA8QEAAAAAAAD1AQAAAAAAAAAAAADSAQAAAAAAANYBAAAAAAAAAAAAAMkBAAAAAAAAzQEAAAAAAAAAAAAAyAEAAAAAAADMAQAAAAAAAAAAAACwAQAAAAAAALIBAAAAAAAAAAAAAIYBAAAAAAAAigEAAAAAAAAAAAAAWAEAAAAAAABcAQAAAAAAAAAAAABWBAAAAAAAAFoEAAAAAAAAAAAAACoEAAAAAAAALgQAAAAAAAAAAAAA/AMAAAAAAAAABAAAAAAAAAAAAADOAwAAAAAAANIDAAAAAAAAAAAAAKoDAAAAAAAArgMAAAAAAAAAAAAAeAMAAAAAAAB8AwAAAAAAAAAAAABRAwAAAAAAAFUDAAAAAAAAAAAAACoDAAAAAAAALgMAAAAAAAAAAAAAGgMAAAAAAAAeAwAAAAAAAAAAAAAVAwAAAAAAABkDAAAAAAAAAAAAAPUCAAAAAAAA+QIAAAAAAAAAAAAA8AIAAAAAAAD0AgAAAAAAAAAAAADDAgAAAAAAAMcCAAAAAAAAAAAAAJECAAAAAAAAlQIAAAAAAAAAAAAAZQIAAAAAAABpAgAAAAAAAAAAAAA+AgAAAAAAAEICAAAAAAAAAAAAAAsCAAAAAAAADwIAAAAAAAAAAAAA6AEAAAAAAADsAQAAAAAAAAAAAADbAQAAAAAAAN8BAAAAAAAAAAAAANYBAAAAAAAA2gEAAAAAAAAAAAAAugEAAAAAAAC+AQAAAAAAAAAAAACOAQAAAAAAAJIBAAAAAAAAAAAAAFwBAAAAAAAAYAEAAAAAAAAAAAAA",
					"AQAAAAAAAAAXAAAAWAEAAAAAAABYAQAAAAAAAAAAAAAAAPC/hgEAAAAAAACGAQAAAAAAAAAAAAAAAAAAsAEAAAAAAACwAQAAAAAAAAAAAAAAAAAAyAEAAAAAAADIAQAAAAAAAAAAAAAAAAAAyQEAAAAAAADJAQAAAAAAAAAAAAAAAAAA0gEAAAAAAADSAQAAAAAAAAAAAAAAAAAA8QEAAAAAAADxAQAAAAAAAAAAAAAAAAAAIAIAAAAAAAAgAgAAAAAAAAAAAAAAAAAAQwIAAAAAAABDAgAAAAAAAAAAAAAAAAAAawIAAAAAAABrAgAAAAAAAAAAAAAAAAAAmQIAAAAAAACZAgAAAAAAAAAAAAAAAAAAwgIAAAAAAADCAgAAAAAAAAAAAAAAAAAAwwIAAAAAAADDAgAAAAAAAAAAAAAAAAAA3wIAAAAAAADfAgAAAAAAAAAAAAAAAAAA4AIAAAAAAADgAgAAAAAAAAAAAAAAAAAA7AIAAAAAAADsAgAAAAAAAAAAAAAAAAAADwMAAAAAAAAPAwAAAAAAAAAAAAAAAAAAMgMAAAAAAAAyAwAAAAAAAAAAAAAAAAAAYAMAAAAAAABgAwAAAAAAAAAAAAAAAAAAgAMAAAAAAACAAwAAAAAAAAAAAAAAAAAAqgMAAAAAAACqAwAAAAAAAAAAAAAAAAAA1AMAAAAAAADUAwAAAAAAAAAAAAAAAAAA/AMAAAAAAAD8AwAAAAAAAAAAAAAAAAAA"
				],
				[
					88,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							{
								"newText": "import json\nimport argparse\nfrom pathlib import Path\nimport subprocess\nfrom rich.console import Console\nfrom rich.table import Table\n\n\nclass RunnerApp:\n    def __init__(self) -> None:\n        fileTable = Table()  # 创建表格以显示文件信息\n        commandTable = Table()  # 创建表格以显示执行的命令\n        console = Console(color_system=\"256\", style=None)  # 创建控制台对象\n\n        with open(\"filetype.json\") as configure_file:\n            config = json.load(configure_file)  # 从filetype.json文件中加载配置信息\n\n        # 获取文件信息\n        file_source = \".\\\\test\\\\a.cpp\"\n        file_source = str(Path(file_source).resolve())\n        file = str(Path(file_source).name)\n        file_name = str(Path(file_source).stem)\n        file_type = str(Path(file_source).suffix)[1:]\n        file_dir = str(Path(file_source).parent)\n\n        exec_cmd = []  # 用于存储要执行的命令\n\n        # 添加文件信息到表格\n        fileTable.add_column(\"[bold]Item\")\n        fileTable.add_column(\"[red]Value\")\n        fileTable.add_row(\"File source\", file_source)\n        fileTable.add_row(\"File\", file)\n        fileTable.add_row(\"File name\", file_name)\n        fileTable.add_row(\"File type\", file_type)\n        fileTable.add_row(\"File dir\", file_dir)\n        console.print(fileTable)\n    def\n\n\n# 解析命令行参数\nparser = argparse.ArgumentParser()\ngroup = parser.add_mutually_exclusive_group()\ngroup.add_argument('-e', '--encrypt', action='store_true')  # 切换加密选项\nparser.add_argument('text', nargs='*')  # 文本参数\nparser.add_argument('-k', '--key', type=int, default=1)  # 密钥参数\nargs = parser.parse_args()\n\nfileTable = Table()  # 创建表格以显示文件信息\ncommandTable = Table()  # 创建表格以显示执行的命令\nconsole = Console(color_system=\"256\", style=None)  # 创建控制台对象\n\nwith open(\"filetype.json\") as configure_file:\n    config = json.load(configure_file)  # 从filetype.json文件中加载配置信息\n\n# 获取文件信息\nfile_source = \".\\\\test\\\\a.cpp\"\nfile_source = str(Path(file_source).resolve())\nfile = str(Path(file_source).name)\nfile_name = str(Path(file_source).stem)\nfile_type = str(Path(file_source).suffix)[1:]\nfile_dir = str(Path(file_source).parent)\n\nexec_cmd = []  # 用于存储要执行的命令\n\n# 添加文件信息到表格\nfileTable.add_column(\"[bold]Item\")\nfileTable.add_column(\"[red]Value\")\nfileTable.add_row(\"File source\", file_source)\nfileTable.add_row(\"File\", file)\nfileTable.add_row(\"File name\", file_name)\nfileTable.add_row(\"File type\", file_type)\nfileTable.add_row(\"File dir\", file_dir)\nconsole.print(fileTable)\n\n# 根据文件类型查找执行命令\nfor i in config:\n    for j in config[\"filetype\"][i][\"filetype\"]:\n        if j == file_type:\n            exec_cmd = config[i][\"command\"]\n            break\n    if exec_cmd:\n        break\n\n# 添加执行的命令到表格\ncommandTable.add_column(\"\")\ncommandTable.add_column(\"[bold]Command\")\nif exec_cmd:\n    for i in range(len(exec_cmd)):\n        cmd = exec_cmd[i].replace(\"$$\", \"\\n\\n$\\n\\n\")\n        cmd = (\n            cmd.replace(\"$file\", file)\n            .replace(\"$name\", file_name)\n            .replace(\"$type\", file_type)\n            .replace(\"$path\", file_dir)\n            .replace(\"$dir\", file_dir)\n        )\n        cmd = cmd.replace(\"\\n\\n$\\n\\n\", \"$\")\n        commandTable.add_row(str(i + 1), cmd)\n        exec_cmd[i] = cmd\n\n    console.print(commandTable)\n\n    # 执行命令\n    for i in exec_cmd:\n        console.rule()\n        console.print(\">\", i, style=\"cyan\")\n        subprocess.run(i, cwd=file_dir, shell=True)\nelse:\n    console.print(\n        \"No execution command found for file type: .\", file_type, style=\"white on red\"\n    )\n",
								"range":
								{
									"end":
									{
										"character": 0,
										"line": 111
									},
									"start":
									{
										"character": 0,
										"line": 0
									}
								}
							}
						],
						"process_placeholders": false,
						"required_view_version": null
					},
					"AQAAAAAAAAAAAAAALw0AAAAAAACwDgAAaW1wb3J0IGpzb24KaW1wb3J0IGFyZ3BhcnNlCmZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aAppbXBvcnQgc3VicHJvY2Vzcwpmcm9tIHJpY2guY29uc29sZSBpbXBvcnQgQ29uc29sZQpmcm9tIHJpY2gudGFibGUgaW1wb3J0IFRhYmxlCgoKY2xhc3MgUnVubmVyQXBwOgogICAgZGVmIF9faW5pdF9fKHNlbGYpIC0+IE5vbmU6CiAgICAgICAgZmlsZVRhYmxlID0gVGFibGUoKSAgIyDliJvlu7rooajmoLzku6XmmL7npLrmlofku7bkv6Hmga8KICAgICAgICBjb21tYW5kVGFibGUgPSBUYWJsZSgpICAjIOWIm+W7uuihqOagvOS7peaYvuekuuaJp+ihjOeahOWRveS7pAogICAgICAgIGNvbnNvbGUgPSBDb25zb2xlKGNvbG9yX3N5c3RlbT0iMjU2Iiwgc3R5bGU9Tm9uZSkgICMg5Yib5bu65o6n5Yi25Y+w5a+56LGhCgogICAgICAgIHdpdGggb3BlbigiZmlsZXR5cGUuanNvbiIpIGFzIGNvbmZpZ3VyZV9maWxlOgogICAgICAgICAgICBjb25maWcgPSBqc29uLmxvYWQoY29uZmlndXJlX2ZpbGUpICAjICAgICAgIOS7jmZpbGV0eXBlLmpzb27mlofku7bkuK3liqDovb3phY3nva7kv6Hmga8KICAgICAgICAKICAgICAgICAjIOiOt+WPluaWh+S7tuS/oeaBrwogICAgICAgIGZpbGVfc291cmNlID0gIi5cXHRlc3RcXGEuY3BwIgogICAgICAgIGZpbGVfc291cmNlID0gc3RyKFBhdGgoZmlsZV9zb3VyY2UpLnJlc29sdmUoKSkKICAgICAgICBmaWxlID0gc3RyKFBhdGgoZmlsZV9zb3VyY2UpLm5hbWUpCiAgICAgICAgZmlsZV9uYW1lID0gc3RyKFBhdGgoZmlsZV9zb3VyY2UpLnN0ZW0pCiAgICAgICAgZmlsZV90eXBlID0gc3RyKFBhdGgoZmlsZV9zb3VyY2UpLnN1ZmZpeClbMTpdCiAgICAgICAgZmlsZV9kaXIgPSBzdHIoUGF0aChmaWxlX3NvdXJjZSkucGFyZW50KQogICAgICAgIAogICAgICAgIGV4ZWNfY21kID0gW10gICMg55So5LqO5a2Y5YKo6KaB5omn6KGM55qE5ZG95LukCiAgICAgICAgCiAgICAgICAgIyDmt7vliqDmlofku7bkv6Hmga/liLDooajmoLwKICAgICAgICBmaWxlVGFibGUuYWRkX2NvbHVtbigiW2JvbGRdSXRlbSIpCiAgICAgICAgZmlsZVRhYmxlLmFkZF9jb2x1bW4oIltyZWRdVmFsdWUiKQogICAgICAgIGZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIHNvdXJjZSIsIGZpbGVfc291cmNlKQogICAgICAgIGZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIiwgZmlsZSkKICAgICAgICBmaWxlVGFibGUuYWRkX3JvdygiRmlsZSBuYW1lIiwgZmlsZV9uYW1lKQogICAgICAgIGZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIHR5cGUiLCBmaWxlX3R5cGUpCiAgICAgICAgZmlsZVRhYmxlLmFkZF9yb3coIkZpbGUgZGlyIiwgZmlsZV9kaXIpCiAgICAgICAgY29uc29sZS5wcmludChmaWxlVGFibGUpCiAgICBkZWYgCgoKIyDop6PmnpDlkb3ku6TooYzlj4LmlbAKcGFyc2VyID0gYXJncGFyc2UuQXJndW1lbnRQYXJzZXIoKQpncm91cCA9IHBhcnNlci5hZGRfbXV0dWFsbHlfZXhjbHVzaXZlX2dyb3VwKCkKZ3JvdXAuYWRkX2FyZ3VtZW50KCctZScsICctLWVuY3J5cHQnLCBhY3Rpb249J3N0b3JlX3RydWUnKSAgIyDliIfmjaLliqDlr4bpgInpobkKcGFyc2VyLmFkZF9hcmd1bWVudCgndGV4dCcsIG5hcmdzPScqJykgICMg5paH5pys5Y+C5pWwCnBhcnNlci5hZGRfYXJndW1lbnQoJy1rJywgJy0ta2V5JywgdHlwZT1pbnQsIGRlZmF1bHQ9MSkgICMg5a+G6ZKl5Y+C5pWwCmFyZ3MgPSBwYXJzZXIucGFyc2VfYXJncygpCgpmaWxlVGFibGUgPSBUYWJsZSgpICAjIOWIm+W7uuihqOagvOS7peaYvuekuuaWh+S7tuS/oeaBrwpjb21tYW5kVGFibGUgPSBUYWJsZSgpICAjIOWIm+W7uuihqOagvOS7peaYvuekuuaJp+ihjOeahOWRveS7pApjb25zb2xlID0gQ29uc29sZShjb2xvcl9zeXN0ZW09IjI1NiIsIHN0eWxlPU5vbmUpICAjIOWIm+W7uuaOp+WItuWPsOWvueixoQoKd2l0aCBvcGVuKCJmaWxldHlwZS5qc29uIikgYXMgY29uZmlndXJlX2ZpbGU6CiAgICBjb25maWcgPSBqc29uLmxvYWQoY29uZmlndXJlX2ZpbGUpICAjIOS7jmZpbGV0eXBlLmpzb27mlofku7bkuK3liqDovb3phY3nva7kv6Hmga8KCiMg6I635Y+W5paH5Lu25L+h5oGvCmZpbGVfc291cmNlID0gIi5cXHRlc3RcXGEuY3BwIgpmaWxlX3NvdXJjZSA9IHN0cihQYXRoKGZpbGVfc291cmNlKS5yZXNvbHZlKCkpCmZpbGUgPSBzdHIoUGF0aChmaWxlX3NvdXJjZSkubmFtZSkKZmlsZV9uYW1lID0gc3RyKFBhdGgoZmlsZV9zb3VyY2UpLnN0ZW0pCmZpbGVfdHlwZSA9IHN0cihQYXRoKGZpbGVfc291cmNlKS5zdWZmaXgpWzE6XQpmaWxlX2RpciA9IHN0cihQYXRoKGZpbGVfc291cmNlKS5wYXJlbnQpCgpleGVjX2NtZCA9IFtdICAjIOeUqOS6juWtmOWCqOimgeaJp+ihjOeahOWRveS7pAoKIyDmt7vliqDmlofku7bkv6Hmga/liLDooajmoLwKZmlsZVRhYmxlLmFkZF9jb2x1bW4oIltib2xkXUl0ZW0iKQpmaWxlVGFibGUuYWRkX2NvbHVtbigiW3JlZF1WYWx1ZSIpCmZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIHNvdXJjZSIsIGZpbGVfc291cmNlKQpmaWxlVGFibGUuYWRkX3JvdygiRmlsZSIsIGZpbGUpCmZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIG5hbWUiLCBmaWxlX25hbWUpCmZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIHR5cGUiLCBmaWxlX3R5cGUpCmZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIGRpciIsIGZpbGVfZGlyKQpjb25zb2xlLnByaW50KGZpbGVUYWJsZSkKCiMg5qC55o2u5paH5Lu257G75Z6L5p+l5om+5omn6KGM5ZG95LukCmZvciBpIGluIGNvbmZpZzoKICAgIGZvciBqIGluIGNvbmZpZ1siZmlsZXR5cGUiXVtpXVsiZmlsZXR5cGUiXToKICAgICAgICBpZiBqID09IGZpbGVfdHlwZToKICAgICAgICAgICAgZXhlY19jbWQgPSBjb25maWdbaV1bImNvbW1hbmQiXQogICAgICAgICAgICBicmVhawogICAgaWYgZXhlY19jbWQ6CiAgICAgICAgYnJlYWsKCiMg5re75Yqg5omn6KGM55qE5ZG95Luk5Yiw6KGo5qC8CmNvbW1hbmRUYWJsZS5hZGRfY29sdW1uKCIiKQpjb21tYW5kVGFibGUuYWRkX2NvbHVtbigiW2JvbGRdQ29tbWFuZCIpCmlmIGV4ZWNfY21kOgogICAgZm9yIGkgaW4gcmFuZ2UobGVuKGV4ZWNfY21kKSk6CiAgICAgICAgY21kID0gZXhlY19jbWRbaV0ucmVwbGFjZSgiJCQiLCAiXG5cbiRcblxuIikKICAgICAgICBjbWQgPSAoCiAgICAgICAgICAgIGNtZC5yZXBsYWNlKCIkZmlsZSIsIGZpbGUpCiAgICAgICAgICAgIC5yZXBsYWNlKCIkbmFtZSIsIGZpbGVfbmFtZSkKICAgICAgICAgICAgLnJlcGxhY2UoIiR0eXBlIiwgZmlsZV90eXBlKQogICAgICAgICAgICAucmVwbGFjZSgiJHBhdGgiLCBmaWxlX2RpcikKICAgICAgICAgICAgLnJlcGxhY2UoIiRkaXIiLCBmaWxlX2RpcikKICAgICAgICApCiAgICAgICAgY21kID0gY21kLnJlcGxhY2UoIlxuXG4kXG5cbiIsICIkIikKICAgICAgICBjb21tYW5kVGFibGUuYWRkX3JvdyhzdHIoaSArIDEpLCBjbWQpCiAgICAgICAgZXhlY19jbWRbaV0gPSBjbWQKCiAgICBjb25zb2xlLnByaW50KGNvbW1hbmRUYWJsZSkKCiAgICAjIOaJp+ihjOWRveS7pAogICAgZm9yIGkgaW4gZXhlY19jbWQ6CiAgICAgICAgY29uc29sZS5ydWxlKCkKICAgICAgICBjb25zb2xlLnByaW50KCI+IiwgaSwgc3R5bGU9ImN5YW4iKQogICAgICAgIHN1YnByb2Nlc3MucnVuKGksIGN3ZD1maWxlX2Rpciwgc2hlbGw9VHJ1ZSkKZWxzZToKICAgIGNvbnNvbGUucHJpbnQoCiAgICAgICAgIk5vIGV4ZWN1dGlvbiBjb21tYW5kIGZvdW5kIGZvciBmaWxlIHR5cGU6IC4iLCBmaWxlX3R5cGUsIHN0eWxlPSJ3aGl0ZSBvbiByZWQiCiAgICApCg",
					"AQAAAAAAAAABAAAAmgIAAAAAAACaAgAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "self."
					},
					"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AAAAAAYCAAAAAAAABwIAAAAAAAAAAAAAqgEAAAAAAACrAQAAAAAAAAAAAAAmAQAAAAAAACcBAAAAAAAAAAAAAPMAAAAAAAAA9AAAAAAAAAAAAAAAxAAAAAAAAADFAAAAAAAAAAAAAAA",
					"AQAAAAAAAAATAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAAPC/6wAAAAAAAADrAAAAAAAAAAAAAAAAAPC/GgEAAAAAAAAaAQAAAAAAAAAAAAAAAPC/mgEAAAAAAACaAQAAAAAAAAAAAAAAAPC/8gEAAAAAAADyAQAAAAAAAAAAAAAAAPC/GQIAAAAAAAAZAgAAAAAAAAAAAAAAAPC/UAIAAAAAAABQAgAAAAAAAAAAAAAAAPC/ewIAAAAAAAB7AgAAAAAAAAAAAAAAAPC/qwIAAAAAAACrAgAAAAAAAAAAAAAAAPC/4QIAAAAAAADhAgAAAAAAAAAAAAAAAPC/EwMAAAAAAAATAwAAAAAAAAAAAAAAAPC/TAMAAAAAAABMAwAAAAAAAAAAAAAAAPC/dwMAAAAAAAB3AwAAAAAAAAAAAAAAAPC/ogMAAAAAAACiAwAAAAAAAAAAAAAAAPC/2AMAAAAAAADYAwAAAAAAAAAAAAAAAPC/AAQAAAAAAAAABAAAAAAAAAAAAAAAAPC/MgQAAAAAAAAyBAAAAAAAAAAAAAAAAPC/ZAQAAAAAAABkBAAAAAAAAAAAAAAAAPC/lAQAAAAAAACUBAAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABMFAAAAAAAAFAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwUAAAAAAAATBQAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "proc"
					},
					"BAAAABQFAAAAAAAAFQUAAAAAAAAAAAAAFQUAAAAAAAAWBQAAAAAAAAAAAAAWBQAAAAAAABcFAAAAAAAAAAAAABcFAAAAAAAAGAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAUAAAAAAAAUBQAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": "ess"
					},
					"AwAAABgFAAAAAAAAGQUAAAAAAAAAAAAAGQUAAAAAAAAaBQAAAAAAAAAAAAAaBQAAAAAAABsFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAUAAAAAAAAYBQAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": "Exec"
					},
					"BQAAABQFAAAAAAAAFQUAAAAAAAAAAAAAFQUAAAAAAAAVBQAAAAAAAAcAAABwcm9jZXNzFQUAAAAAAAAWBQAAAAAAAAAAAAAWBQAAAAAAABcFAAAAAAAAAAAAABcFAAAAAAAAGAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwUAAAAAAAAUBQAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "Code"
					},
					"BAAAABgFAAAAAAAAGQUAAAAAAAAAAAAAGQUAAAAAAAAaBQAAAAAAAAAAAAAaBQAAAAAAABsFAAAAAAAAAAAAABsFAAAAAAAAHAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAUAAAAAAAAYBQAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABwFAAAAAAAAHgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAUAAAAAAAAcBQAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": "se"
					},
					"AgAAAB0FAAAAAAAAHgUAAAAAAAAAAAAAHgUAAAAAAAAfBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQUAAAAAAAAdBQAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAB8FAAAAAAAAIAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwUAAAAAAAAfBQAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"insert_completion",
					{
						"completion": "self",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "self"
					},
					"AgAAAB0FAAAAAAAAHQUAAAAAAAADAAAAc2VsHQUAAAAAAAAhBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAUAAAAAAAAgBQAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": " -->"
					},
					"BAAAACIFAAAAAAAAIwUAAAAAAAAAAAAAIwUAAAAAAAAkBQAAAAAAAAAAAAAkBQAAAAAAACUFAAAAAAAAAAAAACUFAAAAAAAAJgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgUAAAAAAAAiBQAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"left_delete",
					null,
					"AQAAACMFAAAAAAAAIwUAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAJAUAAAAAAAAkBQAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": " N"
					},
					"AgAAACUFAAAAAAAAJgUAAAAAAAAAAAAAJgUAAAAAAAAnBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQUAAAAAAAAlBQAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":1,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "None"
					},
					"AgAAACYFAAAAAAAAJgUAAAAAAAABAAAATiYFAAAAAAAAKgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwUAAAAAAAAnBQAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAACoFAAAAAAAAKwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgUAAAAAAAAqBQAAAAAAAAAAAAAAAPC/"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAACsFAAAAAAAALAUAAAAAAAAAAAAALAUAAAAAAAAwBQAAAAAAAAAAAAAwBQAAAAAAADQFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwUAAAAAAAArBQAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": ","
					},
					"AgAAACEFAAAAAAAAIgUAAAAAAAAAAAAALQUAAAAAAAAtBQAAAAAAAAgAAAAgICAgICAgIA",
					"AQAAAAAAAAABAAAAIQUAAAAAAAAhBQAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACIFAAAAAAAAIwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgUAAAAAAAAiBQAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": "D"
					},
					"AQAAACMFAAAAAAAAJAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwUAAAAAAAAjBQAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": "BG"
					},
					"AgAAACQFAAAAAAAAJQUAAAAAAAAAAAAAJQUAAAAAAAAmBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAUAAAAAAAAkBQAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					3,
					"left_delete",
					null,
					"AwAAACUFAAAAAAAAJQUAAAAAAAABAAAARyQFAAAAAAAAJAUAAAAAAAABAAAAQiMFAAAAAAAAIwUAAAAAAAABAAAARA",
					"AQAAAAAAAAABAAAAJgUAAAAAAAAmBQAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": "isd"
					},
					"AwAAACMFAAAAAAAAJAUAAAAAAAAAAAAAJAUAAAAAAAAlBQAAAAAAAAAAAAAlBQAAAAAAACYFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwUAAAAAAAAjBQAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": "bg"
					},
					"AgAAACYFAAAAAAAAJwUAAAAAAAAAAAAAJwUAAAAAAAAoBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgUAAAAAAAAmBQAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					3,
					"right_delete",
					null,
					"AwAAACUFAAAAAAAAJQUAAAAAAAABAAAAZCUFAAAAAAAAJQUAAAAAAAABAAAAYiUFAAAAAAAAJQUAAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAAJQUAAAAAAAAlBQAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": "DBG"
					},
					"AwAAACUFAAAAAAAAJgUAAAAAAAAAAAAAJgUAAAAAAAAnBQAAAAAAAAAAAAAnBQAAAAAAACgFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQUAAAAAAAAlBQAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					5,
					"left_delete",
					null,
					"BQAAACcFAAAAAAAAJwUAAAAAAAABAAAARyYFAAAAAAAAJgUAAAAAAAABAAAAQiUFAAAAAAAAJQUAAAAAAAABAAAARCQFAAAAAAAAJAUAAAAAAAABAAAAcyMFAAAAAAAAIwUAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAKAUAAAAAAAAoBQAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "D"
					},
					"AQAAACMFAAAAAAAAJAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwUAAAAAAAAjBQAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"left_delete",
					null,
					"AQAAACMFAAAAAAAAIwUAAAAAAAABAAAARA",
					"AQAAAAAAAAABAAAAJAUAAAAAAAAkBQAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": "deB"
					},
					"AwAAACMFAAAAAAAAJAUAAAAAAAAAAAAAJAUAAAAAAAAlBQAAAAAAAAAAAAAlBQAAAAAAACYFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwUAAAAAAAAjBQAAAAAAAAAAAAAAAPC/"
				],
				[
					219,
					1,
					"left_delete",
					null,
					"AQAAACUFAAAAAAAAJQUAAAAAAAABAAAAQg",
					"AQAAAAAAAAABAAAAJgUAAAAAAAAmBQAAAAAAAAAAAAAAAPC/"
				],
				[
					220,
					1,
					"insert",
					{
						"characters": "bugMode"
					},
					"BwAAACUFAAAAAAAAJgUAAAAAAAAAAAAAJgUAAAAAAAAnBQAAAAAAAAAAAAAnBQAAAAAAACgFAAAAAAAAAAAAACgFAAAAAAAAKQUAAAAAAAAAAAAAKQUAAAAAAAAqBQAAAAAAAAAAAAAqBQAAAAAAACsFAAAAAAAAAAAAACsFAAAAAAAALAUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQUAAAAAAAAlBQAAAAAAAAAAAAAAAPC/"
				],
				[
					221,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAACwFAAAAAAAALQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAUAAAAAAAAsBQAAAAAAAAAAAAAAAPC/"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": " B"
					},
					"AgAAAC0FAAAAAAAALgUAAAAAAAAAAAAALgUAAAAAAAAvBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQUAAAAAAAAtBQAAAAAAAAAAAAAAAPC/"
				],
				[
					223,
					1,
					"insert",
					{
						"characters": "oo"
					},
					"AgAAAC8FAAAAAAAAMAUAAAAAAAAAAAAAMAUAAAAAAAAxBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwUAAAAAAAAvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					225,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":5,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "bool"
					},
					"AgAAAC4FAAAAAAAALgUAAAAAAAADAAAAQm9vLgUAAAAAAAAyBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQUAAAAAAAAxBQAAAAAAAAAAAAAAAPC/"
				],
				[
					231,
					1,
					"reindent",
					null,
					"AQAAAD0FAAAAAAAARQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQUAAAAAAAA9BQAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": "pa"
					},
					"AgAAAEUFAAAAAAAARgUAAAAAAAAAAAAARgUAAAAAAABHBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQUAAAAAAABFBQAAAAAAAAAAAAAAAPC/"
				],
				[
					233,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "pass"
					},
					"AgAAAEUFAAAAAAAARQUAAAAAAAACAAAAcGFFBQAAAAAAAEkFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwUAAAAAAABHBQAAAAAAAAAAAAAAAPC/"
				],
				[
					235,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							{
								"newText": "import json\nimport argparse\nfrom pathlib import Path\nimport subprocess\nfrom rich.console import Console\nfrom rich.table import Table\n\n\nclass RunnerApp:\n    def __init__(self) -> None:\n        self.fileTable = Table()  # 创建表格以显示文件信息\n        self.commandTable = Table()  # 创建表格以显示执行的命令\n        self.console = Console(color_system=\"256\", style=None)  # 创建控制台对象\n\n        with open(\"filetype.json\") as configure_file:\n            self.config = json.load(configure_file)  # 从filetype.json文件中加载配置信息\n\n        # 获取文件信息\n        self.file_source = \".\\\\test\\\\a.cpp\"\n        self.file_source = str(Path(file_source).resolve())\n        self.file = str(Path(file_source).name)\n        self.file_name = str(Path(file_source).stem)\n        self.file_type = str(Path(file_source).suffix)[1:]\n        self.file_dir = str(Path(file_source).parent)\n\n        self.exec_cmd = []  # 用于存储要执行的命令\n\n        # 添加文件信息到表格\n        self.fileTable.add_column(\"[bold]Item\")\n        self.fileTable.add_column(\"[red]Value\")\n        self.fileTable.add_row(\"File source\", file_source)\n        self.fileTable.add_row(\"File\", file)\n        self.fileTable.add_row(\"File name\", file_name)\n        self.fileTable.add_row(\"File type\", file_type)\n        self.fileTable.add_row(\"File dir\", file_dir)\n        self.console.print(fileTable)\n\n    def ExecCode(self, debugMode: bool) -> None:\n        pass\n\n\n# 解析命令行参数\nparser = argparse.ArgumentParser()\ngroup = parser.add_mutually_exclusive_group()\ngroup.add_argument('-e', '--encrypt', action='store_true')  # 切换加密选项\nparser.add_argument('text', nargs='*')  # 文本参数\nparser.add_argument('-k', '--key', type=int, default=1)  # 密钥参数\nargs = parser.parse_args()\n\nfileTable = Table()  # 创建表格以显示文件信息\ncommandTable = Table()  # 创建表格以显示执行的命令\nconsole = Console(color_system=\"256\", style=None)  # 创建控制台对象\n\nwith open(\"filetype.json\") as configure_file:\n    config = json.load(configure_file)  # 从filetype.json文件中加载配置信息\n\n# 获取文件信息\nfile_source = \".\\\\test\\\\a.cpp\"\nfile_source = str(Path(file_source).resolve())\nfile = str(Path(file_source).name)\nfile_name = str(Path(file_source).stem)\nfile_type = str(Path(file_source).suffix)[1:]\nfile_dir = str(Path(file_source).parent)\n\nexec_cmd = []  # 用于存储要执行的命令\n\n# 添加文件信息到表格\nfileTable.add_column(\"[bold]Item\")\nfileTable.add_column(\"[red]Value\")\nfileTable.add_row(\"File source\", file_source)\nfileTable.add_row(\"File\", file)\nfileTable.add_row(\"File name\", file_name)\nfileTable.add_row(\"File type\", file_type)\nfileTable.add_row(\"File dir\", file_dir)\nconsole.print(fileTable)\n\n# 根据文件类型查找执行命令\nfor i in config:\n    for j in config[\"filetype\"][i][\"filetype\"]:\n        if j == file_type:\n            exec_cmd = config[i][\"command\"]\n            break\n    if exec_cmd:\n        break\n\n# 添加执行的命令到表格\ncommandTable.add_column(\"\")\ncommandTable.add_column(\"[bold]Command\")\nif exec_cmd:\n    for i in range(len(exec_cmd)):\n        cmd = exec_cmd[i].replace(\"$$\", \"\\n\\n$\\n\\n\")\n        cmd = (\n            cmd.replace(\"$file\", file)\n            .replace(\"$name\", file_name)\n            .replace(\"$type\", file_type)\n            .replace(\"$path\", file_dir)\n            .replace(\"$dir\", file_dir)\n        )\n        cmd = cmd.replace(\"\\n\\n$\\n\\n\", \"$\")\n        commandTable.add_row(str(i + 1), cmd)\n        exec_cmd[i] = cmd\n\n    console.print(commandTable)\n\n    # 执行命令\n    for i in exec_cmd:\n        console.rule()\n        console.print(\">\", i, style=\"cyan\")\n        subprocess.run(i, cwd=file_dir, shell=True)\nelse:\n    console.print(\n        \"No execution command found for file type: .\", file_type, style=\"white on red\"\n    )\n",
								"range":
								{
									"end":
									{
										"character": 0,
										"line": 112
									},
									"start":
									{
										"character": 0,
										"line": 0
									}
								}
							}
						],
						"process_placeholders": false,
						"required_view_version": null
					},
					"AQAAAAAAAAAAAAAAxQ0AAAAAAAAmDwAAaW1wb3J0IGpzb24KaW1wb3J0IGFyZ3BhcnNlCmZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aAppbXBvcnQgc3VicHJvY2Vzcwpmcm9tIHJpY2guY29uc29sZSBpbXBvcnQgQ29uc29sZQpmcm9tIHJpY2gudGFibGUgaW1wb3J0IFRhYmxlCgoKY2xhc3MgUnVubmVyQXBwOgogICAgZGVmIF9faW5pdF9fKHNlbGYpIC0+IE5vbmU6CiAgICAgICAgc2VsZi5maWxlVGFibGUgPSBUYWJsZSgpICAjIOWIm+W7uuihqOagvOS7peaYvuekuuaWh+S7tuS/oeaBrwogICAgICAgIHNlbGYuY29tbWFuZFRhYmxlID0gVGFibGUoKSAgIyDliJvlu7rooajmoLzku6XmmL7npLrmiafooYznmoTlkb3ku6QKICAgICAgICBzZWxmLmNvbnNvbGUgPSBDb25zb2xlKGNvbG9yX3N5c3RlbT0iMjU2Iiwgc3R5bGU9Tm9uZSkgICMg5Yib5bu65o6n5Yi25Y+w5a+56LGhCgogICAgICAgIHdpdGggb3BlbigiZmlsZXR5cGUuanNvbiIpIGFzIGNvbmZpZ3VyZV9maWxlOgogICAgICAgICAgICBzZWxmLmNvbmZpZyA9IGpzb24ubG9hZChjb25maWd1cmVfZmlsZSkgICMg5LuOZmlsZXR5cGUuanNvbuaWh+S7tuS4reWKoOi9vemFjee9ruS/oeaBrwoKICAgICAgICAjIOiOt+WPluaWh+S7tuS/oeaBrwogICAgICAgIHNlbGYuZmlsZV9zb3VyY2UgPSAiLlxcdGVzdFxcYS5jcHAiCiAgICAgICAgc2VsZi5maWxlX3NvdXJjZSA9IHN0cihQYXRoKGZpbGVfc291cmNlKS5yZXNvbHZlKCkpCiAgICAgICAgc2VsZi5maWxlID0gc3RyKFBhdGgoZmlsZV9zb3VyY2UpLm5hbWUpCiAgICAgICAgc2VsZi5maWxlX25hbWUgPSBzdHIoUGF0aChmaWxlX3NvdXJjZSkuc3RlbSkKICAgICAgICBzZWxmLmZpbGVfdHlwZSA9IHN0cihQYXRoKGZpbGVfc291cmNlKS5zdWZmaXgpWzE6XQogICAgICAgIHNlbGYuZmlsZV9kaXIgPSBzdHIoUGF0aChmaWxlX3NvdXJjZSkucGFyZW50KQoKICAgICAgICBzZWxmLmV4ZWNfY21kID0gW10gICMg55So5LqO5a2Y5YKo6KaB5omn6KGM55qE5ZG95LukCgogICAgICAgICMg5re75Yqg5paH5Lu25L+h5oGv5Yiw6KGo5qC8CiAgICAgICAgc2VsZi5maWxlVGFibGUuYWRkX2NvbHVtbigiW2JvbGRdSXRlbSIpCiAgICAgICAgc2VsZi5maWxlVGFibGUuYWRkX2NvbHVtbigiW3JlZF1WYWx1ZSIpCiAgICAgICAgc2VsZi5maWxlVGFibGUuYWRkX3JvdygiRmlsZSBzb3VyY2UiLCBmaWxlX3NvdXJjZSkKICAgICAgICBzZWxmLmZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIiwgZmlsZSkKICAgICAgICBzZWxmLmZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIG5hbWUiLCBmaWxlX25hbWUpCiAgICAgICAgc2VsZi5maWxlVGFibGUuYWRkX3JvdygiRmlsZSB0eXBlIiwgZmlsZV90eXBlKQogICAgICAgIHNlbGYuZmlsZVRhYmxlLmFkZF9yb3coIkZpbGUgZGlyIiwgZmlsZV9kaXIpCiAgICAgICAgc2VsZi5jb25zb2xlLnByaW50KGZpbGVUYWJsZSkKICAgIGRlZiBFeGVjQ29kZShzZWxmLCBkZWJ1Z01vZGU6IGJvb2wpIC0+IE5vbmU6CiAgICAgICAgcGFzcwoKCiMg6Kej5p6Q5ZG95Luk6KGM5Y+C5pWwCnBhcnNlciA9IGFyZ3BhcnNlLkFyZ3VtZW50UGFyc2VyKCkKZ3JvdXAgPSBwYXJzZXIuYWRkX211dHVhbGx5X2V4Y2x1c2l2ZV9ncm91cCgpCmdyb3VwLmFkZF9hcmd1bWVudCgnLWUnLCAnLS1lbmNyeXB0JywgYWN0aW9uPSdzdG9yZV90cnVlJykgICMg5YiH5o2i5Yqg5a+G6YCJ6aG5CnBhcnNlci5hZGRfYXJndW1lbnQoJ3RleHQnLCBuYXJncz0nKicpICAjIOaWh+acrOWPguaVsApwYXJzZXIuYWRkX2FyZ3VtZW50KCctaycsICctLWtleScsIHR5cGU9aW50LCBkZWZhdWx0PTEpICAjIOWvhumSpeWPguaVsAphcmdzID0gcGFyc2VyLnBhcnNlX2FyZ3MoKQoKZmlsZVRhYmxlID0gVGFibGUoKSAgIyDliJvlu7rooajmoLzku6XmmL7npLrmlofku7bkv6Hmga8KY29tbWFuZFRhYmxlID0gVGFibGUoKSAgIyDliJvlu7rooajmoLzku6XmmL7npLrmiafooYznmoTlkb3ku6QKY29uc29sZSA9IENvbnNvbGUoY29sb3Jfc3lzdGVtPSIyNTYiLCBzdHlsZT1Ob25lKSAgIyDliJvlu7rmjqfliLblj7Dlr7nosaEKCndpdGggb3BlbigiZmlsZXR5cGUuanNvbiIpIGFzIGNvbmZpZ3VyZV9maWxlOgogICAgY29uZmlnID0ganNvbi5sb2FkKGNvbmZpZ3VyZV9maWxlKSAgIyDku45maWxldHlwZS5qc29u5paH5Lu25Lit5Yqg6L296YWN572u5L+h5oGvCgojIOiOt+WPluaWh+S7tuS/oeaBrwpmaWxlX3NvdXJjZSA9ICIuXFx0ZXN0XFxhLmNwcCIKZmlsZV9zb3VyY2UgPSBzdHIoUGF0aChmaWxlX3NvdXJjZSkucmVzb2x2ZSgpKQpmaWxlID0gc3RyKFBhdGgoZmlsZV9zb3VyY2UpLm5hbWUpCmZpbGVfbmFtZSA9IHN0cihQYXRoKGZpbGVfc291cmNlKS5zdGVtKQpmaWxlX3R5cGUgPSBzdHIoUGF0aChmaWxlX3NvdXJjZSkuc3VmZml4KVsxOl0KZmlsZV9kaXIgPSBzdHIoUGF0aChmaWxlX3NvdXJjZSkucGFyZW50KQoKZXhlY19jbWQgPSBbXSAgIyDnlKjkuo7lrZjlgqjopoHmiafooYznmoTlkb3ku6QKCiMg5re75Yqg5paH5Lu25L+h5oGv5Yiw6KGo5qC8CmZpbGVUYWJsZS5hZGRfY29sdW1uKCJbYm9sZF1JdGVtIikKZmlsZVRhYmxlLmFkZF9jb2x1bW4oIltyZWRdVmFsdWUiKQpmaWxlVGFibGUuYWRkX3JvdygiRmlsZSBzb3VyY2UiLCBmaWxlX3NvdXJjZSkKZmlsZVRhYmxlLmFkZF9yb3coIkZpbGUiLCBmaWxlKQpmaWxlVGFibGUuYWRkX3JvdygiRmlsZSBuYW1lIiwgZmlsZV9uYW1lKQpmaWxlVGFibGUuYWRkX3JvdygiRmlsZSB0eXBlIiwgZmlsZV90eXBlKQpmaWxlVGFibGUuYWRkX3JvdygiRmlsZSBkaXIiLCBmaWxlX2RpcikKY29uc29sZS5wcmludChmaWxlVGFibGUpCgojIOagueaNruaWh+S7tuexu+Wei+afpeaJvuaJp+ihjOWRveS7pApmb3IgaSBpbiBjb25maWc6CiAgICBmb3IgaiBpbiBjb25maWdbImZpbGV0eXBlIl1baV1bImZpbGV0eXBlIl06CiAgICAgICAgaWYgaiA9PSBmaWxlX3R5cGU6CiAgICAgICAgICAgIGV4ZWNfY21kID0gY29uZmlnW2ldWyJjb21tYW5kIl0KICAgICAgICAgICAgYnJlYWsKICAgIGlmIGV4ZWNfY21kOgogICAgICAgIGJyZWFrCgojIOa3u+WKoOaJp+ihjOeahOWRveS7pOWIsOihqOagvApjb21tYW5kVGFibGUuYWRkX2NvbHVtbigiIikKY29tbWFuZFRhYmxlLmFkZF9jb2x1bW4oIltib2xkXUNvbW1hbmQiKQppZiBleGVjX2NtZDoKICAgIGZvciBpIGluIHJhbmdlKGxlbihleGVjX2NtZCkpOgogICAgICAgIGNtZCA9IGV4ZWNfY21kW2ldLnJlcGxhY2UoIiQkIiwgIlxuXG4kXG5cbiIpCiAgICAgICAgY21kID0gKAogICAgICAgICAgICBjbWQucmVwbGFjZSgiJGZpbGUiLCBmaWxlKQogICAgICAgICAgICAucmVwbGFjZSgiJG5hbWUiLCBmaWxlX25hbWUpCiAgICAgICAgICAgIC5yZXBsYWNlKCIkdHlwZSIsIGZpbGVfdHlwZSkKICAgICAgICAgICAgLnJlcGxhY2UoIiRwYXRoIiwgZmlsZV9kaXIpCiAgICAgICAgICAgIC5yZXBsYWNlKCIkZGlyIiwgZmlsZV9kaXIpCiAgICAgICAgKQogICAgICAgIGNtZCA9IGNtZC5yZXBsYWNlKCJcblxuJFxuXG4iLCAiJCIpCiAgICAgICAgY29tbWFuZFRhYmxlLmFkZF9yb3coc3RyKGkgKyAxKSwgY21kKQogICAgICAgIGV4ZWNfY21kW2ldID0gY21kCgogICAgY29uc29sZS5wcmludChjb21tYW5kVGFibGUpCgogICAgIyDmiafooYzlkb3ku6QKICAgIGZvciBpIGluIGV4ZWNfY21kOgogICAgICAgIGNvbnNvbGUucnVsZSgpCiAgICAgICAgY29uc29sZS5wcmludCgiPiIsIGksIHN0eWxlPSJjeWFuIikKICAgICAgICBzdWJwcm9jZXNzLnJ1bihpLCBjd2Q9ZmlsZV9kaXIsIHNoZWxsPVRydWUpCmVsc2U6CiAgICBjb25zb2xlLnByaW50KAogICAgICAgICJObyBleGVjdXRpb24gY29tbWFuZCBmb3VuZCBmb3IgZmlsZSB0eXBlOiAuIiwgZmlsZV90eXBlLCBzdHlsZT0id2hpdGUgb24gcmVkIgogICAgKQo",
					"AQAAAAAAAAABAAAASQUAAAAAAABJBQAAAAAAAAAAAAAAAPC/"
				],
				[
					242,
					1,
					"paste",
					null,
					"AgAAAEYFAAAAAAAATQkAAAAAAAAAAAAATQkAAAAAAABNCQAAAAAAAAQAAABwYXNz",
					"AQAAAAAAAAABAAAASgUAAAAAAABGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					249,
					2,
					"indent",
					null,
					"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"
				],
				[
					253,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							{
								"newText": "import json\nimport argparse\nfrom pathlib import Path\nimport subprocess\nfrom rich.console import Console\nfrom rich.table import Table\n\n\nclass RunnerApp:\n    def __init__(self) -> None:\n        self.fileTable = Table()  # 创建表格以显示文件信息\n        self.commandTable = Table()  # 创建表格以显示执行的命令\n        self.console = Console(color_system=\"256\", style=None)  # 创建控制台对象\n\n        with open(\"filetype.json\") as configure_file:\n            self.config = json.load(configure_file)  # 从filetype.json文件中加载配置信息\n\n        # 获取文件信息\n        self.file_source = \".\\\\test\\\\a.cpp\"\n        self.file_source = str(Path(file_source).resolve())\n        self.file = str(Path(file_source).name)\n        self.file_name = str(Path(file_source).stem)\n        self.file_type = str(Path(file_source).suffix)[1:]\n        self.file_dir = str(Path(file_source).parent)\n\n        self.exec_cmd = []  # 用于存储要执行的命令\n\n        # 添加文件信息到表格\n        self.fileTable.add_column(\"[bold]Item\")\n        self.fileTable.add_column(\"[red]Value\")\n        self.fileTable.add_row(\"File source\", file_source)\n        self.fileTable.add_row(\"File\", file)\n        self.fileTable.add_row(\"File name\", file_name)\n        self.fileTable.add_row(\"File type\", file_type)\n        self.fileTable.add_row(\"File dir\", file_dir)\n        self.console.print(fileTable)\n\n    def ExecCode(self, debugMode: bool) -> None:\n        # 根据文件类型查找执行命令\n        for i in config:\n            for j in config[\"filetype\"][i][\"filetype\"]:\n                if j == file_type:\n                    exec_cmd = config[i][\"command\"]\n                    break\n            if exec_cmd:\n                break\n\n        # 添加执行的命令到表格\n        commandTable.add_column(\"\")\n        commandTable.add_column(\"[bold]Command\")\n        if exec_cmd:\n            for i in range(len(exec_cmd)):\n                cmd = exec_cmd[i].replace(\"$$\", \"\\n\\n$\\n\\n\")\n                cmd = (\n                    cmd.replace(\"$file\", file)\n                    .replace(\"$name\", file_name)\n                    .replace(\"$type\", file_type)\n                    .replace(\"$path\", file_dir)\n                    .replace(\"$dir\", file_dir)\n                )\n                cmd = cmd.replace(\"\\n\\n$\\n\\n\", \"$\")\n                commandTable.add_row(str(i + 1), cmd)\n                exec_cmd[i] = cmd\n\n            console.print(commandTable)\n\n            # 执行命令\n            for i in exec_cmd:\n                console.rule()\n                console.print(\">\", i, style=\"cyan\")\n                subprocess.run(i, cwd=file_dir, shell=True)\n        else:\n            console.print(\n                \"No execution command found for file type: .\", file_type, style=\"white on red\"\n            )\n\n\n# 解析命令行参数\nparser = argparse.ArgumentParser()\ngroup = parser.add_mutually_exclusive_group()\ngroup.add_argument('-e', '--encrypt', action='store_true')  # 切换加密选项\nparser.add_argument('text', nargs='*')  # 文本参数\nparser.add_argument('-k', '--key', type=int, default=1)  # 密钥参数\nargs = parser.parse_args()\n\nfileTable = Table()  # 创建表格以显示文件信息\ncommandTable = Table()  # 创建表格以显示执行的命令\nconsole = Console(color_system=\"256\", style=None)  # 创建控制台对象\n\nwith open(\"filetype.json\") as configure_file:\n    config = json.load(configure_file)  # 从filetype.json文件中加载配置信息\n\n# 获取文件信息\nfile_source = \".\\\\test\\\\a.cpp\"\nfile_source = str(Path(file_source).resolve())\nfile = str(Path(file_source).name)\nfile_name = str(Path(file_source).stem)\nfile_type = str(Path(file_source).suffix)[1:]\nfile_dir = str(Path(file_source).parent)\n\nexec_cmd = []  # 用于存储要执行的命令\n\n# 添加文件信息到表格\nfileTable.add_column(\"[bold]Item\")\nfileTable.add_column(\"[red]Value\")\nfileTable.add_row(\"File source\", file_source)\nfileTable.add_row(\"File\", file)\nfileTable.add_row(\"File name\", file_name)\nfileTable.add_row(\"File type\", file_type)\nfileTable.add_row(\"File dir\", file_dir)\nconsole.print(fileTable)\n\n# 根据文件类型查找执行命令\nfor i in config:\n    for j in config[\"filetype\"][i][\"filetype\"]:\n        if j == file_type:\n            exec_cmd = config[i][\"command\"]\n            break\n    if exec_cmd:\n        break\n\n# 添加执行的命令到表格\ncommandTable.add_column(\"\")\ncommandTable.add_column(\"[bold]Command\")\nif exec_cmd:\n    for i in range(len(exec_cmd)):\n        cmd = exec_cmd[i].replace(\"$$\", \"\\n\\n$\\n\\n\")\n        cmd = (\n            cmd.replace(\"$file\", file)\n            .replace(\"$name\", file_name)\n            .replace(\"$type\", file_type)\n            .replace(\"$path\", file_dir)\n            .replace(\"$dir\", file_dir)\n        )\n        cmd = cmd.replace(\"\\n\\n$\\n\\n\", \"$\")\n        commandTable.add_row(str(i + 1), cmd)\n        exec_cmd[i] = cmd\n\n    console.print(commandTable)\n\n    # 执行命令\n    for i in exec_cmd:\n        console.rule()\n        console.print(\">\", i, style=\"cyan\")\n        subprocess.run(i, cwd=file_dir, shell=True)\nelse:\n    console.print(\n        \"No execution command found for file type: .\", file_type, style=\"white on red\"\n    )\n",
								"range":
								{
									"end":
									{
										"character": 0,
										"line": 150
									},
									"start":
									{
										"character": 0,
										"line": 0
									}
								}
							}
						],
						"process_placeholders": false,
						"required_view_version": null
					},
					"AQAAAAAAAAAAAAAAzxIAAAAAAAB+FAAAaW1wb3J0IGpzb24KaW1wb3J0IGFyZ3BhcnNlCmZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aAppbXBvcnQgc3VicHJvY2Vzcwpmcm9tIHJpY2guY29uc29sZSBpbXBvcnQgQ29uc29sZQpmcm9tIHJpY2gudGFibGUgaW1wb3J0IFRhYmxlCgoKY2xhc3MgUnVubmVyQXBwOgogICAgZGVmIF9faW5pdF9fKHNlbGYpIC0+IE5vbmU6CiAgICAgICAgc2VsZi5maWxlVGFibGUgPSBUYWJsZSgpICAjIOWIm+W7uuihqOagvOS7peaYvuekuuaWh+S7tuS/oeaBrwogICAgICAgIHNlbGYuY29tbWFuZFRhYmxlID0gVGFibGUoKSAgIyDliJvlu7rooajmoLzku6XmmL7npLrmiafooYznmoTlkb3ku6QKICAgICAgICBzZWxmLmNvbnNvbGUgPSBDb25zb2xlKGNvbG9yX3N5c3RlbT0iMjU2Iiwgc3R5bGU9Tm9uZSkgICMg5Yib5bu65o6n5Yi25Y+w5a+56LGhCgogICAgICAgIHdpdGggb3BlbigiZmlsZXR5cGUuanNvbiIpIGFzIGNvbmZpZ3VyZV9maWxlOgogICAgICAgICAgICBzZWxmLmNvbmZpZyA9IGpzb24ubG9hZChjb25maWd1cmVfZmlsZSkgICMg5LuOZmlsZXR5cGUuanNvbuaWh+S7tuS4reWKoOi9vemFjee9ruS/oeaBrwoKICAgICAgICAjIOiOt+WPluaWh+S7tuS/oeaBrwogICAgICAgIHNlbGYuZmlsZV9zb3VyY2UgPSAiLlxcdGVzdFxcYS5jcHAiCiAgICAgICAgc2VsZi5maWxlX3NvdXJjZSA9IHN0cihQYXRoKGZpbGVfc291cmNlKS5yZXNvbHZlKCkpCiAgICAgICAgc2VsZi5maWxlID0gc3RyKFBhdGgoZmlsZV9zb3VyY2UpLm5hbWUpCiAgICAgICAgc2VsZi5maWxlX25hbWUgPSBzdHIoUGF0aChmaWxlX3NvdXJjZSkuc3RlbSkKICAgICAgICBzZWxmLmZpbGVfdHlwZSA9IHN0cihQYXRoKGZpbGVfc291cmNlKS5zdWZmaXgpWzE6XQogICAgICAgIHNlbGYuZmlsZV9kaXIgPSBzdHIoUGF0aChmaWxlX3NvdXJjZSkucGFyZW50KQoKICAgICAgICBzZWxmLmV4ZWNfY21kID0gW10gICMg55So5LqO5a2Y5YKo6KaB5omn6KGM55qE5ZG95LukCgogICAgICAgICMg5re75Yqg5paH5Lu25L+h5oGv5Yiw6KGo5qC8CiAgICAgICAgc2VsZi5maWxlVGFibGUuYWRkX2NvbHVtbigiW2JvbGRdSXRlbSIpCiAgICAgICAgc2VsZi5maWxlVGFibGUuYWRkX2NvbHVtbigiW3JlZF1WYWx1ZSIpCiAgICAgICAgc2VsZi5maWxlVGFibGUuYWRkX3JvdygiRmlsZSBzb3VyY2UiLCBmaWxlX3NvdXJjZSkKICAgICAgICBzZWxmLmZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIiwgZmlsZSkKICAgICAgICBzZWxmLmZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIG5hbWUiLCBmaWxlX25hbWUpCiAgICAgICAgc2VsZi5maWxlVGFibGUuYWRkX3JvdygiRmlsZSB0eXBlIiwgZmlsZV90eXBlKQogICAgICAgIHNlbGYuZmlsZVRhYmxlLmFkZF9yb3coIkZpbGUgZGlyIiwgZmlsZV9kaXIpCiAgICAgICAgc2VsZi5jb25zb2xlLnByaW50KGZpbGVUYWJsZSkKCiAgICBkZWYgRXhlY0NvZGUoc2VsZiwgZGVidWdNb2RlOiBib29sKSAtPiBOb25lOgogICAgICAgICMg5qC55o2u5paH5Lu257G75Z6L5p+l5om+5omn6KGM5ZG95LukCiAgICAgICAgZm9yIGkgaW4gY29uZmlnOgogICAgICAgICAgICBmb3IgaiBpbiBjb25maWdbImZpbGV0eXBlIl1baV1bImZpbGV0eXBlIl06CiAgICAgICAgICAgICAgICBpZiBqID09IGZpbGVfdHlwZToKICAgICAgICAgICAgICAgICAgICBleGVjX2NtZCA9IGNvbmZpZ1tpXVsiY29tbWFuZCJdCiAgICAgICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgaWYgZXhlY19jbWQ6CiAgICAgICAgICAgICAgICBicmVhawogICAgICAgIAogICAgICAgICMg5re75Yqg5omn6KGM55qE5ZG95Luk5Yiw6KGo5qC8CiAgICAgICAgY29tbWFuZFRhYmxlLmFkZF9jb2x1bW4oIiIpCiAgICAgICAgY29tbWFuZFRhYmxlLmFkZF9jb2x1bW4oIltib2xkXUNvbW1hbmQiKQogICAgICAgIGlmIGV4ZWNfY21kOgogICAgICAgICAgICBmb3IgaSBpbiByYW5nZShsZW4oZXhlY19jbWQpKToKICAgICAgICAgICAgICAgIGNtZCA9IGV4ZWNfY21kW2ldLnJlcGxhY2UoIiQkIiwgIlxuXG4kXG5cbiIpCiAgICAgICAgICAgICAgICBjbWQgPSAoCiAgICAgICAgICAgICAgICAgICAgY21kLnJlcGxhY2UoIiRmaWxlIiwgZmlsZSkKICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgiJG5hbWUiLCBmaWxlX25hbWUpCiAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoIiR0eXBlIiwgZmlsZV90eXBlKQogICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKCIkcGF0aCIsIGZpbGVfZGlyKQogICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKCIkZGlyIiwgZmlsZV9kaXIpCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBjbWQgPSBjbWQucmVwbGFjZSgiXG5cbiRcblxuIiwgIiQiKQogICAgICAgICAgICAgICAgY29tbWFuZFRhYmxlLmFkZF9yb3coc3RyKGkgKyAxKSwgY21kKQogICAgICAgICAgICAgICAgZXhlY19jbWRbaV0gPSBjbWQKICAgICAgICAKICAgICAgICAgICAgY29uc29sZS5wcmludChjb21tYW5kVGFibGUpCiAgICAgICAgCiAgICAgICAgICAgICMg5omn6KGM5ZG95LukCiAgICAgICAgICAgIGZvciBpIGluIGV4ZWNfY21kOgogICAgICAgICAgICAgICAgY29uc29sZS5ydWxlKCkKICAgICAgICAgICAgICAgIGNvbnNvbGUucHJpbnQoIj4iLCBpLCBzdHlsZT0iY3lhbiIpCiAgICAgICAgICAgICAgICBzdWJwcm9jZXNzLnJ1bihpLCBjd2Q9ZmlsZV9kaXIsIHNoZWxsPVRydWUpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgY29uc29sZS5wcmludCgKICAgICAgICAgICAgICAgICJObyBleGVjdXRpb24gY29tbWFuZCBmb3VuZCBmb3IgZmlsZSB0eXBlOiAuIiwgZmlsZV90eXBlLCBzdHlsZT0id2hpdGUgb24gcmVkIgogICAgICAgICAgICApCgoKCiMg6Kej5p6Q5ZG95Luk6KGM5Y+C5pWwCnBhcnNlciA9IGFyZ3BhcnNlLkFyZ3VtZW50UGFyc2VyKCkKZ3JvdXAgPSBwYXJzZXIuYWRkX211dHVhbGx5X2V4Y2x1c2l2ZV9ncm91cCgpCmdyb3VwLmFkZF9hcmd1bWVudCgnLWUnLCAnLS1lbmNyeXB0JywgYWN0aW9uPSdzdG9yZV90cnVlJykgICMg5YiH5o2i5Yqg5a+G6YCJ6aG5CnBhcnNlci5hZGRfYXJndW1lbnQoJ3RleHQnLCBuYXJncz0nKicpICAjIOaWh+acrOWPguaVsApwYXJzZXIuYWRkX2FyZ3VtZW50KCctaycsICctLWtleScsIHR5cGU9aW50LCBkZWZhdWx0PTEpICAjIOWvhumSpeWPguaVsAphcmdzID0gcGFyc2VyLnBhcnNlX2FyZ3MoKQoKZmlsZVRhYmxlID0gVGFibGUoKSAgIyDliJvlu7rooajmoLzku6XmmL7npLrmlofku7bkv6Hmga8KY29tbWFuZFRhYmxlID0gVGFibGUoKSAgIyDliJvlu7rooajmoLzku6XmmL7npLrmiafooYznmoTlkb3ku6QKY29uc29sZSA9IENvbnNvbGUoY29sb3Jfc3lzdGVtPSIyNTYiLCBzdHlsZT1Ob25lKSAgIyDliJvlu7rmjqfliLblj7Dlr7nosaEKCndpdGggb3BlbigiZmlsZXR5cGUuanNvbiIpIGFzIGNvbmZpZ3VyZV9maWxlOgogICAgY29uZmlnID0ganNvbi5sb2FkKGNvbmZpZ3VyZV9maWxlKSAgIyDku45maWxldHlwZS5qc29u5paH5Lu25Lit5Yqg6L296YWN572u5L+h5oGvCgojIOiOt+WPluaWh+S7tuS/oeaBrwpmaWxlX3NvdXJjZSA9ICIuXFx0ZXN0XFxhLmNwcCIKZmlsZV9zb3VyY2UgPSBzdHIoUGF0aChmaWxlX3NvdXJjZSkucmVzb2x2ZSgpKQpmaWxlID0gc3RyKFBhdGgoZmlsZV9zb3VyY2UpLm5hbWUpCmZpbGVfbmFtZSA9IHN0cihQYXRoKGZpbGVfc291cmNlKS5zdGVtKQpmaWxlX3R5cGUgPSBzdHIoUGF0aChmaWxlX3NvdXJjZSkuc3VmZml4KVsxOl0KZmlsZV9kaXIgPSBzdHIoUGF0aChmaWxlX3NvdXJjZSkucGFyZW50KQoKZXhlY19jbWQgPSBbXSAgIyDnlKjkuo7lrZjlgqjopoHmiafooYznmoTlkb3ku6QKCiMg5re75Yqg5paH5Lu25L+h5oGv5Yiw6KGo5qC8CmZpbGVUYWJsZS5hZGRfY29sdW1uKCJbYm9sZF1JdGVtIikKZmlsZVRhYmxlLmFkZF9jb2x1bW4oIltyZWRdVmFsdWUiKQpmaWxlVGFibGUuYWRkX3JvdygiRmlsZSBzb3VyY2UiLCBmaWxlX3NvdXJjZSkKZmlsZVRhYmxlLmFkZF9yb3coIkZpbGUiLCBmaWxlKQpmaWxlVGFibGUuYWRkX3JvdygiRmlsZSBuYW1lIiwgZmlsZV9uYW1lKQpmaWxlVGFibGUuYWRkX3JvdygiRmlsZSB0eXBlIiwgZmlsZV90eXBlKQpmaWxlVGFibGUuYWRkX3JvdygiRmlsZSBkaXIiLCBmaWxlX2RpcikKY29uc29sZS5wcmludChmaWxlVGFibGUpCgojIOagueaNruaWh+S7tuexu+Wei+afpeaJvuaJp+ihjOWRveS7pApmb3IgaSBpbiBjb25maWc6CiAgICBmb3IgaiBpbiBjb25maWdbImZpbGV0eXBlIl1baV1bImZpbGV0eXBlIl06CiAgICAgICAgaWYgaiA9PSBmaWxlX3R5cGU6CiAgICAgICAgICAgIGV4ZWNfY21kID0gY29uZmlnW2ldWyJjb21tYW5kIl0KICAgICAgICAgICAgYnJlYWsKICAgIGlmIGV4ZWNfY21kOgogICAgICAgIGJyZWFrCgojIOa3u+WKoOaJp+ihjOeahOWRveS7pOWIsOihqOagvApjb21tYW5kVGFibGUuYWRkX2NvbHVtbigiIikKY29tbWFuZFRhYmxlLmFkZF9jb2x1bW4oIltib2xkXUNvbW1hbmQiKQppZiBleGVjX2NtZDoKICAgIGZvciBpIGluIHJhbmdlKGxlbihleGVjX2NtZCkpOgogICAgICAgIGNtZCA9IGV4ZWNfY21kW2ldLnJlcGxhY2UoIiQkIiwgIlxuXG4kXG5cbiIpCiAgICAgICAgY21kID0gKAogICAgICAgICAgICBjbWQucmVwbGFjZSgiJGZpbGUiLCBmaWxlKQogICAgICAgICAgICAucmVwbGFjZSgiJG5hbWUiLCBmaWxlX25hbWUpCiAgICAgICAgICAgIC5yZXBsYWNlKCIkdHlwZSIsIGZpbGVfdHlwZSkKICAgICAgICAgICAgLnJlcGxhY2UoIiRwYXRoIiwgZmlsZV9kaXIpCiAgICAgICAgICAgIC5yZXBsYWNlKCIkZGlyIiwgZmlsZV9kaXIpCiAgICAgICAgKQogICAgICAgIGNtZCA9IGNtZC5yZXBsYWNlKCJcblxuJFxuXG4iLCAiJCIpCiAgICAgICAgY29tbWFuZFRhYmxlLmFkZF9yb3coc3RyKGkgKyAxKSwgY21kKQogICAgICAgIGV4ZWNfY21kW2ldID0gY21kCgogICAgY29uc29sZS5wcmludChjb21tYW5kVGFibGUpCgogICAgIyDmiafooYzlkb3ku6QKICAgIGZvciBpIGluIGV4ZWNfY21kOgogICAgICAgIGNvbnNvbGUucnVsZSgpCiAgICAgICAgY29uc29sZS5wcmludCgiPiIsIGksIHN0eWxlPSJjeWFuIikKICAgICAgICBzdWJwcm9jZXNzLnJ1bihpLCBjd2Q9ZmlsZV9kaXIsIHNoZWxsPVRydWUpCmVsc2U6CiAgICBjb25zb2xlLnByaW50KAogICAgICAgICJObyBleGVjdXRpb24gY29tbWFuZCBmb3VuZCBmb3IgZmlsZSB0eXBlOiAuIiwgZmlsZV90eXBlLCBzdHlsZT0id2hpdGUgb24gcmVkIgogICAgKQo",
					"AQAAAAAAAAABAAAAigUAAAAAAACKBQAAAAAAAAAAAAAAAPC/"
				],
				[
					258,
					1,
					"insert",
					{
						"characters": "self."
					},
					"BQAAACYGAAAAAAAAJwYAAAAAAAAAAAAAJwYAAAAAAAAoBgAAAAAAAAAAAAAoBgAAAAAAACkGAAAAAAAAAAAAACkGAAAAAAAAKgYAAAAAAAAAAAAAKgYAAAAAAAArBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgYAAAAAAAAmBgAAAAAAAAAAAAAAAPC/"
				],
				[
					268,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							{
								"annotationId": "default",
								"newText": "self.exec_cmd",
								"range":
								{
									"end":
									{
										"character": 28,
										"line": 42
									},
									"start":
									{
										"character": 20,
										"line": 42
									}
								}
							},
							{
								"annotationId": "default",
								"newText": "self.exec_cmd",
								"range":
								{
									"end":
									{
										"character": 19,
										"line": 50
									},
									"start":
									{
										"character": 11,
										"line": 50
									}
								}
							},
							{
								"annotationId": "default",
								"newText": "self.exec_cmd",
								"range":
								{
									"end":
									{
										"character": 39,
										"line": 51
									},
									"start":
									{
										"character": 31,
										"line": 51
									}
								}
							},
							{
								"annotationId": "default",
								"newText": "self.exec_cmd",
								"range":
								{
									"end":
									{
										"character": 30,
										"line": 52
									},
									"start":
									{
										"character": 22,
										"line": 52
									}
								}
							},
							{
								"annotationId": "default",
								"newText": "self.exec_cmd",
								"range":
								{
									"end":
									{
										"character": 24,
										"line": 62
									},
									"start":
									{
										"character": 16,
										"line": 62
									}
								}
							},
							{
								"annotationId": "default",
								"newText": "self.exec_cmd",
								"range":
								{
									"end":
									{
										"character": 29,
										"line": 67
									},
									"start":
									{
										"character": 21,
										"line": 67
									}
								}
							}
						],
						"process_placeholders": false,
						"required_view_version": null
					},
					"BgAAACsJAAAAAAAAOAkAAAAAAAAIAAAAZXhlY19jbWTHCAAAAAAAANQIAAAAAAAACAAAAGV4ZWNfY21kDAcAAAAAAAAZBwAAAAAAAAgAAABleGVjX2NtZOoGAAAAAAAA9wYAAAAAAAAIAAAAZXhlY19jbWTBBgAAAAAAAM4GAAAAAAAACAAAAGV4ZWNfY21k3QUAAAAAAADqBQAAAAAAAAgAAABleGVjX2NtZA",
					"AQAAAAAAAAABAAAAwQYAAAAAAADBBgAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"BgAAAIQKAAAAAAAAhgoAAAAAAAAAAAAAqQoAAAAAAACrCgAAAAAAAAAAAADZCgAAAAAAANsKAAAAAAAAAAAAACALAAAAAAAAIgsAAAAAAAAAAAAAUQsAAAAAAABTCwAAAAAAAAAAAACTCwAAAAAAAJULAAAAAAAAAAAAAA",
					"AQAAAAAAAAAGAAAAhAoAAAAAAACECgAAAAAAAAAAAAAAAPC/pwoAAAAAAACnCgAAAAAAAAAAAAAAAPC/1QoAAAAAAADVCgAAAAAAAAAAAAAAAPC/GgsAAAAAAAAaCwAAAAAAAAAAAAAAAPC/SQsAAAAAAABJCwAAAAAAAAAAAAAAAPC/iQsAAAAAAACJCwAAAAAAAAAAAAAAAPC/"
				],
				[
					298,
					1,
					"cut",
					null,
					"AQAAAIcAAAAAAAAAhwAAAAAAAACmCgAAY2xhc3MgUnVubmVyQXBwOgogICAgZGVmIF9faW5pdF9fKHNlbGYpIC0+IE5vbmU6CiAgICAgICAgc2VsZi5maWxlVGFibGUgPSBUYWJsZSgpICAjIOWIm+W7uuihqOagvOS7peaYvuekuuaWh+S7tuS/oeaBrwogICAgICAgIHNlbGYuY29tbWFuZFRhYmxlID0gVGFibGUoKSAgIyDliJvlu7rooajmoLzku6XmmL7npLrmiafooYznmoTlkb3ku6QKICAgICAgICBzZWxmLmNvbnNvbGUgPSBDb25zb2xlKGNvbG9yX3N5c3RlbT0iMjU2Iiwgc3R5bGU9Tm9uZSkgICMg5Yib5bu65o6n5Yi25Y+w5a+56LGhCgogICAgICAgIHdpdGggb3BlbigiZmlsZXR5cGUuanNvbiIpIGFzIGNvbmZpZ3VyZV9maWxlOgogICAgICAgICAgICBzZWxmLmNvbmZpZyA9IGpzb24ubG9hZChjb25maWd1cmVfZmlsZSkgICMg5LuOZmlsZXR5cGUuanNvbuaWh+S7tuS4reWKoOi9vemFjee9ruS/oeaBrwoKICAgICAgICAjIOiOt+WPluaWh+S7tuS/oeaBrwogICAgICAgIHNlbGYuZmlsZV9zb3VyY2UgPSAiLlxcdGVzdFxcYS5jcHAiCiAgICAgICAgc2VsZi5maWxlX3NvdXJjZSA9IHN0cihQYXRoKGZpbGVfc291cmNlKS5yZXNvbHZlKCkpCiAgICAgICAgc2VsZi5maWxlID0gc3RyKFBhdGgoZmlsZV9zb3VyY2UpLm5hbWUpCiAgICAgICAgc2VsZi5maWxlX25hbWUgPSBzdHIoUGF0aChmaWxlX3NvdXJjZSkuc3RlbSkKICAgICAgICBzZWxmLmZpbGVfdHlwZSA9IHN0cihQYXRoKGZpbGVfc291cmNlKS5zdWZmaXgpWzE6XQogICAgICAgIHNlbGYuZmlsZV9kaXIgPSBzdHIoUGF0aChmaWxlX3NvdXJjZSkucGFyZW50KQoKICAgICAgICBzZWxmLmV4ZWNfY21kID0gW10gICMg55So5LqO5a2Y5YKo6KaB5omn6KGM55qE5ZG95LukCgogICAgICAgICMg5re75Yqg5paH5Lu25L+h5oGv5Yiw6KGo5qC8CiAgICAgICAgc2VsZi5maWxlVGFibGUuYWRkX2NvbHVtbigiW2JvbGRdSXRlbSIpCiAgICAgICAgc2VsZi5maWxlVGFibGUuYWRkX2NvbHVtbigiW3JlZF1WYWx1ZSIpCiAgICAgICAgc2VsZi5maWxlVGFibGUuYWRkX3JvdygiRmlsZSBzb3VyY2UiLCBmaWxlX3NvdXJjZSkKICAgICAgICBzZWxmLmZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIiwgZmlsZSkKICAgICAgICBzZWxmLmZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIG5hbWUiLCBmaWxlX25hbWUpCiAgICAgICAgc2VsZi5maWxlVGFibGUuYWRkX3JvdygiRmlsZSB0eXBlIiwgZmlsZV90eXBlKQogICAgICAgIHNlbGYuZmlsZVRhYmxlLmFkZF9yb3coIkZpbGUgZGlyIiwgZmlsZV9kaXIpCiAgICAgICAgc2VsZi5jb25zb2xlLnByaW50KGZpbGVUYWJsZSkKCiAgICBkZWYgRXhlY0NvZGUoc2VsZiwgZGVidWdNb2RlOiBib29sKSAtPiBOb25lOgogICAgICAgICMg5qC55o2u5paH5Lu257G75Z6L5p+l5om+5omn6KGM5ZG95LukCiAgICAgICAgZm9yIGkgaW4gY29uZmlnOgogICAgICAgICAgICBmb3IgaiBpbiBjb25maWdbImZpbGV0eXBlIl1baV1bImZpbGV0eXBlIl06CiAgICAgICAgICAgICAgICBpZiBqID09IGZpbGVfdHlwZToKICAgICAgICAgICAgICAgICAgICBzZWxmLmV4ZWNfY21kID0gY29uZmlnW2ldWyJjb21tYW5kIl0KICAgICAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICBpZiBzZWxmLmV4ZWNfY21kOgogICAgICAgICAgICAgICAgYnJlYWsKCiAgICAgICAgIyDmt7vliqDmiafooYznmoTlkb3ku6TliLDooajmoLwKICAgICAgICBjb21tYW5kVGFibGUuYWRkX2NvbHVtbigiIikKICAgICAgICBjb21tYW5kVGFibGUuYWRkX2NvbHVtbigiW2JvbGRdQ29tbWFuZCIpCiAgICAgICAgaWYgc2VsZi5leGVjX2NtZDoKICAgICAgICAgICAgZm9yIGkgaW4gcmFuZ2UobGVuKHNlbGYuZXhlY19jbWQpKToKICAgICAgICAgICAgICAgIGNtZCA9IHNlbGYuZXhlY19jbWRbaV0ucmVwbGFjZSgiJCQiLCAiXG5cbiRcblxuIikKICAgICAgICAgICAgICAgIGNtZCA9ICgKICAgICAgICAgICAgICAgICAgICBjbWQucmVwbGFjZSgiJGZpbGUiLCBmaWxlKQogICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKCIkbmFtZSIsIGZpbGVfbmFtZSkKICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgiJHR5cGUiLCBmaWxlX3R5cGUpCiAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoIiRwYXRoIiwgZmlsZV9kaXIpCiAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoIiRkaXIiLCBmaWxlX2RpcikKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGNtZCA9IGNtZC5yZXBsYWNlKCJcblxuJFxuXG4iLCAiJCIpCiAgICAgICAgICAgICAgICBjb21tYW5kVGFibGUuYWRkX3JvdyhzdHIoaSArIDEpLCBjbWQpCiAgICAgICAgICAgICAgICBzZWxmLmV4ZWNfY21kW2ldID0gY21kCgogICAgICAgICAgICBjb25zb2xlLnByaW50KGNvbW1hbmRUYWJsZSkKCiAgICAgICAgICAgICMg5omn6KGM5ZG95LukCiAgICAgICAgICAgIGZvciBpIGluIHNlbGYuZXhlY19jbWQ6CiAgICAgICAgICAgICAgICBjb25zb2xlLnJ1bGUoKQogICAgICAgICAgICAgICAgY29uc29sZS5wcmludCgiPiIsIGksIHN0eWxlPSJjeWFuIikKICAgICAgICAgICAgICAgIHN1YnByb2Nlc3MucnVuKGksIGN3ZD1maWxlX2Rpciwgc2hlbGw9VHJ1ZSkKICAgICAgICBlbHNlOgogICAgICAgICAgICBjb25zb2xlLnByaW50KAogICAgICAgICAgICAgICAgIk5vIGV4ZWN1dGlvbiBjb21tYW5kIGZvdW5kIGZvciBmaWxlIHR5cGU6IC4iLCBmaWxlX3R5cGUsIHN0eWxlPSJ3aGl0ZSBvbiByZWQiCiAgICAgICAgICAgICk",
					"AQAAAAAAAAABAAAAhwAAAAAAAAB3CgAAAAAAAAAAAAAAAPC/"
				],
				[
					309,
					1,
					"paste",
					null,
					"AQAAAIcAAAAAAAAAdwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwAAAAAAAACHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					312,
					1,
					"left_delete",
					null,
					"AQAAALALAAAAAAAAsAsAAAAAAAAECAAACmZpbGVUYWJsZSA9IFRhYmxlKCkgICMg5Yib5bu66KGo5qC85Lul5pi+56S65paH5Lu25L+h5oGvCmNvbW1hbmRUYWJsZSA9IFRhYmxlKCkgICMg5Yib5bu66KGo5qC85Lul5pi+56S65omn6KGM55qE5ZG95LukCmNvbnNvbGUgPSBDb25zb2xlKGNvbG9yX3N5c3RlbT0iMjU2Iiwgc3R5bGU9Tm9uZSkgICMg5Yib5bu65o6n5Yi25Y+w5a+56LGhCgp3aXRoIG9wZW4oImZpbGV0eXBlLmpzb24iKSBhcyBjb25maWd1cmVfZmlsZToKICAgIGNvbmZpZyA9IGpzb24ubG9hZChjb25maWd1cmVfZmlsZSkgICMg5LuOZmlsZXR5cGUuanNvbuaWh+S7tuS4reWKoOi9vemFjee9ruS/oeaBrwoKIyDojrflj5bmlofku7bkv6Hmga8KZmlsZV9zb3VyY2UgPSAiLlxcdGVzdFxcYS5jcHAiCmZpbGVfc291cmNlID0gc3RyKFBhdGgoZmlsZV9zb3VyY2UpLnJlc29sdmUoKSkKZmlsZSA9IHN0cihQYXRoKGZpbGVfc291cmNlKS5uYW1lKQpmaWxlX25hbWUgPSBzdHIoUGF0aChmaWxlX3NvdXJjZSkuc3RlbSkKZmlsZV90eXBlID0gc3RyKFBhdGgoZmlsZV9zb3VyY2UpLnN1ZmZpeClbMTpdCmZpbGVfZGlyID0gc3RyKFBhdGgoZmlsZV9zb3VyY2UpLnBhcmVudCkKCmV4ZWNfY21kID0gW10gICMg55So5LqO5a2Y5YKo6KaB5omn6KGM55qE5ZG95LukCgojIOa3u+WKoOaWh+S7tuS/oeaBr+WIsOihqOagvApmaWxlVGFibGUuYWRkX2NvbHVtbigiW2JvbGRdSXRlbSIpCmZpbGVUYWJsZS5hZGRfY29sdW1uKCJbcmVkXVZhbHVlIikKZmlsZVRhYmxlLmFkZF9yb3coIkZpbGUgc291cmNlIiwgZmlsZV9zb3VyY2UpCmZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIiwgZmlsZSkKZmlsZVRhYmxlLmFkZF9yb3coIkZpbGUgbmFtZSIsIGZpbGVfbmFtZSkKZmlsZVRhYmxlLmFkZF9yb3coIkZpbGUgdHlwZSIsIGZpbGVfdHlwZSkKZmlsZVRhYmxlLmFkZF9yb3coIkZpbGUgZGlyIiwgZmlsZV9kaXIpCmNvbnNvbGUucHJpbnQoZmlsZVRhYmxlKQoKIyDmoLnmja7mlofku7bnsbvlnovmn6Xmib7miafooYzlkb3ku6QKZm9yIGkgaW4gY29uZmlnOgogICAgZm9yIGogaW4gY29uZmlnWyJmaWxldHlwZSJdW2ldWyJmaWxldHlwZSJdOgogICAgICAgIGlmIGogPT0gZmlsZV90eXBlOgogICAgICAgICAgICBleGVjX2NtZCA9IGNvbmZpZ1tpXVsiY29tbWFuZCJdCiAgICAgICAgICAgIGJyZWFrCiAgICBpZiBleGVjX2NtZDoKICAgICAgICBicmVhawoKIyDmt7vliqDmiafooYznmoTlkb3ku6TliLDooajmoLwKY29tbWFuZFRhYmxlLmFkZF9jb2x1bW4oIiIpCmNvbW1hbmRUYWJsZS5hZGRfY29sdW1uKCJbYm9sZF1Db21tYW5kIikKaWYgZXhlY19jbWQ6CiAgICBmb3IgaSBpbiByYW5nZShsZW4oZXhlY19jbWQpKToKICAgICAgICBjbWQgPSBleGVjX2NtZFtpXS5yZXBsYWNlKCIkJCIsICJcblxuJFxuXG4iKQogICAgICAgIGNtZCA9ICgKICAgICAgICAgICAgY21kLnJlcGxhY2UoIiRmaWxlIiwgZmlsZSkKICAgICAgICAgICAgLnJlcGxhY2UoIiRuYW1lIiwgZmlsZV9uYW1lKQogICAgICAgICAgICAucmVwbGFjZSgiJHR5cGUiLCBmaWxlX3R5cGUpCiAgICAgICAgICAgIC5yZXBsYWNlKCIkcGF0aCIsIGZpbGVfZGlyKQogICAgICAgICAgICAucmVwbGFjZSgiJGRpciIsIGZpbGVfZGlyKQogICAgICAgICkKICAgICAgICBjbWQgPSBjbWQucmVwbGFjZSgiXG5cbiRcblxuIiwgIiQiKQogICAgICAgIGNvbW1hbmRUYWJsZS5hZGRfcm93KHN0cihpICsgMSksIGNtZCkKICAgICAgICBleGVjX2NtZFtpXSA9IGNtZAoKICAgIGNvbnNvbGUucHJpbnQoY29tbWFuZFRhYmxlKQoKICAgICMg5omn6KGM5ZG95LukCiAgICBmb3IgaSBpbiBleGVjX2NtZDoKICAgICAgICBjb25zb2xlLnJ1bGUoKQogICAgICAgIGNvbnNvbGUucHJpbnQoIj4iLCBpLCBzdHlsZT0iY3lhbiIpCiAgICAgICAgc3VicHJvY2Vzcy5ydW4oaSwgY3dkPWZpbGVfZGlyLCBzaGVsbD1UcnVlKQplbHNlOgogICAgY29uc29sZS5wcmludCgKICAgICAgICAiTm8gZXhlY3V0aW9uIGNvbW1hbmQgZm91bmQgZm9yIGZpbGUgdHlwZTogLiIsIGZpbGVfdHlwZSwgc3R5bGU9IndoaXRlIG9uIHJlZCIKICAgICkK",
					"AQAAAAAAAAABAAAA/hIAAAAAAACwCwAAAAAAAAAAAAAAAPC/"
				],
				[
					386,
					1,
					"insert",
					{
						"characters": "self"
					},
					"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"
				],
				[
					387,
					1,
					"insert",
					{
						"characters": "."
					},
					"HQAAAL4KAAAAAAAAvwoAAAAAAAAAAAAAbAoAAAAAAABtCgAAAAAAAAAAAAA4CgAAAAAAADkKAAAAAAAAAAAAAOoJAAAAAAAA6wkAAAAAAAAAAAAAxwkAAAAAAADICQAAAAAAAAAAAABtCQAAAAAAAG4JAAAAAAAAAAAAAFsJAAAAAAAAXAkAAAAAAAAAAAAA/QgAAAAAAAD+CAAAAAAAAAAAAACZCAAAAAAAAJoIAAAAAAAAAAAAAGYIAAAAAAAAZwgAAAAAAAAAAAAAMQgAAAAAAAAyCAAAAAAAAAAAAAD8BwAAAAAAAP0HAAAAAAAAAAAAAMwHAAAAAAAAzQcAAAAAAAAAAAAA0gYAAAAAAADTBgAAAAAAAAAAAACqBgAAAAAAAKsGAAAAAAAAAAAAACUGAAAAAAAAJgYAAAAAAAAAAAAA8gUAAAAAAADzBQAAAAAAAAAAAACzBQAAAAAAALQFAAAAAAAAAAAAAJIFAAAAAAAAkwUAAAAAAAAAAAAABAUAAAAAAAAFBQAAAAAAAAAAAADKBAAAAAAAAMsEAAAAAAAAAAAAAI8EAAAAAAAAkAQAAAAAAAAAAAAAWQQAAAAAAABaBAAAAAAAAAAAAAAhBAAAAAAAACIEAAAAAAAAAAAAADsDAAAAAAAAPAMAAAAAAAAAAAAA/QIAAAAAAAD+AgAAAAAAAAAAAADEAgAAAAAAAMUCAAAAAAAAAAAAAIsCAAAAAAAAjAIAAAAAAAAAAAAAUgIAAAAAAABTAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAdAAAAUgIAAAAAAABSAgAAAAAAAAAAAAAAAPC/iwIAAAAAAACLAgAAAAAAAAAAAAAAAPC/xAIAAAAAAADEAgAAAAAAAAAAAAAAAPC//QIAAAAAAAD9AgAAAAAAAAAAAAAAAPC/OwMAAAAAAAA7AwAAAAAAAAAAAAAAAPC/IQQAAAAAAAAhBAAAAAAAAAAAAAAAAPC/WQQAAAAAAABZBAAAAAAAAAAAAAAAAPC/jwQAAAAAAACPBAAAAAAAAAAAAAAAAPC/ygQAAAAAAADKBAAAAAAAAAAAAAAAAPC/BAUAAAAAAAAEBQAAAAAAAAAAAAAAAPC/kgUAAAAAAACSBQAAAAAAAAAAAAAAAPC/swUAAAAAAACzBQAAAAAAAAAAAAAAAPC/8gUAAAAAAADyBQAAAAAAAAAAAAAAAPC/JQYAAAAAAAAlBgAAAAAAAAAAAAAAAPC/qgYAAAAAAACqBgAAAAAAAAAAAAAAAPC/0gYAAAAAAADSBgAAAAAAAAAAAAAAAPC/zAcAAAAAAADMBwAAAAAAAAAAAAAAAPC//AcAAAAAAAD8BwAAAAAAAAAAAAAAAPC/MQgAAAAAAAAxCAAAAAAAAAAAAAAAAPC/ZggAAAAAAABmCAAAAAAAAAAAAAAAAPC/mQgAAAAAAACZCAAAAAAAAAAAAAAAAPC//QgAAAAAAAD9CAAAAAAAAAAAAAAAAPC/WwkAAAAAAABbCQAAAAAAAAAAAAAAAPC/bQkAAAAAAABtCQAAAAAAAAAAAAAAAPC/xwkAAAAAAADHCQAAAAAAAAAAAAAAAPC/6gkAAAAAAADqCQAAAAAAAAAAAAAAAPC/OAoAAAAAAAA4CgAAAAAAAAAAAAAAAPC/bAoAAAAAAABsCgAAAAAAAAAAAAAAAPC/vgoAAAAAAAC+CgAAAAAAAAAAAAAAAPC/"
				],
				[
					391,
					1,
					"insert",
					{
						"characters": "self."
					},
					"BQAAADMFAAAAAAAANAUAAAAAAAAAAAAANAUAAAAAAAA1BQAAAAAAAAAAAAA1BQAAAAAAADYFAAAAAAAAAAAAADYFAAAAAAAANwUAAAAAAAAAAAAANwUAAAAAAAA4BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwUAAAAAAAAzBQAAAAAAAAAAAAAAAPC/"
				],
				[
					398,
					1,
					"left_delete",
					null,
					"BgAAACkMAAAAAAAAKQwAAAAAAAACAAAAIyDnCwAAAAAAAOcLAAAAAAAAAgAAACMgtgsAAAAAAAC2CwAAAAAAAAIAAAAjIG8LAAAAAAAAbwsAAAAAAAACAAAAIyA/CwAAAAAAAD8LAAAAAAAAAgAAACMgGgsAAAAAAAAaCwAAAAAAAAIAAAAjIA",
					"AQAAAAAAAAAGAAAAHAsAAAAAAAAaCwAAAAAAAAAAAAAAAPC/QQsAAAAAAAA/CwAAAAAAAAAAAAAAAPC/cQsAAAAAAABvCwAAAAAAAAAAAAAAAPC/uAsAAAAAAAC2CwAAAAAAAAAAAAAAAPC/6QsAAAAAAADnCwAAAAAAAAAAAAAAAPC/KwwAAAAAAAApDAAAAAAAAAAAAAAAAPC/"
				],
				[
					412,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAOwBAAAAAAAA7QEAAAAAAAAAAAAA7QEAAAAAAADuAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AEAAAAAAADsAQAAAAAAAAAAAAAAAPC/"
				],
				[
					414,
					1,
					"reindent",
					null,
					"AQAAAO0BAAAAAAAA+QEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QEAAAAAAADtAQAAAAAAAAAAAAAAAAAA"
				],
				[
					415,
					2,
					"left_delete",
					null,
					"AgAAAPUBAAAAAAAA9QEAAAAAAAAEAAAAICAgIPEBAAAAAAAA8QEAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAA+QEAAAAAAAD5AQAAAAAAAAAAAAAAAPC/"
				],
				[
					416,
					1,
					"insert",
					{
						"characters": "def"
					},
					"AwAAAPEBAAAAAAAA8gEAAAAAAAAAAAAA8gEAAAAAAADzAQAAAAAAAAAAAADzAQAAAAAAAPQBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QEAAAAAAADxAQAAAAAAAAAAAAAAAPC/"
				],
				[
					417,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPQBAAAAAAAA9QEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AEAAAAAAAD0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					419,
					1,
					"paste",
					null,
					"AQAAAPUBAAAAAAAA/gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QEAAAAAAAD1AQAAAAAAAAAAAAAAAPC/"
				],
				[
					425,
					1,
					"left_delete",
					null,
					"AQAAAPUBAAAAAAAA9QEAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAA9gEAAAAAAAD2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					426,
					1,
					"insert",
					{
						"characters": "P"
					},
					"AQAAAPUBAAAAAAAA9gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QEAAAAAAAD1AQAAAAAAAAAAAAAAAPC/"
				],
				[
					429,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAP4BAAAAAAAAAAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gEAAAAAAAD+AQAAAAAAAAAAAAAAAPC/"
				],
				[
					430,
					1,
					"insert",
					{
						"characters": "se"
					},
					"AgAAAP8BAAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAABAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wEAAAAAAAD/AQAAAAAAAAAAAAAAAPC/"
				],
				[
					431,
					1,
					"insert_completion",
					{
						"completion": "self",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "self"
					},
					"AgAAAP8BAAAAAAAA/wEAAAAAAAACAAAAc2X/AQAAAAAAAAMCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQIAAAAAAAABAgAAAAAAAAAAAAAAAPC/"
				],
				[
					432,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAMCAAAAAAAABAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwIAAAAAAAADAgAAAAAAAAAAAAAAAPC/"
				],
				[
					433,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAQCAAAAAAAABQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAIAAAAAAAAEAgAAAAAAAAAAAAAAAPC/"
				],
				[
					434,
					2,
					"left_delete",
					null,
					"AgAAAAQCAAAAAAAABAIAAAAAAAABAAAAIAMCAAAAAAAAAwIAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAABQIAAAAAAAAFAgAAAAAAAAAAAAAAAPC/"
				],
				[
					435,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAMCAAAAAAAABAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwIAAAAAAAADAgAAAAAAAAAAAAAAAPC/"
				],
				[
					436,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAAAQCAAAAAAAABQIAAAAAAAAAAAAABQIAAAAAAAAGAgAAAAAAAAAAAAAGAgAAAAAAAAcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAIAAAAAAAAEAgAAAAAAAAAAAAAAAPC/"
				],
				[
					437,
					2,
					"left_delete",
					null,
					"AgAAAAYCAAAAAAAABgIAAAAAAAABAAAAcwUCAAAAAAAABQIAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAABwIAAAAAAAAHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					438,
					1,
					"insert",
					{
						"characters": "De"
					},
					"AgAAAAUCAAAAAAAABgIAAAAAAAAAAAAABgIAAAAAAAAHAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQIAAAAAAAAFAgAAAAAAAAAAAAAAAPC/"
				],
				[
					439,
					2,
					"left_delete",
					null,
					"AgAAAAYCAAAAAAAABgIAAAAAAAABAAAAZQUCAAAAAAAABQIAAAAAAAABAAAARA",
					"AQAAAAAAAAABAAAABwIAAAAAAAAHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					440,
					1,
					"insert",
					{
						"characters": "de"
					},
					"AgAAAAUCAAAAAAAABgIAAAAAAAAAAAAABgIAAAAAAAAHAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQIAAAAAAAAFAgAAAAAAAAAAAAAAAPC/"
				],
				[
					441,
					2,
					"left_delete",
					null,
					"AgAAAAYCAAAAAAAABgIAAAAAAAABAAAAZQUCAAAAAAAABQIAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAABwIAAAAAAAAHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					442,
					1,
					"insert",
					{
						"characters": "is"
					},
					"AgAAAAUCAAAAAAAABgIAAAAAAAAAAAAABgIAAAAAAAAHAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQIAAAAAAAAFAgAAAAAAAAAAAAAAAPC/"
				],
				[
					443,
					1,
					"insert",
					{
						"characters": "DBG"
					},
					"AwAAAAcCAAAAAAAACAIAAAAAAAAAAAAACAIAAAAAAAAJAgAAAAAAAAAAAAAJAgAAAAAAAAoCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwIAAAAAAAAHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					444,
					2,
					"left_delete",
					null,
					"AgAAAAkCAAAAAAAACQIAAAAAAAABAAAARwgCAAAAAAAACAIAAAAAAAABAAAAQg",
					"AQAAAAAAAAABAAAACgIAAAAAAAAKAgAAAAAAAAAAAAAAAPC/"
				],
				[
					445,
					1,
					"insert",
					{
						"characters": "ebug"
					},
					"BAAAAAgCAAAAAAAACQIAAAAAAAAAAAAACQIAAAAAAAAKAgAAAAAAAAAAAAAKAgAAAAAAAAsCAAAAAAAAAAAAAAsCAAAAAAAADAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAIAAAAAAAAIAgAAAAAAAAAAAAAAAPC/"
				],
				[
					447,
					3,
					"left_delete",
					null,
					"AwAAAAcCAAAAAAAABwIAAAAAAAABAAAARAYCAAAAAAAABgIAAAAAAAABAAAAcwUCAAAAAAAABQIAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAACAIAAAAAAAAIAgAAAAAAAAAAAAAAAPC/"
				],
				[
					448,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAAUCAAAAAAAABgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQIAAAAAAAAFAgAAAAAAAAAAAAAAAPC/"
				],
				[
					450,
					1,
					"insert",
					{
						"characters": "Mode:"
					},
					"BQAAAAoCAAAAAAAACwIAAAAAAAAAAAAACwIAAAAAAAAMAgAAAAAAAAAAAAAMAgAAAAAAAA0CAAAAAAAAAAAAAA0CAAAAAAAADgIAAAAAAAAAAAAADgIAAAAAAAAPAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgIAAAAAAAAKAgAAAAAAAAAAAAAAAPC/"
				],
				[
					451,
					1,
					"insert",
					{
						"characters": " Bo"
					},
					"AwAAAA8CAAAAAAAAEAIAAAAAAAAAAAAAEAIAAAAAAAARAgAAAAAAAAAAAAARAgAAAAAAABICAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwIAAAAAAAAPAgAAAAAAAAAAAAAAAPC/"
				],
				[
					452,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAABICAAAAAAAAEwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgIAAAAAAAASAgAAAAAAAAAAAAAAAPC/"
				],
				[
					454,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "bool"
					},
					"AgAAABACAAAAAAAAEAIAAAAAAAADAAAAQm9vEAIAAAAAAAAUAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwIAAAAAAAATAgAAAAAAAAAAAAAAAPC/"
				],
				[
					456,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAABUCAAAAAAAAFgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQIAAAAAAAAVAgAAAAAAAAAAAAAAAPC/"
				],
				[
					458,
					1,
					"insert",
					{
						"characters": " --"
					},
					"AwAAABUCAAAAAAAAFgIAAAAAAAAAAAAAFgIAAAAAAAAXAgAAAAAAAAAAAAAXAgAAAAAAABgCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQIAAAAAAAAVAgAAAAAAAAAAAAAAAPC/"
				],
				[
					459,
					1,
					"left_delete",
					null,
					"AQAAABcCAAAAAAAAFwIAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAGAIAAAAAAAAYAgAAAAAAAAAAAAAAAPC/"
				],
				[
					460,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAABcCAAAAAAAAGAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwIAAAAAAAAXAgAAAAAAAAAAAAAAAPC/"
				],
				[
					461,
					1,
					"insert",
					{
						"characters": " N"
					},
					"AgAAABgCAAAAAAAAGQIAAAAAAAAAAAAAGQIAAAAAAAAaAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAIAAAAAAAAYAgAAAAAAAAAAAAAAAPC/"
				],
				[
					462,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":1,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "None"
					},
					"AgAAABkCAAAAAAAAGQIAAAAAAAABAAAAThkCAAAAAAAAHQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgIAAAAAAAAaAgAAAAAAAAAAAAAAAPC/"
				],
				[
					464,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAB4CAAAAAAAAHwIAAAAAAAAAAAAAHwIAAAAAAAAjAgAAAAAAAAAAAAAjAgAAAAAAACcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgIAAAAAAAAeAgAAAAAAAAAAAAAAAPC/"
				],
				[
					465,
					2,
					"left_delete",
					null,
					"AgAAACMCAAAAAAAAIwIAAAAAAAAEAAAAICAgIB8CAAAAAAAAHwIAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAJwIAAAAAAAAnAgAAAAAAAAAAAAAAAPC/"
				],
				[
					467,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							{
								"newText": "import json\nimport argparse\nfrom pathlib import Path\nimport subprocess\nfrom rich.console import Console\nfrom rich.table import Table\n\n\nclass RunnerApp:\n    def __init__(self) -> None:\n        self.fileTable = Table()  # 创建表格以显示文件信息\n        self.commandTable = Table()  # 创建表格以显示执行的命令\n        self.console = Console(color_system=\"256\", style=None)  # 创建控制台对象\n\n        with open(\"filetype.json\") as configure_file:\n            self.config = json.load(configure_file)  # 从filetype.json文件中加载配置信息\n\n    def ParseFile(self, debugMode: bool) -> None:\n\n        # 获取文件信息\n        self.file_source = \".\\\\test\\\\a.cpp\"\n        self.file_source = str(Path(self.file_source).resolve())\n        self.file = str(Path(self.file_source).name)\n        self.file_name = str(Path(self.file_source).stem)\n        self.file_type = str(Path(self.file_source).suffix)[1:]\n        self.file_dir = str(Path(self.file_source).parent)\n\n        self.exec_cmd = []  # 用于存储要执行的命令\n\n        # 添加文件信息到表格\n        self.fileTable.add_column(\"[bold]Item\")\n        self.fileTable.add_column(\"[red]Value\")\n        self.fileTable.add_row(\"File source\", self.file_source)\n        self.fileTable.add_row(\"File\", self.file)\n        self.fileTable.add_row(\"File name\", self.file_name)\n        self.fileTable.add_row(\"File type\", self.file_type)\n        self.fileTable.add_row(\"File dir\", self.file_dir)\n        self.console.print(self.fileTable)\n\n    def ExecCode(self, debugMode: bool) -> None:\n        # 根据文件类型查找执行命令\n        for i in self.config:\n            for j in self.config[\"filetype\"][i][\"filetype\"]:\n                if j == self.file_type:\n                    self.exec_cmd = self.config[i][\"command\"]\n                    break\n            if self.exec_cmd:\n                break\n\n        # 添加执行的命令到表格\n        self.commandTable.add_column(\"\")\n        self.commandTable.add_column(\"[bold]Command\")\n        if self.exec_cmd:\n            for i in range(len(self.exec_cmd)):\n                cmd = self.exec_cmd[i].replace(\"$$\", \"\\n\\n$\\n\\n\")\n                cmd = (\n                    cmd.replace(\"$file\", self.file)\n                    .replace(\"$name\", self.file_name)\n                    .replace(\"$type\", self.file_type)\n                    .replace(\"$path\", self.file_dir)\n                    .replace(\"$dir\", self.file_dir)\n                )\n                cmd = cmd.replace(\"\\n\\n$\\n\\n\", \"$\")\n                self.commandTable.add_row(str(i + 1), cmd)\n                self.exec_cmd[i] = cmd\n\n            self.console.print(self.commandTable)\n\n            # 执行命令\n            for i in self.exec_cmd:\n                self.console.rule()\n                self.console.print(\">\", i, style=\"cyan\")\n                subprocess.run(i, cwd=self.file_dir, shell=True)\n        else:\n            self.console.print(\n                \"No execution command found for file type: .\", self.file_type, style=\"white on red\"\n            )\n\n\n# 解析命令行参数\nparser = argparse.ArgumentParser()\ngroup = parser.add_mutually_exclusive_group()\ngroup.add_argument('-e', '--encrypt', action='store_true')  # 切换加密选项\nparser.add_argument('text', nargs='*')  # 文本参数\nparser.add_argument('-k', '--key', type=int, default=1)  # 密钥参数\nargs = parser.parse_args()\n",
								"range":
								{
									"end":
									{
										"character": 0,
										"line": 87
									},
									"start":
									{
										"character": 0,
										"line": 0
									}
								}
							}
						],
						"process_placeholders": false,
						"required_view_version": null
					},
					"AQAAAAAAAAAAAAAAbQwAAAAAAABODQAAaW1wb3J0IGpzb24KaW1wb3J0IGFyZ3BhcnNlCmZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aAppbXBvcnQgc3VicHJvY2Vzcwpmcm9tIHJpY2guY29uc29sZSBpbXBvcnQgQ29uc29sZQpmcm9tIHJpY2gudGFibGUgaW1wb3J0IFRhYmxlCgoKY2xhc3MgUnVubmVyQXBwOgogICAgZGVmIF9faW5pdF9fKHNlbGYpIC0+IE5vbmU6CiAgICAgICAgc2VsZi5maWxlVGFibGUgPSBUYWJsZSgpICAjIOWIm+W7uuihqOagvOS7peaYvuekuuaWh+S7tuS/oeaBrwogICAgICAgIHNlbGYuY29tbWFuZFRhYmxlID0gVGFibGUoKSAgIyDliJvlu7rooajmoLzku6XmmL7npLrmiafooYznmoTlkb3ku6QKICAgICAgICBzZWxmLmNvbnNvbGUgPSBDb25zb2xlKGNvbG9yX3N5c3RlbT0iMjU2Iiwgc3R5bGU9Tm9uZSkgICMg5Yib5bu65o6n5Yi25Y+w5a+56LGhCgogICAgICAgIHdpdGggb3BlbigiZmlsZXR5cGUuanNvbiIpIGFzIGNvbmZpZ3VyZV9maWxlOgogICAgICAgICAgICBzZWxmLmNvbmZpZyA9IGpzb24ubG9hZChjb25maWd1cmVfZmlsZSkgICMg5LuOZmlsZXR5cGUuanNvbuaWh+S7tuS4reWKoOi9vemFjee9ruS/oeaBrwoKICAgIGRlZiBQYXJzZUZpbGUoc2VsZiwgZGVidWdNb2RlOiBib29sKSAtPiBOb25lOgoKCiAgICAgICAgIyDojrflj5bmlofku7bkv6Hmga8KICAgICAgICBzZWxmLmZpbGVfc291cmNlID0gIi5cXHRlc3RcXGEuY3BwIgogICAgICAgIHNlbGYuZmlsZV9zb3VyY2UgPSBzdHIoUGF0aChzZWxmLmZpbGVfc291cmNlKS5yZXNvbHZlKCkpCiAgICAgICAgc2VsZi5maWxlID0gc3RyKFBhdGgoc2VsZi5maWxlX3NvdXJjZSkubmFtZSkKICAgICAgICBzZWxmLmZpbGVfbmFtZSA9IHN0cihQYXRoKHNlbGYuZmlsZV9zb3VyY2UpLnN0ZW0pCiAgICAgICAgc2VsZi5maWxlX3R5cGUgPSBzdHIoUGF0aChzZWxmLmZpbGVfc291cmNlKS5zdWZmaXgpWzE6XQogICAgICAgIHNlbGYuZmlsZV9kaXIgPSBzdHIoUGF0aChzZWxmLmZpbGVfc291cmNlKS5wYXJlbnQpCgogICAgICAgIHNlbGYuZXhlY19jbWQgPSBbXSAgIyDnlKjkuo7lrZjlgqjopoHmiafooYznmoTlkb3ku6QKCiAgICAgICAgIyDmt7vliqDmlofku7bkv6Hmga/liLDooajmoLwKICAgICAgICBzZWxmLmZpbGVUYWJsZS5hZGRfY29sdW1uKCJbYm9sZF1JdGVtIikKICAgICAgICBzZWxmLmZpbGVUYWJsZS5hZGRfY29sdW1uKCJbcmVkXVZhbHVlIikKICAgICAgICBzZWxmLmZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIHNvdXJjZSIsIHNlbGYuZmlsZV9zb3VyY2UpCiAgICAgICAgc2VsZi5maWxlVGFibGUuYWRkX3JvdygiRmlsZSIsIHNlbGYuZmlsZSkKICAgICAgICBzZWxmLmZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIG5hbWUiLCBzZWxmLmZpbGVfbmFtZSkKICAgICAgICBzZWxmLmZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIHR5cGUiLCBzZWxmLmZpbGVfdHlwZSkKICAgICAgICBzZWxmLmZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIGRpciIsIHNlbGYuZmlsZV9kaXIpCiAgICAgICAgc2VsZi5jb25zb2xlLnByaW50KHNlbGYuZmlsZVRhYmxlKQoKICAgIGRlZiBFeGVjQ29kZShzZWxmLCBkZWJ1Z01vZGU6IGJvb2wpIC0+IE5vbmU6CiAgICAgICAgIyDmoLnmja7mlofku7bnsbvlnovmn6Xmib7miafooYzlkb3ku6QKICAgICAgICBmb3IgaSBpbiBzZWxmLmNvbmZpZzoKICAgICAgICAgICAgZm9yIGogaW4gc2VsZi5jb25maWdbImZpbGV0eXBlIl1baV1bImZpbGV0eXBlIl06CiAgICAgICAgICAgICAgICBpZiBqID09IHNlbGYuZmlsZV90eXBlOgogICAgICAgICAgICAgICAgICAgIHNlbGYuZXhlY19jbWQgPSBzZWxmLmNvbmZpZ1tpXVsiY29tbWFuZCJdCiAgICAgICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgaWYgc2VsZi5leGVjX2NtZDoKICAgICAgICAgICAgICAgIGJyZWFrCgogICAgICAgICMg5re75Yqg5omn6KGM55qE5ZG95Luk5Yiw6KGo5qC8CiAgICAgICAgc2VsZi5jb21tYW5kVGFibGUuYWRkX2NvbHVtbigiIikKICAgICAgICBzZWxmLmNvbW1hbmRUYWJsZS5hZGRfY29sdW1uKCJbYm9sZF1Db21tYW5kIikKICAgICAgICBpZiBzZWxmLmV4ZWNfY21kOgogICAgICAgICAgICBmb3IgaSBpbiByYW5nZShsZW4oc2VsZi5leGVjX2NtZCkpOgogICAgICAgICAgICAgICAgY21kID0gc2VsZi5leGVjX2NtZFtpXS5yZXBsYWNlKCIkJCIsICJcblxuJFxuXG4iKQogICAgICAgICAgICAgICAgY21kID0gKAogICAgICAgICAgICAgICAgICAgIGNtZC5yZXBsYWNlKCIkZmlsZSIsIHNlbGYuZmlsZSkKICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgiJG5hbWUiLCBzZWxmLmZpbGVfbmFtZSkKICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgiJHR5cGUiLCBzZWxmLmZpbGVfdHlwZSkKICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgiJHBhdGgiLCBzZWxmLmZpbGVfZGlyKQogICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKCIkZGlyIiwgc2VsZi5maWxlX2RpcikKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGNtZCA9IGNtZC5yZXBsYWNlKCJcblxuJFxuXG4iLCAiJCIpCiAgICAgICAgICAgICAgICBzZWxmLmNvbW1hbmRUYWJsZS5hZGRfcm93KHN0cihpICsgMSksIGNtZCkKICAgICAgICAgICAgICAgIHNlbGYuZXhlY19jbWRbaV0gPSBjbWQKCiAgICAgICAgICAgIHNlbGYuY29uc29sZS5wcmludChzZWxmLmNvbW1hbmRUYWJsZSkKCiAgICAgICAgICAgICMg5omn6KGM5ZG95LukCiAgICAgICAgICAgIGZvciBpIGluIHNlbGYuZXhlY19jbWQ6CiAgICAgICAgICAgICAgICBzZWxmLmNvbnNvbGUucnVsZSgpCiAgICAgICAgICAgICAgICBzZWxmLmNvbnNvbGUucHJpbnQoIj4iLCBpLCBzdHlsZT0iY3lhbiIpCiAgICAgICAgICAgICAgICBzdWJwcm9jZXNzLnJ1bihpLCBjd2Q9c2VsZi5maWxlX2Rpciwgc2hlbGw9VHJ1ZSkKICAgICAgICBlbHNlOgogICAgICAgICAgICBzZWxmLmNvbnNvbGUucHJpbnQoCiAgICAgICAgICAgICAgICAiTm8gZXhlY3V0aW9uIGNvbW1hbmQgZm91bmQgZm9yIGZpbGUgdHlwZTogLiIsIHNlbGYuZmlsZV90eXBlLCBzdHlsZT0id2hpdGUgb24gcmVkIgogICAgICAgICAgICApCgoKIyDop6PmnpDlkb3ku6TooYzlj4LmlbAKcGFyc2VyID0gYXJncGFyc2UuQXJndW1lbnRQYXJzZXIoKQpncm91cCA9IHBhcnNlci5hZGRfbXV0dWFsbHlfZXhjbHVzaXZlX2dyb3VwKCkKZ3JvdXAuYWRkX2FyZ3VtZW50KCctZScsICctLWVuY3J5cHQnLCBhY3Rpb249J3N0b3JlX3RydWUnKSAgIyDliIfmjaLliqDlr4bpgInpobkKcGFyc2VyLmFkZF9hcmd1bWVudCgndGV4dCcsIG5hcmdzPScqJykgICMg5paH5pys5Y+C5pWwCnBhcnNlci5hZGRfYXJndW1lbnQoJy1rJywgJy0ta2V5JywgdHlwZT1pbnQsIGRlZmF1bHQ9MSkgICMg5a+G6ZKl5Y+C5pWwCmFyZ3MgPSBwYXJzZXIucGFyc2VfYXJncygpCg",
					"AQAAAAAAAAABAAAAHwIAAAAAAAAfAgAAAAAAAAAAAAAAAPC/"
				],
				[
					476,
					1,
					"cut",
					null,
					"AQAAAG8BAAAAAAAAbwEAAAAAAACQAAAAd2l0aCBvcGVuKCJmaWxldHlwZS5qc29uIikgYXMgY29uZmlndXJlX2ZpbGU6CiAgICAgICAgICAgIHNlbGYuY29uZmlnID0ganNvbi5sb2FkKGNvbmZpZ3VyZV9maWxlKSAgIyDku45maWxldHlwZS5qc29u5paH5Lu25Lit5Yqg6L296YWN572u5L+h5oGv",
					"AQAAAAAAAAABAAAAbwEAAAAAAADrAQAAAAAAAAAAAAAAAPC/"
				],
				[
					478,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							{
								"newText": "import json\nimport argparse\nfrom pathlib import Path\nimport subprocess\nfrom rich.console import Console\nfrom rich.table import Table\n\n\nclass RunnerApp:\n    def __init__(self) -> None:\n        self.fileTable = Table()  # 创建表格以显示文件信息\n        self.commandTable = Table()  # 创建表格以显示执行的命令\n        self.console = Console(color_system=\"256\", style=None)  # 创建控制台对象\n\n    def ParseFile(self, debugMode: bool) -> None:\n\n        # 获取文件信息\n        self.file_source = \".\\\\test\\\\a.cpp\"\n        self.file_source = str(Path(self.file_source).resolve())\n        self.file = str(Path(self.file_source).name)\n        self.file_name = str(Path(self.file_source).stem)\n        self.file_type = str(Path(self.file_source).suffix)[1:]\n        self.file_dir = str(Path(self.file_source).parent)\n\n        self.exec_cmd = []  # 用于存储要执行的命令\n\n        # 添加文件信息到表格\n        self.fileTable.add_column(\"[bold]Item\")\n        self.fileTable.add_column(\"[red]Value\")\n        self.fileTable.add_row(\"File source\", self.file_source)\n        self.fileTable.add_row(\"File\", self.file)\n        self.fileTable.add_row(\"File name\", self.file_name)\n        self.fileTable.add_row(\"File type\", self.file_type)\n        self.fileTable.add_row(\"File dir\", self.file_dir)\n        self.console.print(self.fileTable)\n\n    def ExecCode(self, debugMode: bool) -> None:\n        # 根据文件类型查找执行命令\n        for i in self.config:\n            for j in self.config[\"filetype\"][i][\"filetype\"]:\n                if j == self.file_type:\n                    self.exec_cmd = self.config[i][\"command\"]\n                    break\n            if self.exec_cmd:\n                break\n\n        # 添加执行的命令到表格\n        self.commandTable.add_column(\"\")\n        self.commandTable.add_column(\"[bold]Command\")\n        if self.exec_cmd:\n            for i in range(len(self.exec_cmd)):\n                cmd = self.exec_cmd[i].replace(\"$$\", \"\\n\\n$\\n\\n\")\n                cmd = (\n                    cmd.replace(\"$file\", self.file)\n                    .replace(\"$name\", self.file_name)\n                    .replace(\"$type\", self.file_type)\n                    .replace(\"$path\", self.file_dir)\n                    .replace(\"$dir\", self.file_dir)\n                )\n                cmd = cmd.replace(\"\\n\\n$\\n\\n\", \"$\")\n                self.commandTable.add_row(str(i + 1), cmd)\n                self.exec_cmd[i] = cmd\n\n            self.console.print(self.commandTable)\n\n            # 执行命令\n            for i in self.exec_cmd:\n                self.console.rule()\n                self.console.print(\">\", i, style=\"cyan\")\n                subprocess.run(i, cwd=self.file_dir, shell=True)\n        else:\n            self.console.print(\n                \"No execution command found for file type: .\", self.file_type, style=\"white on red\"\n            )\n\n\n# 解析命令行参数\nparser = argparse.ArgumentParser()\ngroup = parser.add_mutually_exclusive_group()\ngroup.add_argument('-e', '--encrypt', action='store_true')  # 切换加密选项\nparser.add_argument('text', nargs='*')  # 文本参数\nparser.add_argument('-k', '--key', type=int, default=1)  # 密钥参数\nargs = parser.parse_args()\n",
								"range":
								{
									"end":
									{
										"character": 0,
										"line": 85
									},
									"start":
									{
										"character": 0,
										"line": 0
									}
								}
							}
						],
						"process_placeholders": false,
						"required_view_version": null
					},
					"AQAAAAAAAAAAAAAA5wsAAAAAAAC9DAAAaW1wb3J0IGpzb24KaW1wb3J0IGFyZ3BhcnNlCmZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aAppbXBvcnQgc3VicHJvY2Vzcwpmcm9tIHJpY2guY29uc29sZSBpbXBvcnQgQ29uc29sZQpmcm9tIHJpY2gudGFibGUgaW1wb3J0IFRhYmxlCgoKY2xhc3MgUnVubmVyQXBwOgogICAgZGVmIF9faW5pdF9fKHNlbGYpIC0+IE5vbmU6CiAgICAgICAgc2VsZi5maWxlVGFibGUgPSBUYWJsZSgpICAjIOWIm+W7uuihqOagvOS7peaYvuekuuaWh+S7tuS/oeaBrwogICAgICAgIHNlbGYuY29tbWFuZFRhYmxlID0gVGFibGUoKSAgIyDliJvlu7rooajmoLzku6XmmL7npLrmiafooYznmoTlkb3ku6QKICAgICAgICBzZWxmLmNvbnNvbGUgPSBDb25zb2xlKGNvbG9yX3N5c3RlbT0iMjU2Iiwgc3R5bGU9Tm9uZSkgICMg5Yib5bu65o6n5Yi25Y+w5a+56LGhCgogICAgICAgIAoKICAgIGRlZiBQYXJzZUZpbGUoc2VsZiwgZGVidWdNb2RlOiBib29sKSAtPiBOb25lOgoKICAgICAgICAjIOiOt+WPluaWh+S7tuS/oeaBrwogICAgICAgIHNlbGYuZmlsZV9zb3VyY2UgPSAiLlxcdGVzdFxcYS5jcHAiCiAgICAgICAgc2VsZi5maWxlX3NvdXJjZSA9IHN0cihQYXRoKHNlbGYuZmlsZV9zb3VyY2UpLnJlc29sdmUoKSkKICAgICAgICBzZWxmLmZpbGUgPSBzdHIoUGF0aChzZWxmLmZpbGVfc291cmNlKS5uYW1lKQogICAgICAgIHNlbGYuZmlsZV9uYW1lID0gc3RyKFBhdGgoc2VsZi5maWxlX3NvdXJjZSkuc3RlbSkKICAgICAgICBzZWxmLmZpbGVfdHlwZSA9IHN0cihQYXRoKHNlbGYuZmlsZV9zb3VyY2UpLnN1ZmZpeClbMTpdCiAgICAgICAgc2VsZi5maWxlX2RpciA9IHN0cihQYXRoKHNlbGYuZmlsZV9zb3VyY2UpLnBhcmVudCkKCiAgICAgICAgc2VsZi5leGVjX2NtZCA9IFtdICAjIOeUqOS6juWtmOWCqOimgeaJp+ihjOeahOWRveS7pAoKICAgICAgICAjIOa3u+WKoOaWh+S7tuS/oeaBr+WIsOihqOagvAogICAgICAgIHNlbGYuZmlsZVRhYmxlLmFkZF9jb2x1bW4oIltib2xkXUl0ZW0iKQogICAgICAgIHNlbGYuZmlsZVRhYmxlLmFkZF9jb2x1bW4oIltyZWRdVmFsdWUiKQogICAgICAgIHNlbGYuZmlsZVRhYmxlLmFkZF9yb3coIkZpbGUgc291cmNlIiwgc2VsZi5maWxlX3NvdXJjZSkKICAgICAgICBzZWxmLmZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIiwgc2VsZi5maWxlKQogICAgICAgIHNlbGYuZmlsZVRhYmxlLmFkZF9yb3coIkZpbGUgbmFtZSIsIHNlbGYuZmlsZV9uYW1lKQogICAgICAgIHNlbGYuZmlsZVRhYmxlLmFkZF9yb3coIkZpbGUgdHlwZSIsIHNlbGYuZmlsZV90eXBlKQogICAgICAgIHNlbGYuZmlsZVRhYmxlLmFkZF9yb3coIkZpbGUgZGlyIiwgc2VsZi5maWxlX2RpcikKICAgICAgICBzZWxmLmNvbnNvbGUucHJpbnQoc2VsZi5maWxlVGFibGUpCgogICAgZGVmIEV4ZWNDb2RlKHNlbGYsIGRlYnVnTW9kZTogYm9vbCkgLT4gTm9uZToKICAgICAgICAjIOagueaNruaWh+S7tuexu+Wei+afpeaJvuaJp+ihjOWRveS7pAogICAgICAgIGZvciBpIGluIHNlbGYuY29uZmlnOgogICAgICAgICAgICBmb3IgaiBpbiBzZWxmLmNvbmZpZ1siZmlsZXR5cGUiXVtpXVsiZmlsZXR5cGUiXToKICAgICAgICAgICAgICAgIGlmIGogPT0gc2VsZi5maWxlX3R5cGU6CiAgICAgICAgICAgICAgICAgICAgc2VsZi5leGVjX2NtZCA9IHNlbGYuY29uZmlnW2ldWyJjb21tYW5kIl0KICAgICAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICBpZiBzZWxmLmV4ZWNfY21kOgogICAgICAgICAgICAgICAgYnJlYWsKCiAgICAgICAgIyDmt7vliqDmiafooYznmoTlkb3ku6TliLDooajmoLwKICAgICAgICBzZWxmLmNvbW1hbmRUYWJsZS5hZGRfY29sdW1uKCIiKQogICAgICAgIHNlbGYuY29tbWFuZFRhYmxlLmFkZF9jb2x1bW4oIltib2xkXUNvbW1hbmQiKQogICAgICAgIGlmIHNlbGYuZXhlY19jbWQ6CiAgICAgICAgICAgIGZvciBpIGluIHJhbmdlKGxlbihzZWxmLmV4ZWNfY21kKSk6CiAgICAgICAgICAgICAgICBjbWQgPSBzZWxmLmV4ZWNfY21kW2ldLnJlcGxhY2UoIiQkIiwgIlxuXG4kXG5cbiIpCiAgICAgICAgICAgICAgICBjbWQgPSAoCiAgICAgICAgICAgICAgICAgICAgY21kLnJlcGxhY2UoIiRmaWxlIiwgc2VsZi5maWxlKQogICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKCIkbmFtZSIsIHNlbGYuZmlsZV9uYW1lKQogICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKCIkdHlwZSIsIHNlbGYuZmlsZV90eXBlKQogICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKCIkcGF0aCIsIHNlbGYuZmlsZV9kaXIpCiAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoIiRkaXIiLCBzZWxmLmZpbGVfZGlyKQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgY21kID0gY21kLnJlcGxhY2UoIlxuXG4kXG5cbiIsICIkIikKICAgICAgICAgICAgICAgIHNlbGYuY29tbWFuZFRhYmxlLmFkZF9yb3coc3RyKGkgKyAxKSwgY21kKQogICAgICAgICAgICAgICAgc2VsZi5leGVjX2NtZFtpXSA9IGNtZAoKICAgICAgICAgICAgc2VsZi5jb25zb2xlLnByaW50KHNlbGYuY29tbWFuZFRhYmxlKQoKICAgICAgICAgICAgIyDmiafooYzlkb3ku6QKICAgICAgICAgICAgZm9yIGkgaW4gc2VsZi5leGVjX2NtZDoKICAgICAgICAgICAgICAgIHNlbGYuY29uc29sZS5ydWxlKCkKICAgICAgICAgICAgICAgIHNlbGYuY29uc29sZS5wcmludCgiPiIsIGksIHN0eWxlPSJjeWFuIikKICAgICAgICAgICAgICAgIHN1YnByb2Nlc3MucnVuKGksIGN3ZD1zZWxmLmZpbGVfZGlyLCBzaGVsbD1UcnVlKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHNlbGYuY29uc29sZS5wcmludCgKICAgICAgICAgICAgICAgICJObyBleGVjdXRpb24gY29tbWFuZCBmb3VuZCBmb3IgZmlsZSB0eXBlOiAuIiwgc2VsZi5maWxlX3R5cGUsIHN0eWxlPSJ3aGl0ZSBvbiByZWQiCiAgICAgICAgICAgICkKCgojIOino+aekOWRveS7pOihjOWPguaVsApwYXJzZXIgPSBhcmdwYXJzZS5Bcmd1bWVudFBhcnNlcigpCmdyb3VwID0gcGFyc2VyLmFkZF9tdXR1YWxseV9leGNsdXNpdmVfZ3JvdXAoKQpncm91cC5hZGRfYXJndW1lbnQoJy1lJywgJy0tZW5jcnlwdCcsIGFjdGlvbj0nc3RvcmVfdHJ1ZScpICAjIOWIh+aNouWKoOWvhumAiemhuQpwYXJzZXIuYWRkX2FyZ3VtZW50KCd0ZXh0JywgbmFyZ3M9JyonKSAgIyDmlofmnKzlj4LmlbAKcGFyc2VyLmFkZF9hcmd1bWVudCgnLWsnLCAnLS1rZXknLCB0eXBlPWludCwgZGVmYXVsdD0xKSAgIyDlr4bpkqXlj4LmlbAKYXJncyA9IHBhcnNlci5wYXJzZV9hcmdzKCkK",
					"AQAAAAAAAAABAAAAbwEAAAAAAABvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					482,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAOcLAAAAAAAA6AsAAAAAAAAAAAAA6AsAAAAAAADpCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wsAAAAAAADnCwAAAAAAAAAAAAAAAPC/"
				],
				[
					484,
					1,
					"paste",
					null,
					"AQAAAOgLAAAAAAAAZAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AsAAAAAAADoCwAAAAAAAAAAAAAAAAAA"
				],
				[
					487,
					2,
					"left_delete",
					null,
					"AgAAAB4MAAAAAAAAHgwAAAAAAAAEAAAAICAgIBoMAAAAAAAAGgwAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAIgwAAAAAAAAiDAAAAAAAAAAAAAAAAPC/"
				],
				[
					493,
					1,
					"left_delete",
					null,
					"AQAAABoMAAAAAAAAGgwAAAAAAAAFAAAAc2VsZi4",
					"AQAAAAAAAAABAAAAHwwAAAAAAAAaDAAAAAAAAAAAAAAAAPC/"
				],
				[
					497,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAI4BAAAAAAAAjwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgEAAAAAAACOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					498,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI8BAAAAAAAAkAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwEAAAAAAACPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					499,
					1,
					"insert",
					{
						"characters": "fi"
					},
					"AgAAAJABAAAAAAAAkQEAAAAAAAAAAAAAkQEAAAAAAACSAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAEAAAAAAACQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					501,
					1,
					"insert_completion",
					{
						"completion": "filetype",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "filetype"
					},
					"AgAAAJABAAAAAAAAkAEAAAAAAAACAAAAZmmQAQAAAAAAAJgBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgEAAAAAAACSAQAAAAAAAAAAAAAAAPC/"
				],
				[
					504,
					1,
					"insert",
					{
						"characters": "file"
					},
					"BQAAAJABAAAAAAAAkQEAAAAAAAAAAAAAkQEAAAAAAACRAQAAAAAAAAgAAABmaWxldHlwZZEBAAAAAAAAkgEAAAAAAAAAAAAAkgEAAAAAAACTAQAAAAAAAAAAAACTAQAAAAAAAJQBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAEAAAAAAACQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					505,
					1,
					"insert",
					{
						"characters": "Conf"
					},
					"BAAAAJQBAAAAAAAAlQEAAAAAAAAAAAAAlQEAAAAAAACWAQAAAAAAAAAAAACWAQAAAAAAAJcBAAAAAAAAAAAAAJcBAAAAAAAAmAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAEAAAAAAACUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					506,
					4,
					"left_delete",
					null,
					"BAAAAJcBAAAAAAAAlwEAAAAAAAABAAAAZpYBAAAAAAAAlgEAAAAAAAABAAAAbpUBAAAAAAAAlQEAAAAAAAABAAAAb5QBAAAAAAAAlAEAAAAAAAABAAAAQw",
					"AQAAAAAAAAABAAAAmAEAAAAAAACYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					513,
					1,
					"sequence",
					{
						"commands":
						[
						]
					},
					"BwAAAJQBAAAAAAAAlQEAAAAAAAAAAAAAlAEAAAAAAACWAQAAAAAAAAEAAABDlAEAAAAAAACXAQAAAAAAAAIAAABDb5QBAAAAAAAAmAEAAAAAAAADAAAAQ29ulAEAAAAAAACZAQAAAAAAAAQAAABDb25mlAEAAAAAAACaAQAAAAAAAAUAAABDb25maZQBAAAAAAAAnQEAAAAAAAAGAAAAQ29uZmln",
					"AQAAAAAAAAABAAAAlAEAAAAAAACUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					514,
					3,
					"left_delete",
					null,
					"AwAAAJwBAAAAAAAAnAEAAAAAAAABAAAAZZsBAAAAAAAAmwEAAAAAAAABAAAAcpoBAAAAAAAAmgEAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAnQEAAAAAAACdAQAAAAAAAAAAAAAAAPC/"
				],
				[
					517,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAJoBAAAAAAAAmwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgEAAAAAAACaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					518,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJsBAAAAAAAAnAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmwEAAAAAAACbAQAAAAAAAAAAAAAAAPC/"
				],
				[
					519,
					1,
					"insert",
					{
						"characters": "di"
					},
					"AgAAAJwBAAAAAAAAnQEAAAAAAAAAAAAAnQEAAAAAAACeAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAEAAAAAAACcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					520,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":10,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "dict"
					},
					"AgAAAJwBAAAAAAAAnAEAAAAAAAACAAAAZGmcAQAAAAAAAKABAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngEAAAAAAACeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					526,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACkFAAAAAAAAKgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQUAAAAAAAApBQAAAAAAAAAAAAAAAPC/"
				],
				[
					527,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACoFAAAAAAAAKwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgUAAAAAAAAqBQAAAAAAAAAAAAAAAPC/"
				],
				[
					528,
					1,
					"paste",
					null,
					"AQAAACsFAAAAAAAAOwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwUAAAAAAAArBQAAAAAAAAAAAAAAAPC/"
				],
				[
					536,
					1,
					"paste",
					null,
					"AgAAAKwFAAAAAAAAtQUAAAAAAAAAAAAAtQUAAAAAAAC1BQAAAAAAAAgAAABmaWxldHlwZQ",
					"AQAAAAAAAAABAAAArAUAAAAAAAC0BQAAAAAAAAAAAAAAAPC/"
				],
				[
					550,
					1,
					"insert",
					{
						"characters": "file"
					},
					"DwAAAAUGAAAAAAAABgYAAAAAAAAAAAAABgYAAAAAAAAGBgAAAAAAAAsAAABzZWxmLmNvbmZpZ5AFAAAAAAAAkQUAAAAAAAAAAAAAkQUAAAAAAACRBQAAAAAAAAsAAABzZWxmLmNvbmZpZ24FAAAAAAAAbwUAAAAAAAAAAAAAbwUAAAAAAABvBQAAAAAAAAsAAABzZWxmLmNvbmZpZ/IFAAAAAAAA8wUAAAAAAAAAAAAAhwUAAAAAAACIBQAAAAAAAAAAAABvBQAAAAAAAHAFAAAAAAAAAAAAAPUFAAAAAAAA9gUAAAAAAAAAAAAAiQUAAAAAAACKBQAAAAAAAAAAAABwBQAAAAAAAHEFAAAAAAAAAAAAAPgFAAAAAAAA+QUAAAAAAAAAAAAAiwUAAAAAAACMBQAAAAAAAAAAAABxBQAAAAAAAHIFAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAAbgUAAAAAAAB5BQAAAAAAAAAAAAAAAPC/kAUAAAAAAACbBQAAAAAAAAAAAAAAAPC/BQYAAAAAAAAQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					551,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":3,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "fileConfig"
					},
					"BgAAAPcFAAAAAAAA9wUAAAAAAAAEAAAAZmlsZYkFAAAAAAAAiQUAAAAAAAAEAAAAZmlsZW4FAAAAAAAAbgUAAAAAAAAEAAAAZmlsZe8FAAAAAAAA+QUAAAAAAAAAAAAAhQUAAAAAAACPBQAAAAAAAAAAAABuBQAAAAAAAHgFAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAAcgUAAAAAAAByBQAAAAAAAAAAAAAAAPC/jQUAAAAAAACNBQAAAAAAAAAAAAAAAPC/+wUAAAAAAAD7BQAAAAAAAAAAAAAAAPC/"
				],
				[
					564,
					1,
					"reindent",
					null,
					"AQAAADQJAAAAAAAARAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAkAAAAAAAA0CQAAAAAAAAAAAAAAAPC/"
				],
				[
					565,
					2,
					"left_delete",
					null,
					"AgAAAEAJAAAAAAAAQAkAAAAAAAAEAAAAICAgIDwJAAAAAAAAPAkAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAARAkAAAAAAABECQAAAAAAAAAAAAAAAPC/"
				],
				[
					566,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAADwJAAAAAAAAPQkAAAAAAAAAAAAAPQkAAAAAAAA+CQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAkAAAAAAAA8CQAAAAAAAAAAAAAAAPC/"
				],
				[
					567,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD4JAAAAAAAAPwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgkAAAAAAAA+CQAAAAAAAAAAAAAAAPC/"
				],
				[
					568,
					3,
					"left_delete",
					null,
					"AwAAAD4JAAAAAAAAPgkAAAAAAAABAAAAID0JAAAAAAAAPQkAAAAAAAABAAAAZjwJAAAAAAAAPAkAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAPwkAAAAAAAA/CQAAAAAAAAAAAAAAAPC/"
				],
				[
					578,
					1,
					"sequence",
					{
						"commands":
						[
						]
					},
					"BgAAAHUGAAAAAAAAdgYAAAAAAAAPAAAA5re75Yqg5omn6KGM55qEdQYAAAAAAAB3BgAAAAAAAAEAAABqdQYAAAAAAAB4BgAAAAAAAAIAAABqaXUGAAAAAAAAegYAAAAAAAADAAAAamlldQYAAAAAAAB7BgAAAAAAAAUAAABqaWUneHUGAAAAAAAAdwYAAAAAAAAGAAAAamllJ3hp",
					"AQAAAAAAAAABAAAAegYAAAAAAAB1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					596,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAADkJAAAAAAAAPQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQkAAAAAAAA5CQAAAAAAAAAAAAAAAPC/"
				],
				[
					600,
					1,
					"sequence",
					{
						"commands":
						[
						]
					},
					"AwAAAD0JAAAAAAAAPgkAAAAAAAAAAAAAPQkAAAAAAAA/CQAAAAAAAAEAAABpPQkAAAAAAAA/CQAAAAAAAAIAAABpZg",
					"AQAAAAAAAAABAAAAPQkAAAAAAAA9CQAAAAAAAAAAAAAAAPC/"
				],
				[
					601,
					1,
					"insert",
					{
						"characters": " i"
					},
					"AgAAAD8JAAAAAAAAQAkAAAAAAAAAAAAAQAkAAAAAAABBCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwkAAAAAAAA/CQAAAAAAAAAAAAAAAPC/"
				],
				[
					602,
					1,
					"insert",
					{
						"characters": "sD"
					},
					"AgAAAEEJAAAAAAAAQgkAAAAAAAAAAAAAQgkAAAAAAABDCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQkAAAAAAABBCQAAAAAAAAAAAAAAAPC/"
				],
				[
					603,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAEMJAAAAAAAARAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwkAAAAAAABDCQAAAAAAAAAAAAAAAPC/"
				],
				[
					604,
					4,
					"left_delete",
					null,
					"BAAAAEMJAAAAAAAAQwkAAAAAAAABAAAAZUIJAAAAAAAAQgkAAAAAAAABAAAAREEJAAAAAAAAQQkAAAAAAAABAAAAc0AJAAAAAAAAQAkAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAARAkAAAAAAABECQAAAAAAAAAAAAAAAPC/"
				],
				[
					605,
					1,
					"insert",
					{
						"characters": "debu"
					},
					"BAAAAEAJAAAAAAAAQQkAAAAAAAAAAAAAQQkAAAAAAABCCQAAAAAAAAAAAABCCQAAAAAAAEMJAAAAAAAAAAAAAEMJAAAAAAAARAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAkAAAAAAABACQAAAAAAAAAAAAAAAPC/"
				],
				[
					607,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "debugMode"
					},
					"AgAAAEAJAAAAAAAAQAkAAAAAAAAEAAAAZGVidUAJAAAAAAAASQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAkAAAAAAABECQAAAAAAAAAAAAAAAPC/"
				],
				[
					608,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAEkJAAAAAAAASgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQkAAAAAAABJCQAAAAAAAAAAAAAAAPC/"
				],
				[
					611,
					1,
					"indent",
					null,
					"AQAAAEsJAAAAAAAATwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAkAAAAAAABkCQAAAAAAAAAAAAAAIHRA"
				],
				[
					618,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BAAAAFIDAAAAAAAAUwMAAAAAAAAAAAAAUwMAAAAAAABbAwAAAAAAAAAAAABbAwAAAAAAAFwDAAAAAAAAAAAAAFwDAAAAAAAAXQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgMAAAAAAABSAwAAAAAAAAAAAAAAAPC/"
				],
				[
					619,
					1,
					"insert",
					{
						"characters": " de"
					},
					"AwAAAF0DAAAAAAAAXgMAAAAAAAAAAAAAXgMAAAAAAABfAwAAAAAAAAAAAABfAwAAAAAAAGADAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQMAAAAAAABdAwAAAAAAAAAAAAAAAPC/"
				],
				[
					628,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "debugMode"
					},
					"AgAAAF4DAAAAAAAAXgMAAAAAAAACAAAAZGVeAwAAAAAAAGcDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAMAAAAAAABgAwAAAAAAAAAAAAAAAPC/"
				],
				[
					629,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAGcDAAAAAAAAaAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwMAAAAAAABnAwAAAAAAAAAAAAAAAPC/"
				],
				[
					632,
					1,
					"indent",
					null,
					"CAAAAGkDAAAAAAAAbQMAAAAAAAAAAAAAnQMAAAAAAAChAwAAAAAAAAAAAADRAwAAAAAAANUDAAAAAAAAAAAAABUEAAAAAAAAGQQAAAAAAAAAAAAASwQAAAAAAABPBAAAAAAAAAAAAACLBAAAAAAAAI8EAAAAAAAAAAAAAMsEAAAAAAAAzwQAAAAAAAAAAAAACQUAAAAAAAANBQAAAAAAAAAAAAA",
					"AQAAAAAAAAAIAAAAfgMAAAAAAAB+AwAAAAAAAAAAAAAA4HBArgMAAAAAAACuAwAAAAAAAAAAAAAA4HBA3gMAAAAAAADeAwAAAAAAAAAAAAAA4HBAHgQAAAAAAAAeBAAAAAAAAAAAAAAA4HBAUAQAAAAAAABQBAAAAAAAAAAAAAAA4HBAjAQAAAAAAACMBAAAAAAAAAAAAAAA4HBAyAQAAAAAAADIBAAAAAAAAAAAAAAA4HBAAgUAAAAAAAACBQAAAAAAAAAAAAAA4HBA"
				],
				[
					658,
					1,
					"paste",
					null,
					"AgAAAFwLAAAAAAAAxAsAAAAAAAAAAAAAxAsAAAAAAADECwAAAAAAAP0AAABncm91cCA9IHBhcnNlci5hZGRfbXV0dWFsbHlfZXhjbHVzaXZlX2dyb3VwKCkKZ3JvdXAuYWRkX2FyZ3VtZW50KCctZScsICctLWVuY3J5cHQnLCBhY3Rpb249J3N0b3JlX3RydWUnKSAgIyDliIfmjaLliqDlr4bpgInpobkKcGFyc2VyLmFkZF9hcmd1bWVudCgndGV4dCcsIG5hcmdzPScqJykgICMg5paH5pys5Y+C5pWwCnBhcnNlci5hZGRfYXJndW1lbnQoJy1rJywgJy0ta2V5JywgdHlwZT1pbnQsIGRlZmF1bHQ9MSkgICMg5a+G6ZKl5Y+C5pWw",
					"AQAAAAAAAAABAAAAXAsAAAAAAAA9DAAAAAAAAAAAAAAAAPC/"
				],
				[
					660,
					1,
					"insert",
					{
						"characters": "\npa"
					},
					"BgAAAMQLAAAAAAAAxQsAAAAAAAAAAAAAxQsAAAAAAADZCwAAAAAAAAAAAADFCwAAAAAAAMULAAAAAAAAFAAAACAgICAgICAgICAgICAgICAgICAgxQsAAAAAAADFCwAAAAAAAAAAAADFCwAAAAAAAMYLAAAAAAAAAAAAAMYLAAAAAAAAxwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAsAAAAAAADECwAAAAAAAAAAAAAAAPC/"
				],
				[
					662,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":8,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "parser"
					},
					"AgAAAMULAAAAAAAAxQsAAAAAAAACAAAAcGHFCwAAAAAAAMsLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwsAAAAAAADHCwAAAAAAAAAAAAAAAPC/"
				],
				[
					663,
					1,
					"insert",
					{
						"characters": ".a"
					},
					"AgAAAMsLAAAAAAAAzAsAAAAAAAAAAAAAzAsAAAAAAADNCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywsAAAAAAADLCwAAAAAAAAAAAAAAAPC/"
				],
				[
					664,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":34,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "add_argument"
					},
					"AgAAAMwLAAAAAAAAzAsAAAAAAAABAAAAYcwLAAAAAAAA2AsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQsAAAAAAADNCwAAAAAAAAAAAAAAAPC/"
				],
				[
					665,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANgLAAAAAAAA2gsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AsAAAAAAADYCwAAAAAAAAAAAAAAAPC/"
				],
				[
					666,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAANkLAAAAAAAA2wsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2QsAAAAAAADZCwAAAAAAAAAAAAAAAPC/"
				],
				[
					667,
					1,
					"insert",
					{
						"characters": "-f"
					},
					"AgAAANoLAAAAAAAA2wsAAAAAAAAAAAAA2wsAAAAAAADcCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2gsAAAAAAADaCwAAAAAAAAAAAAAAAPC/"
				],
				[
					672,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAN0LAAAAAAAA3gsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QsAAAAAAADdCwAAAAAAAAAAAAAAAPC/"
				],
				[
					673,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN4LAAAAAAAA3wsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gsAAAAAAADeCwAAAAAAAAAAAAAAAPC/"
				],
				[
					674,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAN8LAAAAAAAA4QsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wsAAAAAAADfCwAAAAAAAAAAAAAAAPC/"
				],
				[
					675,
					1,
					"insert",
					{
						"characters": "--fi"
					},
					"BAAAAOALAAAAAAAA4QsAAAAAAAAAAAAA4QsAAAAAAADiCwAAAAAAAAAAAADiCwAAAAAAAOMLAAAAAAAAAAAAAOMLAAAAAAAA5AsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AsAAAAAAADgCwAAAAAAAAAAAAAAAPC/"
				],
				[
					676,
					1,
					"insert",
					{
						"characters": "le"
					},
					"AgAAAOQLAAAAAAAA5QsAAAAAAAAAAAAA5QsAAAAAAADmCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AsAAAAAAADkCwAAAAAAAAAAAAAAAPC/"
				],
				[
					678,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOcLAAAAAAAA6AsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wsAAAAAAADnCwAAAAAAAAAAAAAAAPC/"
				],
				[
					679,
					1,
					"insert",
					{
						"characters": " tu"
					},
					"AwAAAOgLAAAAAAAA6QsAAAAAAAAAAAAA6QsAAAAAAADqCwAAAAAAAAAAAADqCwAAAAAAAOsLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AsAAAAAAADoCwAAAAAAAAAAAAAAAPC/"
				],
				[
					680,
					1,
					"left_delete",
					null,
					"AQAAAOoLAAAAAAAA6gsAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAA6wsAAAAAAADrCwAAAAAAAAAAAAAAAPC/"
				],
				[
					681,
					1,
					"insert",
					{
						"characters": "ype"
					},
					"AwAAAOoLAAAAAAAA6wsAAAAAAAAAAAAA6wsAAAAAAADsCwAAAAAAAAAAAADsCwAAAAAAAO0LAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gsAAAAAAADqCwAAAAAAAAAAAAAAAPC/"
				],
				[
					682,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAO0LAAAAAAAA7gsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QsAAAAAAADtCwAAAAAAAAAAAAAAAPC/"
				],
				[
					683,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAO4LAAAAAAAA8AsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gsAAAAAAADuCwAAAAAAAAAAAAAAAPC/"
				],
				[
					684,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAO4LAAAAAAAA7gsAAAAAAAABAAAAIu4LAAAAAAAA7gsAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAA7wsAAAAAAADvCwAAAAAAAAAAAAAAAPC/"
				],
				[
					685,
					1,
					"insert",
					{
						"characters": "st"
					},
					"AgAAAO4LAAAAAAAA7wsAAAAAAAAAAAAA7wsAAAAAAADwCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gsAAAAAAADuCwAAAAAAAAAAAAAAAPC/"
				],
				[
					687,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":25,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "str"
					},
					"AgAAAO4LAAAAAAAA7gsAAAAAAAACAAAAc3TuCwAAAAAAAPELAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8AsAAAAAAADwCwAAAAAAAAAAAAAAAPC/"
				],
				[
					688,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAPELAAAAAAAA8gsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QsAAAAAAADxCwAAAAAAAAAAAAAAAPC/"
				],
				[
					689,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPILAAAAAAAA8wsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gsAAAAAAADyCwAAAAAAAAAAAAAAAPC/"
				],
				[
					690,
					2,
					"left_delete",
					null,
					"AgAAAPILAAAAAAAA8gsAAAAAAAABAAAAIPELAAAAAAAA8QsAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAA8wsAAAAAAADzCwAAAAAAAAAAAAAAAPC/"
				],
				[
					698,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPILAAAAAAAA8wsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gsAAAAAAADyCwAAAAAAAAAAAAAAAPC/"
				],
				[
					699,
					1,
					"paste",
					null,
					"AQAAAPMLAAAAAAAAIAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wsAAAAAAADzCwAAAAAAAAAAAAAAAPC/"
				],
				[
					702,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AgAAANsLAAAAAAAA3AsAAAAAAAAAAAAA3AsAAAAAAADcCwAAAAAAAAEAAABm",
					"AQAAAAAAAAABAAAA3AsAAAAAAADbCwAAAAAAAAAAAAAAAPC/"
				],
				[
					705,
					1,
					"insert",
					{
						"characters": "debug"
					},
					"BgAAAOILAAAAAAAA4wsAAAAAAAAAAAAA4wsAAAAAAADjCwAAAAAAAAQAAABmaWxl4wsAAAAAAADkCwAAAAAAAAAAAADkCwAAAAAAAOULAAAAAAAAAAAAAOULAAAAAAAA5gsAAAAAAAAAAAAA5gsAAAAAAADnCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gsAAAAAAADiCwAAAAAAAAAAAAAAAPC/"
				],
				[
					708,
					1,
					"right_delete",
					null,
					"AQAAAOgLAAAAAAAA6AsAAAAAAAAKAAAALCB0eXBlPXN0cg",
					"AQAAAAAAAAABAAAA6AsAAAAAAADyCwAAAAAAAAAAAAAAAPC/"
				],
				[
					712,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"AwAAAKQMAAAAAAAApQwAAAAAAAAAAAAApQwAAAAAAACmDAAAAAAAAAAAAACmDAAAAAAAAKcMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAwAAAAAAACkDAAAAAAAAAAAAAAAAPC/"
				],
				[
					713,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKcMAAAAAAAAqAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwwAAAAAAACnDAAAAAAAAAAAAAAAAPC/"
				],
				[
					714,
					1,
					"insert",
					{
						"characters": "arg"
					},
					"AwAAAKgMAAAAAAAAqQwAAAAAAAAAAAAAqQwAAAAAAACqDAAAAAAAAAAAAACqDAAAAAAAAKsMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAwAAAAAAACoDAAAAAAAAAAAAAAAAPC/"
				],
				[
					715,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":12,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "argparse"
					},
					"AgAAAKgMAAAAAAAAqAwAAAAAAAADAAAAYXJnqAwAAAAAAACwDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwwAAAAAAACrDAAAAAAAAAAAAAAAAPC/"
				],
				[
					716,
					8,
					"left_delete",
					null,
					"CAAAAK8MAAAAAAAArwwAAAAAAAABAAAAZa4MAAAAAAAArgwAAAAAAAABAAAAc60MAAAAAAAArQwAAAAAAAABAAAAcqwMAAAAAAAArAwAAAAAAAABAAAAYasMAAAAAAAAqwwAAAAAAAABAAAAcKoMAAAAAAAAqgwAAAAAAAABAAAAZ6kMAAAAAAAAqQwAAAAAAAABAAAAcqgMAAAAAAAAqAwAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAsAwAAAAAAACwDAAAAAAAAAAAAAAAAPC/"
				],
				[
					717,
					1,
					"insert",
					{
						"characters": "pa"
					},
					"AgAAAKgMAAAAAAAAqQwAAAAAAAAAAAAAqQwAAAAAAACqDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAwAAAAAAACoDAAAAAAAAAAAAAAAAPC/"
				],
				[
					718,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":1,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "parser"
					},
					"AgAAAKgMAAAAAAAAqAwAAAAAAAACAAAAcGGoDAAAAAAAAK4MAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqgwAAAAAAACqDAAAAAAAAAAAAAAAAPC/"
				],
				[
					719,
					1,
					"insert",
					{
						"characters": ".de"
					},
					"AwAAAK4MAAAAAAAArwwAAAAAAAAAAAAArwwAAAAAAACwDAAAAAAAAAAAAACwDAAAAAAAALEMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgwAAAAAAACuDAAAAAAAAAAAAAAAAPC/"
				],
				[
					720,
					1,
					"insert",
					{
						"characters": "bu"
					},
					"AgAAALEMAAAAAAAAsgwAAAAAAAAAAAAAsgwAAAAAAACzDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQwAAAAAAACxDAAAAAAAAAAAAAAAAPC/"
				],
				[
					721,
					1,
					"insert_completion",
					{
						"completion": "debug",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "debug"
					},
					"AgAAAK8MAAAAAAAArwwAAAAAAAAEAAAAZGVida8MAAAAAAAAtAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAswwAAAAAAACzDAAAAAAAAAAAAAAAAPC/"
				],
				[
					722,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAALQMAAAAAAAAtQwAAAAAAAAAAAAAtQwAAAAAAAC2DAAAAAAAAAAAAAC2DAAAAAAAALcMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAwAAAAAAAC0DAAAAAAAAAAAAAAAAPC/"
				],
				[
					727,
					1,
					"insert",
					{
						"characters": " T"
					},
					"AgAAALcMAAAAAAAAuAwAAAAAAAAAAAAAuAwAAAAAAAC5DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwwAAAAAAAC3DAAAAAAAAAAAAAAAAPC/"
				],
				[
					728,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "True"
					},
					"AgAAALgMAAAAAAAAuAwAAAAAAAABAAAAVLgMAAAAAAAAvAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQwAAAAAAAC5DAAAAAAAAAAAAAAAAPC/"
				],
				[
					731,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAALwMAAAAAAAAvQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAwAAAAAAAC8DAAAAAAAAAAAAAAAAPC/"
				],
				[
					734,
					1,
					"insert",
					{
						"characters": "\ncon"
					},
					"BQAAAL0MAAAAAAAAvgwAAAAAAAAAAAAAvgwAAAAAAADCDAAAAAAAAAAAAADCDAAAAAAAAMMMAAAAAAAAAAAAAMMMAAAAAAAAxAwAAAAAAAAAAAAAxAwAAAAAAADFDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQwAAAAAAAC9DAAAAAAAAAAAAAAAAPC/"
				],
				[
					735,
					1,
					"insert",
					{
						"characters": "fig"
					},
					"AwAAAMUMAAAAAAAAxgwAAAAAAAAAAAAAxgwAAAAAAADHDAAAAAAAAAAAAADHDAAAAAAAAMgMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQwAAAAAAADFDAAAAAAAAAAAAAAAAPC/"
				],
				[
					736,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAMgMAAAAAAAAygwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAwAAAAAAADIDAAAAAAAAAAAAAAAAPC/"
				],
				[
					737,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAMkMAAAAAAAAywwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQwAAAAAAADJDAAAAAAAAAAAAAAAAPC/"
				],
				[
					738,
					1,
					"insert",
					{
						"characters": "deub"
					},
					"BAAAAMoMAAAAAAAAywwAAAAAAAAAAAAAywwAAAAAAADMDAAAAAAAAAAAAADMDAAAAAAAAM0MAAAAAAAAAAAAAM0MAAAAAAAAzgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygwAAAAAAADKDAAAAAAAAAAAAAAAAPC/"
				],
				[
					739,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAAM4MAAAAAAAAzwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgwAAAAAAADODAAAAAAAAAAAAAAAAPC/"
				],
				[
					741,
					1,
					"insert",
					{
						"characters": "=T"
					},
					"AgAAANEMAAAAAAAA0gwAAAAAAAAAAAAA0gwAAAAAAADTDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QwAAAAAAADRDAAAAAAAAAAAAAAAAPC/"
				],
				[
					742,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "True"
					},
					"AgAAANIMAAAAAAAA0gwAAAAAAAABAAAAVNIMAAAAAAAA1gwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wwAAAAAAADTDAAAAAAAAAAAAAAAAPC/"
				],
				[
					743,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANYMAAAAAAAA1wwAAAAAAAAAAAAA1wwAAAAAAADbDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gwAAAAAAADWDAAAAAAAAAAAAAAAAPC/"
				],
				[
					744,
					1,
					"left_delete",
					null,
					"AQAAANcMAAAAAAAA1wwAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAA2wwAAAAAAADbDAAAAAAAAAAAAAAAAPC/"
				],
				[
					753,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKABAAAAAAAAoQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAEAAAAAAACgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					754,
					1,
					"insert",
					{
						"characters": " file"
					},
					"BQAAAKEBAAAAAAAAogEAAAAAAAAAAAAAogEAAAAAAACjAQAAAAAAAAAAAACjAQAAAAAAAKQBAAAAAAAAAAAAAKQBAAAAAAAApQEAAAAAAAAAAAAApQEAAAAAAACmAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQEAAAAAAAChAQAAAAAAAAAAAAAAAPC/"
				],
				[
					762,
					1,
					"insert",
					{
						"characters": "file"
					},
					"BQAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA3wEAAAAAAADfAQAAAAAAABAAAAAiLlxcdGVzdFxcYS5jcHAi3wEAAAAAAADgAQAAAAAAAAAAAADgAQAAAAAAAOEBAAAAAAAAAAAAAOEBAAAAAAAA4gEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gEAAAAAAADeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					766,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAKYBAAAAAAAApwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgEAAAAAAACmAQAAAAAAAAAAAAAAAPC/"
				],
				[
					767,
					1,
					"insert",
					{
						"characters": " st"
					},
					"AwAAAKcBAAAAAAAAqAEAAAAAAAAAAAAAqAEAAAAAAACpAQAAAAAAAAAAAACpAQAAAAAAAKoBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwEAAAAAAACnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					769,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":23,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "str"
					},
					"AgAAAKgBAAAAAAAAqAEAAAAAAAACAAAAc3SoAQAAAAAAAKsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqgEAAAAAAACqAQAAAAAAAAAAAAAAAPC/"
				],
				[
					772,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAANYMAAAAAAAA1wwAAAAAAAAAAAAA1wwAAAAAAADYDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gwAAAAAAADWDAAAAAAAAAAAAAAAAPC/"
				],
				[
					775,
					1,
					"insert",
					{
						"characters": "App"
					},
					"AwAAANcMAAAAAAAA2AwAAAAAAAAAAAAA2AwAAAAAAADZDAAAAAAAAAAAAADZDAAAAAAAANoMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wwAAAAAAADXDAAAAAAAAAAAAAAAAAAA"
				],
				[
					776,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAANoMAAAAAAAA2wwAAAAAAAAAAAAA2wwAAAAAAADcDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2gwAAAAAAADaDAAAAAAAAAAAAAAAAPC/"
				],
				[
					777,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANwMAAAAAAAA3QwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3AwAAAAAAADcDAAAAAAAAAAAAAAAAPC/"
				],
				[
					778,
					1,
					"insert",
					{
						"characters": "M"
					},
					"AQAAAN0MAAAAAAAA3gwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QwAAAAAAADdDAAAAAAAAAAAAAAAAPC/"
				],
				[
					779,
					1,
					"left_delete",
					null,
					"AQAAAN0MAAAAAAAA3QwAAAAAAAABAAAATQ",
					"AQAAAAAAAAABAAAA3gwAAAAAAADeDAAAAAAAAAAAAAAAAPC/"
				],
				[
					780,
					1,
					"insert",
					{
						"characters": "Ap"
					},
					"AgAAAN0MAAAAAAAA3gwAAAAAAAAAAAAA3gwAAAAAAADfDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QwAAAAAAADdDAAAAAAAAAAAAAAAAPC/"
				],
				[
					781,
					2,
					"left_delete",
					null,
					"AgAAAN4MAAAAAAAA3gwAAAAAAAABAAAAcN0MAAAAAAAA3QwAAAAAAAABAAAAQQ",
					"AQAAAAAAAAABAAAA3wwAAAAAAADfDAAAAAAAAAAAAAAAAPC/"
				],
				[
					782,
					1,
					"insert",
					{
						"characters": "Ru"
					},
					"AgAAAN0MAAAAAAAA3gwAAAAAAAAAAAAA3gwAAAAAAADfDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QwAAAAAAADdDAAAAAAAAAAAAAAAAPC/"
				],
				[
					783,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":11,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "RunnerApp"
					},
					"AgAAAN0MAAAAAAAA3QwAAAAAAAACAAAAUnXdDAAAAAAAAOYMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wwAAAAAAADfDAAAAAAAAAAAAAAAAPC/"
				],
				[
					784,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOYMAAAAAAAA6AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gwAAAAAAADmDAAAAAAAAAAAAAAAAPC/"
				],
				[
					786,
					1,
					"insert",
					{
						"characters": "\nApp"
					},
					"BAAAAOgMAAAAAAAA6QwAAAAAAAAAAAAA6QwAAAAAAADqDAAAAAAAAAAAAADqDAAAAAAAAOsMAAAAAAAAAAAAAOsMAAAAAAAA7AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AwAAAAAAADoDAAAAAAAAAAAAAAAAPC/"
				],
				[
					787,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAOwMAAAAAAAA7QwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AwAAAAAAADsDAAAAAAAAAAAAAAAAPC/"
				],
				[
					789,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":1,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "ParseFile"
					},
					"AQAAAO0MAAAAAAAA9gwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QwAAAAAAADtDAAAAAAAAAAAAAAAAPC/"
				],
				[
					790,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPYMAAAAAAAA+AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gwAAAAAAAD2DAAAAAAAAAAAAAAAAPC/"
				],
				[
					794,
					1,
					"insert",
					{
						"characters": "args"
					},
					"BQAAAKcMAAAAAAAAqAwAAAAAAAAAAAAAqAwAAAAAAACoDAAAAAAAAAYAAABwYXJzZXKoDAAAAAAAAKkMAAAAAAAAAAAAAKkMAAAAAAAAqgwAAAAAAAAAAAAAqgwAAAAAAACrDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQwAAAAAAACnDAAAAAAAAAAAAAAAAPC/"
				],
				[
					803,
					1,
					"left_delete",
					null,
					"AQAAALEMAAAAAAAAsQwAAAAAAAAIAAAAID09IFRydWU",
					"AQAAAAAAAAABAAAAuQwAAAAAAACxDAAAAAAAAAAAAAAAAPC/"
				],
				[
					808,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							{
								"newText": "import json\nimport argparse\nfrom pathlib import Path\nimport subprocess\nfrom rich.console import Console\nfrom rich.table import Table\n\n\nclass RunnerApp:\n    def __init__(self) -> None:\n        self.fileTable = Table()  # 创建表格以显示文件信息\n        self.commandTable = Table()  # 创建表格以显示执行的命令\n        self.console = Console(color_system=\"256\", style=None)  # 创建控制台对象\n\n    def ParseFile(self, debugMode: bool, fileConfig: dict, file: str) -> None:\n\n        # 获取文件信息\n        self.file_source = file\n        self.file_source = str(Path(self.file_source).resolve())\n        self.file = str(Path(self.file_source).name)\n        self.file_name = str(Path(self.file_source).stem)\n        self.file_type = str(Path(self.file_source).suffix)[1:]\n        self.file_dir = str(Path(self.file_source).parent)\n\n        self.exec_cmd = []  # 用于存储要执行的命令\n\n        # 添加文件信息到表格\n        if debugMode:\n            self.fileTable.add_column(\"[bold]Item\")\n            self.fileTable.add_column(\"[red]Value\")\n            self.fileTable.add_row(\"File source\", self.file_source)\n            self.fileTable.add_row(\"File\", self.file)\n            self.fileTable.add_row(\"File name\", self.file_name)\n            self.fileTable.add_row(\"File type\", self.file_type)\n            self.fileTable.add_row(\"File dir\", self.file_dir)\n            self.console.print(self.fileTable)\n\n    def ExecCode(self, debugMode: bool, fileConfig: dict) -> None:\n        # 根据文件类型查找执行命令\n        for i in fileConfig:\n            for j in fileConfig[\"filetype\"][i][\"extension\"]:\n                if j == self.file_type:\n                    self.exec_cmd = fileConfig[i][\"command\"]\n                    break\n            if self.exec_cmd:\n                break\n\n        # 解析命令到表格\n        self.commandTable.add_column(\"\")\n        self.commandTable.add_column(\"[bold]Command\")\n        if self.exec_cmd:\n            for i in range(len(self.exec_cmd)):\n                cmd = self.exec_cmd[i].replace(\"$$\", \"\\n\\n$\\n\\n\")\n                cmd = (\n                    cmd.replace(\"$file\", self.file)\n                    .replace(\"$name\", self.file_name)\n                    .replace(\"$type\", self.file_type)\n                    .replace(\"$path\", self.file_dir)\n                    .replace(\"$dir\", self.file_dir)\n                )\n                cmd = cmd.replace(\"\\n\\n$\\n\\n\", \"$\")\n                self.commandTable.add_row(str(i + 1), cmd)\n                self.exec_cmd[i] = cmd\n            if debugMode:\n                self.console.print(self.commandTable)\n\n            # 执行命令\n            for i in self.exec_cmd:\n                self.console.rule()\n                self.console.print(\">\", i, style=\"cyan\")\n                subprocess.run(i, cwd=self.file_dir, shell=True)\n        else:\n            self.console.print(\n                \"No execution command found for file type: .\", self.file_type, style=\"white on red\"\n            )\n\n\n# 解析命令行参数\nparser = argparse.ArgumentParser()\nparser.add_argument(\"-v\", \"--verbosity\", type=int,\n                    help=\"increase output verbosity\")\nparser.add_argument(\"-d\", \"--debug\")\nparser.add_argument(\"-f\", \"--file\", type=str)\nargs = parser.parse_args()\n\nwith open(\"filetype.json\") as configure_file:\n    config = json.load(configure_file)  # 从filetype.json文件中加载配置信息\n\nif args.debug:\n    config[\"deubg\"] = True\n\nApp = RunnerApp()\nApp.ParseFile()\n",
								"range":
								{
									"end":
									{
										"character": 0,
										"line": 93
									},
									"start":
									{
										"character": 0,
										"line": 0
									}
								}
							}
						],
						"process_placeholders": false,
						"required_view_version": null
					},
					"AQAAAAAAAAAAAAAA8QwAAAAAAACtDQAAaW1wb3J0IGpzb24KaW1wb3J0IGFyZ3BhcnNlCmZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aAppbXBvcnQgc3VicHJvY2Vzcwpmcm9tIHJpY2guY29uc29sZSBpbXBvcnQgQ29uc29sZQpmcm9tIHJpY2gudGFibGUgaW1wb3J0IFRhYmxlCgoKY2xhc3MgUnVubmVyQXBwOgogICAgZGVmIF9faW5pdF9fKHNlbGYpIC0+IE5vbmU6CiAgICAgICAgc2VsZi5maWxlVGFibGUgPSBUYWJsZSgpICAjIOWIm+W7uuihqOagvOS7peaYvuekuuaWh+S7tuS/oeaBrwogICAgICAgIHNlbGYuY29tbWFuZFRhYmxlID0gVGFibGUoKSAgIyDliJvlu7rooajmoLzku6XmmL7npLrmiafooYznmoTlkb3ku6QKICAgICAgICBzZWxmLmNvbnNvbGUgPSBDb25zb2xlKGNvbG9yX3N5c3RlbT0iMjU2Iiwgc3R5bGU9Tm9uZSkgICMg5Yib5bu65o6n5Yi25Y+w5a+56LGhCgogICAgZGVmIFBhcnNlRmlsZShzZWxmLCBkZWJ1Z01vZGU6IGJvb2wsIGZpbGVDb25maWc6IGRpY3QsIGZpbGU6IHN0cikgLT4gTm9uZToKCiAgICAgICAgIyDojrflj5bmlofku7bkv6Hmga8KICAgICAgICBzZWxmLmZpbGVfc291cmNlID0gZmlsZQogICAgICAgIHNlbGYuZmlsZV9zb3VyY2UgPSBzdHIoUGF0aChzZWxmLmZpbGVfc291cmNlKS5yZXNvbHZlKCkpCiAgICAgICAgc2VsZi5maWxlID0gc3RyKFBhdGgoc2VsZi5maWxlX3NvdXJjZSkubmFtZSkKICAgICAgICBzZWxmLmZpbGVfbmFtZSA9IHN0cihQYXRoKHNlbGYuZmlsZV9zb3VyY2UpLnN0ZW0pCiAgICAgICAgc2VsZi5maWxlX3R5cGUgPSBzdHIoUGF0aChzZWxmLmZpbGVfc291cmNlKS5zdWZmaXgpWzE6XQogICAgICAgIHNlbGYuZmlsZV9kaXIgPSBzdHIoUGF0aChzZWxmLmZpbGVfc291cmNlKS5wYXJlbnQpCgogICAgICAgIHNlbGYuZXhlY19jbWQgPSBbXSAgIyDnlKjkuo7lrZjlgqjopoHmiafooYznmoTlkb3ku6QKCiAgICAgICAgIyDmt7vliqDmlofku7bkv6Hmga/liLDooajmoLwKICAgICAgICBpZiBkZWJ1Z01vZGU6CiAgICAgICAgICAgIHNlbGYuZmlsZVRhYmxlLmFkZF9jb2x1bW4oIltib2xkXUl0ZW0iKQogICAgICAgICAgICBzZWxmLmZpbGVUYWJsZS5hZGRfY29sdW1uKCJbcmVkXVZhbHVlIikKICAgICAgICAgICAgc2VsZi5maWxlVGFibGUuYWRkX3JvdygiRmlsZSBzb3VyY2UiLCBzZWxmLmZpbGVfc291cmNlKQogICAgICAgICAgICBzZWxmLmZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIiwgc2VsZi5maWxlKQogICAgICAgICAgICBzZWxmLmZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIG5hbWUiLCBzZWxmLmZpbGVfbmFtZSkKICAgICAgICAgICAgc2VsZi5maWxlVGFibGUuYWRkX3JvdygiRmlsZSB0eXBlIiwgc2VsZi5maWxlX3R5cGUpCiAgICAgICAgICAgIHNlbGYuZmlsZVRhYmxlLmFkZF9yb3coIkZpbGUgZGlyIiwgc2VsZi5maWxlX2RpcikKICAgICAgICAgICAgc2VsZi5jb25zb2xlLnByaW50KHNlbGYuZmlsZVRhYmxlKQoKICAgIGRlZiBFeGVjQ29kZShzZWxmLCBkZWJ1Z01vZGU6IGJvb2wsIGZpbGVDb25maWc6IGRpY3QpIC0+IE5vbmU6CiAgICAgICAgIyDmoLnmja7mlofku7bnsbvlnovmn6Xmib7miafooYzlkb3ku6QKICAgICAgICBmb3IgaSBpbiBmaWxlQ29uZmlnOgogICAgICAgICAgICBmb3IgaiBpbiBmaWxlQ29uZmlnWyJmaWxldHlwZSJdW2ldWyJleHRlbnNpb24iXToKICAgICAgICAgICAgICAgIGlmIGogPT0gc2VsZi5maWxlX3R5cGU6CiAgICAgICAgICAgICAgICAgICAgc2VsZi5leGVjX2NtZCA9IGZpbGVDb25maWdbaV1bImNvbW1hbmQiXQogICAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIGlmIHNlbGYuZXhlY19jbWQ6CiAgICAgICAgICAgICAgICBicmVhawoKICAgICAgICAjIOino+aekOWRveS7pOWIsOihqOagvAogICAgICAgIHNlbGYuY29tbWFuZFRhYmxlLmFkZF9jb2x1bW4oIiIpCiAgICAgICAgc2VsZi5jb21tYW5kVGFibGUuYWRkX2NvbHVtbigiW2JvbGRdQ29tbWFuZCIpCiAgICAgICAgaWYgc2VsZi5leGVjX2NtZDoKICAgICAgICAgICAgZm9yIGkgaW4gcmFuZ2UobGVuKHNlbGYuZXhlY19jbWQpKToKICAgICAgICAgICAgICAgIGNtZCA9IHNlbGYuZXhlY19jbWRbaV0ucmVwbGFjZSgiJCQiLCAiXG5cbiRcblxuIikKICAgICAgICAgICAgICAgIGNtZCA9ICgKICAgICAgICAgICAgICAgICAgICBjbWQucmVwbGFjZSgiJGZpbGUiLCBzZWxmLmZpbGUpCiAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoIiRuYW1lIiwgc2VsZi5maWxlX25hbWUpCiAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoIiR0eXBlIiwgc2VsZi5maWxlX3R5cGUpCiAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoIiRwYXRoIiwgc2VsZi5maWxlX2RpcikKICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgiJGRpciIsIHNlbGYuZmlsZV9kaXIpCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBjbWQgPSBjbWQucmVwbGFjZSgiXG5cbiRcblxuIiwgIiQiKQogICAgICAgICAgICAgICAgc2VsZi5jb21tYW5kVGFibGUuYWRkX3JvdyhzdHIoaSArIDEpLCBjbWQpCiAgICAgICAgICAgICAgICBzZWxmLmV4ZWNfY21kW2ldID0gY21kCiAgICAgICAgICAgIGlmIGRlYnVnTW9kZToKICAgICAgICAgICAgICAgIHNlbGYuY29uc29sZS5wcmludChzZWxmLmNvbW1hbmRUYWJsZSkKCiAgICAgICAgICAgICMg5omn6KGM5ZG95LukCiAgICAgICAgICAgIGZvciBpIGluIHNlbGYuZXhlY19jbWQ6CiAgICAgICAgICAgICAgICBzZWxmLmNvbnNvbGUucnVsZSgpCiAgICAgICAgICAgICAgICBzZWxmLmNvbnNvbGUucHJpbnQoIj4iLCBpLCBzdHlsZT0iY3lhbiIpCiAgICAgICAgICAgICAgICBzdWJwcm9jZXNzLnJ1bihpLCBjd2Q9c2VsZi5maWxlX2Rpciwgc2hlbGw9VHJ1ZSkKICAgICAgICBlbHNlOgogICAgICAgICAgICBzZWxmLmNvbnNvbGUucHJpbnQoCiAgICAgICAgICAgICAgICAiTm8gZXhlY3V0aW9uIGNvbW1hbmQgZm91bmQgZm9yIGZpbGUgdHlwZTogLiIsIHNlbGYuZmlsZV90eXBlLCBzdHlsZT0id2hpdGUgb24gcmVkIgogICAgICAgICAgICApCgoKIyDop6PmnpDlkb3ku6TooYzlj4LmlbAKcGFyc2VyID0gYXJncGFyc2UuQXJndW1lbnRQYXJzZXIoKQpwYXJzZXIuYWRkX2FyZ3VtZW50KCItdiIsICItLXZlcmJvc2l0eSIsIHR5cGU9aW50LAogICAgICAgICAgICAgICAgICAgIGhlbHA9ImluY3JlYXNlIG91dHB1dCB2ZXJib3NpdHkiKQpwYXJzZXIuYWRkX2FyZ3VtZW50KCItZCIsICItLWRlYnVnIikKcGFyc2VyLmFkZF9hcmd1bWVudCgiLWYiLCAiLS1maWxlIiwgdHlwZT1zdHIpCmFyZ3MgPSBwYXJzZXIucGFyc2VfYXJncygpCgp3aXRoIG9wZW4oImZpbGV0eXBlLmpzb24iKSBhcyBjb25maWd1cmVfZmlsZToKICAgIGNvbmZpZyA9IGpzb24ubG9hZChjb25maWd1cmVfZmlsZSkgICMg5LuOZmlsZXR5cGUuanNvbuaWh+S7tuS4reWKoOi9vemFjee9ruS/oeaBrwoKaWYgYXJncy5kZWJ1ZzoKICAgIGNvbmZpZ1siZGV1YmciXT1UcnVlCgpBcHAgPSBSdW5uZXJBcHAoKQpBcHAuUGFyc2VGaWxlKCkK",
					"AQAAAAAAAAABAAAAywwAAAAAAADLDAAAAAAAAAAAAAAAAPC/"
				],
				[
					811,
					1,
					"insert",
					{
						"characters": "con"
					},
					"AwAAAO8MAAAAAAAA8AwAAAAAAAAAAAAA8AwAAAAAAADxDAAAAAAAAAAAAADxDAAAAAAAAPIMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wwAAAAAAADvDAAAAAAAAAAAAAAAAPC/"
				],
				[
					813,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":19,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "config"
					},
					"AgAAAO8MAAAAAAAA7wwAAAAAAAADAAAAY29u7wwAAAAAAAD1DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gwAAAAAAADyDAAAAAAAAAAAAAAAAPC/"
				],
				[
					814,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAPUMAAAAAAAA9wwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QwAAAAAAAD1DAAAAAAAAAAAAAAAAPC/"
				],
				[
					815,
					1,
					"insert",
					{
						"characters": "de"
					},
					"AgAAAPYMAAAAAAAA9wwAAAAAAAAAAAAA9wwAAAAAAAD4DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gwAAAAAAAD2DAAAAAAAAAAAAAAAAPC/"
				],
				[
					816,
					2,
					"left_delete",
					null,
					"AgAAAPcMAAAAAAAA9wwAAAAAAAABAAAAZfYMAAAAAAAA9gwAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAA+AwAAAAAAAD4DAAAAAAAAAAAAAAAAPC/"
				],
				[
					817,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAPYMAAAAAAAA+AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gwAAAAAAAD2DAAAAAAAAAAAAAAAAPC/"
				],
				[
					818,
					1,
					"insert",
					{
						"characters": "de"
					},
					"AgAAAPcMAAAAAAAA+AwAAAAAAAAAAAAA+AwAAAAAAAD5DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wwAAAAAAAD3DAAAAAAAAAAAAAAAAPC/"
				],
				[
					820,
					1,
					"insert_completion",
					{
						"completion": "debug",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "debug"
					},
					"AgAAAPcMAAAAAAAA9wwAAAAAAAACAAAAZGX3DAAAAAAAAPwMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+QwAAAAAAAD5DAAAAAAAAAAAAAAAAPC/"
				],
				[
					823,
					1,
					"",
					null,
					"AgAAAMMMAAAAAAAAxAwAAAAAAAAAAAAAwQwAAAAAAADBDAAAAAAAAAEAAAB1",
					"AQAAAAAAAAABAAAAwgwAAAAAAADBDAAAAAAAAAAAAAAAAPC/"
				],
				[
					829,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAP4MAAAAAAAA/wwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gwAAAAAAAD+DAAAAAAAAAAAAAAAAPC/"
				],
				[
					830,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAP8MAAAAAAAAAA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wwAAAAAAAD/DAAAAAAAAAAAAAAAAPC/"
				],
				[
					831,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "debugMode="
					},
					"AQAAAAANAAAAAAAACg0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAA0AAAAAAAAADQAAAAAAAAAAAAAAAPC/"
				],
				[
					835,
					1,
					"",
					null,
					"AgAAAAoNAAAAAAAAGQ0AAAAAAAAAAAAA7wwAAAAAAADvDAAAAAAAAA8AAABjb25maWdbImRlYnVnIl0",
					"AQAAAAAAAAABAAAA/gwAAAAAAADvDAAAAAAAAAAAAAAAAPC/"
				],
				[
					839,
					1,
					"left_delete",
					null,
					"AQAAAO8MAAAAAAAA7wwAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAA8AwAAAAAAADwDAAAAAAAAAAAAAAAAPC/"
				],
				[
					840,
					1,
					"right_delete",
					null,
					"AQAAAO8MAAAAAAAA7wwAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA7wwAAAAAAADvDAAAAAAAAAAAAAAAAPC/"
				],
				[
					843,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAgNAAAAAAAACQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACA0AAAAAAAAIDQAAAAAAAAAAAAAAAPC/"
				],
				[
					844,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAkNAAAAAAAACg0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQ0AAAAAAAAJDQAAAAAAAAAAAAAAAPC/"
				],
				[
					846,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":1,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "fileConfig="
					},
					"AQAAAAoNAAAAAAAAFQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACg0AAAAAAAAKDQAAAAAAAAAAAAAAAPC/"
				],
				[
					847,
					1,
					"insert",
					{
						"characters": "con"
					},
					"AwAAABUNAAAAAAAAFg0AAAAAAAAAAAAAFg0AAAAAAAAXDQAAAAAAAAAAAAAXDQAAAAAAABgNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQ0AAAAAAAAVDQAAAAAAAAAAAAAAAPC/"
				],
				[
					848,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "config"
					},
					"AgAAABUNAAAAAAAAFQ0AAAAAAAADAAAAY29uFQ0AAAAAAAAbDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGA0AAAAAAAAYDQAAAAAAAAAAAAAAAPC/"
				],
				[
					849,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAABsNAAAAAAAAHQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGw0AAAAAAAAbDQAAAAAAAAAAAAAAAPC/"
				],
				[
					850,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAABwNAAAAAAAAHg0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHA0AAAAAAAAcDQAAAAAAAAAAAAAAAPC/"
				],
				[
					851,
					1,
					"insert",
					{
						"characters": "file"
					},
					"BAAAAB0NAAAAAAAAHg0AAAAAAAAAAAAAHg0AAAAAAAAfDQAAAAAAAAAAAAAfDQAAAAAAACANAAAAAAAAAAAAACANAAAAAAAAIQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQ0AAAAAAAAdDQAAAAAAAAAAAAAAAPC/"
				],
				[
					852,
					1,
					"insert_completion",
					{
						"completion": "filetype",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "filetype"
					},
					"AgAAAB0NAAAAAAAAHQ0AAAAAAAAEAAAAZmlsZR0NAAAAAAAAJQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQ0AAAAAAAAhDQAAAAAAAAAAAAAAAPC/"
				],
				[
					854,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACcNAAAAAAAAKA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJw0AAAAAAAAnDQAAAAAAAAAAAAAAAPC/"
				],
				[
					855,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACgNAAAAAAAAKQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKA0AAAAAAAAoDQAAAAAAAAAAAAAAAPC/"
				],
				[
					856,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "file="
					},
					"AQAAACkNAAAAAAAALg0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQ0AAAAAAAApDQAAAAAAAAAAAAAAAPC/"
				],
				[
					857,
					1,
					"insert",
					{
						"characters": "ar"
					},
					"AgAAAC4NAAAAAAAALw0AAAAAAAAAAAAALw0AAAAAAAAwDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALg0AAAAAAAAuDQAAAAAAAAAAAAAAAPC/"
				],
				[
					859,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":33,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "args"
					},
					"AgAAAC4NAAAAAAAALg0AAAAAAAACAAAAYXIuDQAAAAAAADINAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMA0AAAAAAAAwDQAAAAAAAAAAAAAAAPC/"
				],
				[
					860,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAADINAAAAAAAAMw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMg0AAAAAAAAyDQAAAAAAAAAAAAAAAPC/"
				],
				[
					861,
					1,
					"insert",
					{
						"characters": "file"
					},
					"BAAAADMNAAAAAAAANA0AAAAAAAAAAAAANA0AAAAAAAA1DQAAAAAAAAAAAAA1DQAAAAAAADYNAAAAAAAAAAAAADYNAAAAAAAANw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMw0AAAAAAAAzDQAAAAAAAAAAAAAAAPC/"
				],
				[
					868,
					1,
					"left_delete",
					null,
					"AQAAAAQMAAAAAAAABAwAAAAAAAACAAAALS0",
					"AQAAAAAAAAABAAAABgwAAAAAAAAEDAAAAAAAAAAAAAAAAPC/"
				],
				[
					871,
					6,
					"left_delete",
					null,
					"BgAAAAIMAAAAAAAAAgwAAAAAAAABAAAAIAEMAAAAAAAAAQwAAAAAAAABAAAALAAMAAAAAAAAAAwAAAAAAAABAAAAIv8LAAAAAAAA/wsAAAAAAAABAAAAZv4LAAAAAAAA/gsAAAAAAAABAAAALf0LAAAAAAAA/QsAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAAwwAAAAAAAADDAAAAAAAAAAAAAAAAPC/"
				],
				[
					887,
					1,
					"left_delete",
					null,
					"AQAAAOcMAAAAAAAA5wwAAAAAAAAKAAAAZGVidWdNb2RlPQ",
					"AQAAAAAAAAABAAAA8QwAAAAAAADnDAAAAAAAAAAAAAAAAPC/"
				],
				[
					895,
					1,
					"left_delete",
					null,
					"AQAAAPgMAAAAAAAA+AwAAAAAAAALAAAAZmlsZUNvbmZpZz0",
					"AQAAAAAAAAABAAAAAw0AAAAAAAD4DAAAAAAAAAAAAAAAAPC/"
				],
				[
					900,
					1,
					"left_delete",
					null,
					"AQAAAAwNAAAAAAAADA0AAAAAAAAFAAAAZmlsZT0",
					"AQAAAAAAAAABAAAAEQ0AAAAAAAAMDQAAAAAAAAAAAAAAAPC/"
				],
				[
					950,
					1,
					"",
					null,
					"AgAAAFsLAAAAAAAAgQsAAAAAAAAAAAAADwwAAAAAAAAPDAAAAAAAACYAAABwYXJzZXIuYWRkX2FyZ3VtZW50KCJmaWxlIiwgdHlwZT1zdHIpCg",
					"AQAAAAAAAAABAAAA6QsAAAAAAAAPDAAAAAAAAAAAAAAAAPC/"
				],
				[
					955,
					1,
					"swap_line_up",
					null,
					"AgAAAFsLAAAAAAAAWwsAAAAAAAAmAAAAcGFyc2VyLmFkZF9hcmd1bWVudCgiZmlsZSIsIHR5cGU9c3RyKQo4CwAAAAAAAF4LAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAsAAAAAAABoCwAAAAAAAAAAAAAAAPC/"
				],
				[
					956,
					1,
					"swap_line_down",
					null,
					"AgAAAIELAAAAAAAApwsAAAAAAAAAAAAAOAsAAAAAAAA4CwAAAAAAACYAAABwYXJzZXIuYWRkX2FyZ3VtZW50KCJmaWxlIiwgdHlwZT1zdHIpCg",
					"AQAAAAAAAAABAAAARQsAAAAAAABFCwAAAAAAAAAAAAAAAPC/"
				],
				[
					963,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAA4MAAAAAAAADwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADgwAAAAAAAAODAAAAAAAAAAAAAAAAPC/"
				],
				[
					965,
					1,
					"insert",
					{
						"characters": "pa"
					},
					"AgAAAA8MAAAAAAAAEAwAAAAAAAAAAAAAEAwAAAAAAAARDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwwAAAAAAAAPDAAAAAAAAAAAAAAAAPC/"
				],
				[
					967,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":8,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "parser"
					},
					"AgAAAA8MAAAAAAAADwwAAAAAAAACAAAAcGEPDAAAAAAAABUMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQwAAAAAAAARDAAAAAAAAAAAAAAAAPC/"
				],
				[
					968,
					1,
					"insert",
					{
						"characters": ".a"
					},
					"AgAAABUMAAAAAAAAFgwAAAAAAAAAAAAAFgwAAAAAAAAXDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQwAAAAAAAAVDAAAAAAAAAAAAAAAAPC/"
				],
				[
					969,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":34,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "add_argument"
					},
					"AgAAABYMAAAAAAAAFgwAAAAAAAABAAAAYRYMAAAAAAAAIgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwwAAAAAAAAXDAAAAAAAAAAAAAAAAPC/"
				],
				[
					970,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACIMAAAAAAAAJAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgwAAAAAAAAiDAAAAAAAAAAAAAAAAPC/"
				],
				[
					971,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAACMMAAAAAAAAJQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwwAAAAAAAAjDAAAAAAAAAAAAAAAAPC/"
				],
				[
					972,
					1,
					"insert",
					{
						"characters": "-h"
					},
					"AgAAACQMAAAAAAAAJQwAAAAAAAAAAAAAJQwAAAAAAAAmDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAwAAAAAAAAkDAAAAAAAAAAAAAAAAPC/"
				],
				[
					974,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACcMAAAAAAAAKAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwwAAAAAAAAnDAAAAAAAAAAAAAAAAPC/"
				],
				[
					975,
					1,
					"insert",
					{
						"characters": " --"
					},
					"AwAAACgMAAAAAAAAKQwAAAAAAAAAAAAAKQwAAAAAAAAqDAAAAAAAAAAAAAAqDAAAAAAAACsMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAwAAAAAAAAoDAAAAAAAAAAAAAAAAPC/"
				],
				[
					976,
					2,
					"left_delete",
					null,
					"AgAAACoMAAAAAAAAKgwAAAAAAAABAAAALSkMAAAAAAAAKQwAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAKwwAAAAAAAArDAAAAAAAAAAAAAAAAPC/"
				],
				[
					977,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAACkMAAAAAAAAKwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQwAAAAAAAApDAAAAAAAAAAAAAAAAPC/"
				],
				[
					978,
					1,
					"insert",
					{
						"characters": "--help"
					},
					"BgAAACoMAAAAAAAAKwwAAAAAAAAAAAAAKwwAAAAAAAAsDAAAAAAAAAAAAAAsDAAAAAAAAC0MAAAAAAAAAAAAAC0MAAAAAAAALgwAAAAAAAAAAAAALgwAAAAAAAAvDAAAAAAAAAAAAAAvDAAAAAAAADAMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgwAAAAAAAAqDAAAAAAAAAAAAAAAAPC/"
				],
				[
					979,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD5DQAAaW1wb3J0IGpzb24KaW1wb3J0IGFyZ3BhcnNlCmZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aAppbXBvcnQgc3VicHJvY2Vzcwpmcm9tIHJpY2guY29uc29sZSBpbXBvcnQgQ29uc29sZQpmcm9tIHJpY2gudGFibGUgaW1wb3J0IFRhYmxlCgoKY2xhc3MgUnVubmVyQXBwOgogICAgZGVmIF9faW5pdF9fKHNlbGYpIC0+IE5vbmU6CiAgICAgICAgc2VsZi5maWxlVGFibGUgPSBUYWJsZSgpICAjIOWIm+W7uuihqOagvOS7peaYvuekuuaWh+S7tuS/oeaBrwogICAgICAgIHNlbGYuY29tbWFuZFRhYmxlID0gVGFibGUoKSAgIyDliJvlu7rooajmoLzku6XmmL7npLrmiafooYznmoTlkb3ku6QKICAgICAgICBzZWxmLmNvbnNvbGUgPSBDb25zb2xlKGNvbG9yX3N5c3RlbT0iMjU2Iiwgc3R5bGU9Tm9uZSkgICMg5Yib5bu65o6n5Yi25Y+w5a+56LGhCgogICAgZGVmIFBhcnNlRmlsZShzZWxmLCBkZWJ1Z01vZGU6IGJvb2wsIGZpbGVDb25maWc6IGRpY3QsIGZpbGU6IHN0cikgLT4gTm9uZToKCiAgICAgICAgIyDojrflj5bmlofku7bkv6Hmga8KICAgICAgICBzZWxmLmZpbGVfc291cmNlID0gZmlsZQogICAgICAgIHNlbGYuZmlsZV9zb3VyY2UgPSBzdHIoUGF0aChzZWxmLmZpbGVfc291cmNlKS5yZXNvbHZlKCkpCiAgICAgICAgc2VsZi5maWxlID0gc3RyKFBhdGgoc2VsZi5maWxlX3NvdXJjZSkubmFtZSkKICAgICAgICBzZWxmLmZpbGVfbmFtZSA9IHN0cihQYXRoKHNlbGYuZmlsZV9zb3VyY2UpLnN0ZW0pCiAgICAgICAgc2VsZi5maWxlX3R5cGUgPSBzdHIoUGF0aChzZWxmLmZpbGVfc291cmNlKS5zdWZmaXgpWzE6XQogICAgICAgIHNlbGYuZmlsZV9kaXIgPSBzdHIoUGF0aChzZWxmLmZpbGVfc291cmNlKS5wYXJlbnQpCgogICAgICAgIHNlbGYuZXhlY19jbWQgPSBbXSAgIyDnlKjkuo7lrZjlgqjopoHmiafooYznmoTlkb3ku6QKCiAgICAgICAgIyDmt7vliqDmlofku7bkv6Hmga/liLDooajmoLwKICAgICAgICBpZiBkZWJ1Z01vZGU6CiAgICAgICAgICAgIHNlbGYuZmlsZVRhYmxlLmFkZF9jb2x1bW4oIltib2xkXUl0ZW0iKQogICAgICAgICAgICBzZWxmLmZpbGVUYWJsZS5hZGRfY29sdW1uKCJbcmVkXVZhbHVlIikKICAgICAgICAgICAgc2VsZi5maWxlVGFibGUuYWRkX3JvdygiRmlsZSBzb3VyY2UiLCBzZWxmLmZpbGVfc291cmNlKQogICAgICAgICAgICBzZWxmLmZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIiwgc2VsZi5maWxlKQogICAgICAgICAgICBzZWxmLmZpbGVUYWJsZS5hZGRfcm93KCJGaWxlIG5hbWUiLCBzZWxmLmZpbGVfbmFtZSkKICAgICAgICAgICAgc2VsZi5maWxlVGFibGUuYWRkX3JvdygiRmlsZSB0eXBlIiwgc2VsZi5maWxlX3R5cGUpCiAgICAgICAgICAgIHNlbGYuZmlsZVRhYmxlLmFkZF9yb3coIkZpbGUgZGlyIiwgc2VsZi5maWxlX2RpcikKICAgICAgICAgICAgc2VsZi5jb25zb2xlLnByaW50KHNlbGYuZmlsZVRhYmxlKQoKICAgIGRlZiBFeGVjQ29kZShzZWxmLCBkZWJ1Z01vZGU6IGJvb2wsIGZpbGVDb25maWc6IGRpY3QpIC0+IE5vbmU6CiAgICAgICAgIyDmoLnmja7mlofku7bnsbvlnovmn6Xmib7miafooYzlkb3ku6QKICAgICAgICBmb3IgaSBpbiBmaWxlQ29uZmlnOgogICAgICAgICAgICBmb3IgaiBpbiBmaWxlQ29uZmlnWyJmaWxldHlwZSJdW2ldWyJleHRlbnNpb24iXToKICAgICAgICAgICAgICAgIGlmIGogPT0gc2VsZi5maWxlX3R5cGU6CiAgICAgICAgICAgICAgICAgICAgc2VsZi5leGVjX2NtZCA9IGZpbGVDb25maWdbaV1bImNvbW1hbmQiXQogICAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIGlmIHNlbGYuZXhlY19jbWQ6CiAgICAgICAgICAgICAgICBicmVhawoKICAgICAgICAjIOino+aekOWRveS7pOWIsOihqOagvAogICAgICAgIHNlbGYuY29tbWFuZFRhYmxlLmFkZF9jb2x1bW4oIiIpCiAgICAgICAgc2VsZi5jb21tYW5kVGFibGUuYWRkX2NvbHVtbigiW2JvbGRdQ29tbWFuZCIpCiAgICAgICAgaWYgc2VsZi5leGVjX2NtZDoKICAgICAgICAgICAgZm9yIGkgaW4gcmFuZ2UobGVuKHNlbGYuZXhlY19jbWQpKToKICAgICAgICAgICAgICAgIGNtZCA9IHNlbGYuZXhlY19jbWRbaV0ucmVwbGFjZSgiJCQiLCAiXG5cbiRcblxuIikKICAgICAgICAgICAgICAgIGNtZCA9ICgKICAgICAgICAgICAgICAgICAgICBjbWQucmVwbGFjZSgiJGZpbGUiLCBzZWxmLmZpbGUpCiAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoIiRuYW1lIiwgc2VsZi5maWxlX25hbWUpCiAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoIiR0eXBlIiwgc2VsZi5maWxlX3R5cGUpCiAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoIiRwYXRoIiwgc2VsZi5maWxlX2RpcikKICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgiJGRpciIsIHNlbGYuZmlsZV9kaXIpCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBjbWQgPSBjbWQucmVwbGFjZSgiXG5cbiRcblxuIiwgIiQiKQogICAgICAgICAgICAgICAgc2VsZi5jb21tYW5kVGFibGUuYWRkX3JvdyhzdHIoaSArIDEpLCBjbWQpCiAgICAgICAgICAgICAgICBzZWxmLmV4ZWNfY21kW2ldID0gY21kCiAgICAgICAgICAgIGlmIGRlYnVnTW9kZToKICAgICAgICAgICAgICAgIHNlbGYuY29uc29sZS5wcmludChzZWxmLmNvbW1hbmRUYWJsZSkKCiAgICAgICAgICAgICMg5omn6KGM5ZG95LukCiAgICAgICAgICAgIGZvciBpIGluIHNlbGYuZXhlY19jbWQ6CiAgICAgICAgICAgICAgICBzZWxmLmNvbnNvbGUucnVsZSgpCiAgICAgICAgICAgICAgICBzZWxmLmNvbnNvbGUucHJpbnQoIj4iLCBpLCBzdHlsZT0iY3lhbiIpCiAgICAgICAgICAgICAgICBzdWJwcm9jZXNzLnJ1bihpLCBjd2Q9c2VsZi5maWxlX2Rpciwgc2hlbGw9VHJ1ZSkKICAgICAgICBlbHNlOgogICAgICAgICAgICBzZWxmLmNvbnNvbGUucHJpbnQoCiAgICAgICAgICAgICAgICAiTm8gZXhlY3V0aW9uIGNvbW1hbmQgZm91bmQgZm9yIGZpbGUgdHlwZTogLiIsIHNlbGYuZmlsZV90eXBlLCBzdHlsZT0id2hpdGUgb24gcmVkIgogICAgICAgICAgICApCgoKIyDop6PmnpDlkb3ku6TooYzlj4LmlbAKcGFyc2VyID0gYXJncGFyc2UuQXJndW1lbnRQYXJzZXIoKQpwYXJzZXIuYWRkX2FyZ3VtZW50KCJmaWxlIiwgdHlwZT1zdHIpCnBhcnNlci5hZGRfYXJndW1lbnQoIi12IiwgIi0tdmVyYm9zaXR5IiwgdHlwZT1pbnQsCiAgICAgICAgICAgICAgICAgICAgaGVscD0iaW5jcmVhc2Ugb3V0cHV0IHZlcmJvc2l0eSIpCnBhcnNlci5hZGRfYXJndW1lbnQoIi1kIiwgIi0tZGVidWciKQpwYXJzZXIuYWRkX2FyZ3VtZW50KCItaCIsICItLWhlbHAiKQphcmdzID0gcGFyc2VyLnBhcnNlX2FyZ3MoKQoKd2l0aCBvcGVuKCJmaWxldHlwZS5qc29uIikgYXMgY29uZmlndXJlX2ZpbGU6CiAgICBjb25maWcgPSBqc29uLmxvYWQoY29uZmlndXJlX2ZpbGUpICAjIOS7jmZpbGV0eXBlLmpzb27mlofku7bkuK3liqDovb3phY3nva7kv6Hmga8KCmlmIGFyZ3MuZGVidWc6CiAgICBjb25maWdbImRlYnVnIl0gPSBUcnVlCgpBcHAgPSBSdW5uZXJBcHAoKQpBcHAuUGFyc2VGaWxlKGNvbmZpZ1siZGVidWciXSwgY29uZmlnWyJmaWxldHlwZSJdLCBhcmdzLmZpbGUpCgAAAAAAAAAAbw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAwAAAAAAAAwDAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/D/Projects/Project/code runner/test/a.py",
			"settings":
			{
				"buffer_size": 265,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"paste",
					null,
					"AgAAAAAAAAAAAAAA9gEAAAAAAAAAAAAA9gEAAAAAAAD2AQAAAAAAAA0AAABwcmludCgxMTQ1MTQp",
					"AQAAAAAAAAABAAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"left_delete",
					null,
					"AQAAAMsAAAAAAAAAywAAAAAAAAAUAAAALCBjaG9pY2VzPVswLCAxLCAyXSw",
					"AQAAAAAAAAABAAAAywAAAAAAAADfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMsAAAAAAAAAzAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywAAAAAAAADLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": ","
					},
					"AgAAAMEAAAAAAAAAwgAAAAAAAAAAAAAAwgAAAAAAAADCAAAAAAAAAAsAAAAsIHR5cGU9aW50LA",
					"AQAAAAAAAAABAAAAzAAAAAAAAADBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "print"
					},
					"BgAAABQBAAAAAAAAFQEAAAAAAAAAAAAAFQEAAAAAAAAVAQAAAAAAAMUAAABhbnN3ZXIgPSBhcmdzLnNxdWFyZSoqMgppZiBhcmdzLnZlcmJvc2l0eSA9PSAyOgogICAgcHJpbnQoZiJ0aGUgc3F1YXJlIG9mIHthcmdzLnNxdWFyZX0gZXF1YWxzIHthbnN3ZXJ9IikKZWxpZiBhcmdzLnZlcmJvc2l0eSA9PSAxOgogICAgcHJpbnQoZiJ7YXJncy5zcXVhcmV9XjIgPT0ge2Fuc3dlcn0iKQplbHNlOgogICAgcHJpbnQoYW5zd2VyKRUBAAAAAAAAFgEAAAAAAAAAAAAAFgEAAAAAAAAXAQAAAAAAAAAAAAAXAQAAAAAAABgBAAAAAAAAAAAAABgBAAAAAAAAGQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2QEAAAAAAAAUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABkBAAAAAAAAGwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQEAAAAAAAAZAQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "args"
					},
					"BAAAABoBAAAAAAAAGwEAAAAAAAAAAAAAGwEAAAAAAAAcAQAAAAAAAAAAAAAcAQAAAAAAAB0BAAAAAAAAAAAAAB0BAAAAAAAAHgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgEAAAAAAAAaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAB4BAAAAAAAAHwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgEAAAAAAAAeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "ve"
					},
					"AgAAAB8BAAAAAAAAIAEAAAAAAAAAAAAAIAEAAAAAAAAhAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwEAAAAAAAAfAQAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert_completion",
					{
						"completion": "verbosity",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "verbosity"
					},
					"AgAAAB8BAAAAAAAAHwEAAAAAAAACAAAAdmUfAQAAAAAAACgBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQEAAAAAAAAhAQAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							{
								"newText": "import argparse\nparser = argparse.ArgumentParser()\nparser.add_argument(\"square\", type=int,\n                    help=\"display a square of a given number\")\nparser.add_argument(\"-v\", \"--verbosity\",\n                    help=\"increase output verbosity\")\nargs = parser.parse_args()\nprint(args.verbosity)\n",
								"range":
								{
									"end":
									{
										"character": 0,
										"line": 8
									},
									"start":
									{
										"character": 0,
										"line": 0
									}
								}
							}
						],
						"process_placeholders": false,
						"required_view_version": null
					},
					"AQAAAAAAAAAAAAAAKgEAAAAAAAApAQAAaW1wb3J0IGFyZ3BhcnNlCnBhcnNlciA9IGFyZ3BhcnNlLkFyZ3VtZW50UGFyc2VyKCkKcGFyc2VyLmFkZF9hcmd1bWVudCgic3F1YXJlIiwgdHlwZT1pbnQsCiAgICAgICAgICAgICAgICAgICAgaGVscD0iZGlzcGxheSBhIHNxdWFyZSBvZiBhIGdpdmVuIG51bWJlciIpCnBhcnNlci5hZGRfYXJndW1lbnQoIi12IiwgIi0tdmVyYm9zaXR5IiwKICAgICAgICAgICAgICAgICAgICBoZWxwPSJpbmNyZWFzZSBvdXRwdXQgdmVyYm9zaXR5IikKYXJncyA9IHBhcnNlci5wYXJzZV9hcmdzKCkKcHJpbnQoYXJncy52ZXJib3NpdHkp",
					"AQAAAAAAAAABAAAAKAEAAAAAAAAoAQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"transpose",
					null,
					"AgAAACoBAAAAAAAAKwEAAAAAAAAAAAAAKQEAAAAAAAApAQAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAKgEAAAAAAAAqAQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"left_delete",
					null,
					"AQAAADIAAAAAAAAAMgAAAAAAAABnAAAACnBhcnNlci5hZGRfYXJndW1lbnQoInNxdWFyZSIsIHR5cGU9aW50LAogICAgICAgICAgICAgICAgICAgIGhlbHA9ImRpc3BsYXkgYSBzcXVhcmUgb2YgYSBnaXZlbiBudW1iZXIiKQ",
					"AQAAAAAAAAABAAAAmQAAAAAAAAAyAAAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADDAAAAaW1wb3J0IGFyZ3BhcnNlCnBhcnNlciA9IGFyZ3BhcnNlLkFyZ3VtZW50UGFyc2VyKCkKcGFyc2VyLmFkZF9hcmd1bWVudCgiLXYiLCAiLS12ZXJib3NpdHkiLAogICAgICAgICAgICAgICAgICAgIGhlbHA9ImluY3JlYXNlIG91dHB1dCB2ZXJib3NpdHkiKQphcmdzID0gcGFyc2VyLnBhcnNlX2FyZ3MoKQpwcmludChhcmdzLnZlcmJvc2l0eSkKAAAAAAAAAADxAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgAAAAAAAAAyAAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADxAAAAaW1wb3J0IGFyZ3BhcnNlCnBhcnNlciA9IGFyZ3BhcnNlLkFyZ3VtZW50UGFyc2VyKCkKcGFyc2VyLmFkZF9hcmd1bWVudCgiLXYiLCAiLS12ZXJib3NlIiwgaGVscD0iaW5jcmVhc2Ugb3V0cHV0IHZlcmJvc2l0eSIsCiAgICAgICAgICAgICAgICAgICAgYWN0aW9uPSJzdG9yZV90cnVlIikKYXJncyA9IHBhcnNlci5wYXJzZV9hcmdzKCkKaWYgYXJncy52ZXJib3NlOgogICAgcHJpbnQoInZlcmJvc2l0eSB0dXJuZWQgb24iKQAAAAAAAAAACQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgAAAAAAAAAyAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "Microsoft Windows [版本 10.0.22631.3672]                                                       \n(c) Microsoft Corporation。保留所有权利。                                                      \n                                                                                               \nClink v1.6.14.93b83f                                                                           \nCopyright (c) 2012-2018 Martin Ridgers                                                         \nPortions Copyright (c) 2020-2024 Christopher Antos                                             \nhttps://github.com/chrisant996/clink                                                           \n                                                                                               \n 70�  D:\\Projects\\Pr\\code runner\\test   main ±6 ?1  1  python a.py                        \n请输入字符串cmd：s                                                                             \nTraceback (most recent call last):                                                             \n  File \"D:\\Projects\\Project\\code runner\\test\\a.py\", line 1, in <module>                        \n    import argparse                                                                            \n  File \"C:\\ProgramData\\miniconda3\\Lib\\argparse.py\", line 89, in <module>                       \n    import re as _re                                                                           \n  File \"D:\\Projects\\Project\\code runner\\test\\re.py\", line 7, in <module>                       \n    cmd = re.sub(r'\\$\\$+', lambda m: '$' * (len(m.group()) // 2), cmd)                         \n 70�  D:\\Projects\\Pr\\code runner\\test   main ±6 ?1  1                                      \n python a.py                                                    e 'sub' (most likely due to a \n请输入字符串cmd：s                                                                             \nTraceback (most recent call last):                                                             \n  File \"D:\\Projects\\Project\\code runner\\test\\a.py\", line 1, in <m                              ​‌​\nodule>                                                                                         \n    import argparse                                              odule>                        \n  File \"C:\\ProgramData\\miniconda3\\Lib\\argparse.py\", line 89, in <                              ​‌​\nmodule>                                                          module>                       \n    import re as _re                                                                           \n  File \"D:\\Projects\\Project\\code runner\\test\\re.py\", line 7, in <module>                       ​‌​\nmodule>                                                           cmd)                         \n    cmd = re.sub(r'\\$\\$+', lambda m: '$' * (len(m.group()) // 2),                              ​‌​\n cmd)                                                            e 'sub' (most likely due to a \n          ^^^^^^                                                                               \nAttributeError: partially initialized module 're' has no attribut                              ​‌​\ne 'sub' (most likely due to a circular import)                                                 \n> python a.py                                                    \n请输入字符串cmd：4                                               \nTraceback (most recent call last):                               \n  File \"D:\\Projects\\Project\\code runner\\test\\a.py\", line 1, in <m​‌​\nodule>                                                           \n    import argparse                                              \n  File \"C:\\ProgramData\\miniconda3\\Lib\\argparse.py\", line 89, in <​‌​\nmodule>                                                          \n    import re as _re                                             \n  File \"D:\\Projects\\Project\\code runner\\test\\re.py\", line 7, in <​‌​\nmodule>                                                          \n    cmd = re.sub(r'\\$\\$+', lambda m: '$' * (len(m.group()) // 2),​‌​\n cmd)                                                            \n          ^^^^^^                                                 \nAttributeError: partially initialized module 're' has no attribut​‌​\n 74�  D:\\P\\Prcode runner\\test   main ±6 ?1  1               \n 73�  D:\\P\\Prcode runner\\test   main ±6 ?1  1               \n 72�  D:\\P\\Prcode runner\\test   main ±6 ?1  1               \n                                                                ",
			"settings":
			{
				"buffer_size": 4516,
				"line_ending": "Windows",
				"name": "管理员:  ",
				"scratch": true
			}
		},
		{
			"file": "/D/Projects/Project/code runner/filetype.json",
			"settings":
			{
				"buffer_size": 482,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"paste",
					null,
					"AgAAAEcAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABQAAAAAAAAAAgAAABmaWxldHlwZQ",
					"AQAAAAAAAAABAAAARwAAAAAAAABPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"paste",
					null,
					"AgAAAAYBAAAAAAAADwEAAAAAAAAAAAAADwEAAAAAAAAPAQAAAAAAAAgAAABmaWxldHlwZQ",
					"AQAAAAAAAAABAAAABgEAAAAAAAAOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							{
								"newText": " ",
								"range":
								{
									"end":
									{
										"character": 12,
										"line": 1
									},
									"start":
									{
										"character": 12,
										"line": 1
									}
								}
							}
						],
						"process_placeholders": false,
						"required_view_version": null
					},
					"AQAAAA4AAAAAAAAADwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwEAAAAAAAAPAQAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/Conda/Conda.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/Conda/Conda.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"ter",
				"Preferences: Terminus Key Bindings"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"packa",
				"Package Control: Enable Package"
			],
			[
				"ke",
				"Preferences: Key Bindings"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"pain",
				"Package Control: Install Package"
			],
			[
				"terminus",
				"Preferences: Terminus Key Bindings"
			],
			[
				"conda",
				"Conda: Install Package"
			],
			[
				"py",
				"Set Syntax: Python"
			],
			[
				"Ins",
				"Package Control: Install Package"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"P",
				"Package Control: Install Package"
			],
			[
				"ma",
				"RainbowBrackets: Make Rainbow"
			],
			[
				"make",
				"RainbowBrackets: Make Rainbow"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 160.800003052,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/Projects/Project/code runner",
		"/D/Projects/Project/code runner/help",
		"/D/Projects/Project/code runner/subl",
		"/D/Projects/Project/code runner/test"
	],
	"file_history":
	[
		"/C/Users/Ewsdj/AppData/Roaming/Sublime Text/Packages/Default/Default (Windows).sublime-keymap",
		"/D/Projects/Project/code runner/subl/code runner.sublime-project",
		"/D/Projects/Project/code runner/.gitignore",
		"/C/Users/Ewsdj/Desktop/lx-music-source.js",
		"/D/Projects/Project/code runner/main-gpt.py",
		"/D/Projects/Project/Picker-Qt/new_ui.py",
		"/C/Program Files/Tencent/WeChat/WeChat.exe",
		"/D/Projects/Project/code runner/filetype.json",
		"/C/Users/ewsdj/AppData/Roaming/Sublime Merge/Packages/User/Preferences.sublime-settings",
		"/C/Users/ewsdj/AppData/Roaming/Sublime Merge/Packages/User/Action.sublime-menu",
		"/C/Users/ewsdj/AppData/Roaming/Sublime Text/Packages/Default/Main.sublime-menu",
		"/C/JetBrains/CLion/bin/clion.svg",
		"/D/Projects/Project/code runner/main.py",
		"/D/Projects/Project/Picker/test/strwide.py",
		"/D/Projects/Project/Picker/sv_ttk/__init__.py",
		"/C/Users/ewsdj/AppData/Roaming/Sublime Text/Packages/SublimeREPL/SublimeREPL.sublime-settings",
		"/C/Users/ewsdj/AppData/Roaming/Sublime Text/Packages/User/SublimeREPL.sublime-settings",
		"/D/Projects/Project/Picker/subl/Picker.sublime-project",
		"/C/Users/ewsdj/AppData/Local/Mica For Everyone/MicaForEveryone.conf",
		"/D/Projects/Project/Picker/main.py",
		"/D/Projects/Project/Picker/test/rand.py",
		"/D/Projects/Project/Picker/.gitignore",
		"/C/Users/ewsdj/.zshrc",
		"/C/Users/ewsdj/AppData/Roaming/pooi.moe/QuickLook/QuickLook.config",
		"/C/Users/ewsdj/AppData/Local/Programs/QuickLook/Translations.config",
		"/C/Users/ewsdj/OneDrive/应用/Fluent Search/.Fluent_Search_Settings/Preview.json",
		"/C/Users/ewsdj/Documents/PowerShell/Microsoft.PowerShell_profile.ps1",
		"/D/Projects/Project/Picker/main.pyw",
		"/D/Projects/Project/Picker/settings.json",
		"/C/Users/ewsdj/AppData/Local/Sublime Text/Package Storage/LSP-pyright/20.4.0/language-server/node_modules/pyright/dist/typeshed-fallback/stdlib/os/__init__.pyi",
		"/D/Projects/Cpp/chicken.cpp",
		"/C/Users/ewsdj/.condarc",
		"/C/Users/ewsdj/fluent-designer.ps1",
		"/C/Users/ewsdj/PyQt-Fluent-Widgets/tools/designer.py",
		"/C/Users/ewsdj/PyQt-Fluent-Widgets/examples/button/demo.py",
		"/C/Users/ewsdj/AppData/Roaming/Sublime Text/Packages/User/Rainbowth.sublime-settings",
		"/C/Users/ewsdj/AppData/Roaming/Sublime Text/Packages/User/RainbowBrackets.sublime-settings",
		"/C/Users/ewsdj/AppData/Roaming/Sublime Text/Packages/RainbowBrackets/RainbowBrackets.sublime-settings",
		"/C/Users/ewsdj/.zcompdump-HONOR-5.9.zwc",
		"/C/Users/ewsdj/scoop/apps/clink/current/clink.bat"
	],
	"find":
	{
		"height": 41.6
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"self.config",
			"setTh",
			" \"]"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/D/Projects/Project/code runner/main.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3439,
						"regions":
						{
							"rb_l0_<default>":
							{
								"flags": 272,
								"regions": "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",
								"scope": "<default>.l0.rb"
							},
							"rb_l1_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										441,
										442
									],
									[
										458,
										459
									],
									[
										467,
										468
									],
									[
										468,
										469
									],
									[
										499,
										500
									],
									[
										516,
										517
									],
									[
										557,
										558
									],
									[
										574,
										575
									],
									[
										615,
										616
									],
									[
										632,
										633
									],
									[
										678,
										679
									],
									[
										695,
										696
									],
									[
										1778,
										1779
									],
									[
										1792,
										1793
									],
									[
										1917,
										1918
									],
									[
										1936,
										1937
									],
									[
										1966,
										1967
									],
									[
										1990,
										1991
									],
									[
										2020,
										2021
									],
									[
										2044,
										2045
									],
									[
										2074,
										2075
									],
									[
										2097,
										2098
									],
									[
										2127,
										2128
									],
									[
										2149,
										2150
									],
									[
										2266,
										2267
									],
									[
										2272,
										2273
									],
									[
										3345,
										3346
									],
									[
										3353,
										3354
									]
								],
								"scope": "<default>.l1.rb"
							}
						},
						"selection":
						[
							[
								3120,
								3120
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".[\"'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3120,
										3121
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										3113,
										3114
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"color_scheme": "auto",
							"lsp_active": true,
							"lsp_hover_provider_count": 26,
							"lsp_uri": "file:///D:/Projects/Project/code%20runner/main.py",
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4
						},
						"translation.x": 0.0,
						"translation.y": 1931.2,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/D/Projects/Project/code runner/test/a.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 265,
						"regions":
						{
							"rb_l0_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										48,
										49
									],
									[
										49,
										50
									],
									[
										70,
										71
									],
									[
										163,
										164
									],
									[
										189,
										190
									],
									[
										190,
										191
									],
									[
										218,
										219
									],
									[
										240,
										241
									],
									[
										251,
										252
									],
									[
										264,
										265
									]
								],
								"scope": "<default>.l0.rb"
							}
						},
						"selection":
						[
							[
								50,
								50
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".[\"'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										49,
										50
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										48,
										49
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"lsp_active": true,
							"lsp_uri": "file:///D:/Projects/Project/code%20runner/test/a.py",
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4516,
						"regions":
						{
							"rb_l0_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										18,
										19
									],
									[
										37,
										38
									],
									[
										94,
										95
									],
									[
										96,
										97
									],
									[
										384,
										385
									],
									[
										386,
										387
									],
									[
										489,
										490
									],
									[
										491,
										492
									],
									[
										953,
										954
									],
									[
										975,
										976
									],
									[
										1535,
										1536
									],
									[
										1588,
										1589
									],
									[
										1784,
										1785
									],
									[
										2742,
										2743
									],
									[
										2785,
										2786
									],
									[
										2872,
										2873
									]
								],
								"scope": "<default>.l0.rb"
							},
							"rb_l1_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										1562,
										1563
									],
									[
										1582,
										1583
									],
									[
										1906,
										1907
									],
									[
										1928,
										1929
									],
									[
										2812,
										2813
									],
									[
										2832,
										2833
									],
									[
										3167,
										3168
									],
									[
										3204,
										3205
									],
									[
										3390,
										3391
									],
									[
										3412,
										3413
									],
									[
										3999,
										4000
									],
									[
										4056,
										4057
									]
								],
								"scope": "<default>.l1.rb"
							},
							"rb_l2_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										1566,
										1567
									],
									[
										1576,
										1577
									],
									[
										2816,
										2817
									],
									[
										2826,
										2827
									],
									[
										4026,
										4027
									],
									[
										4046,
										4047
									]
								],
								"scope": "<default>.l2.rb"
							},
							"rb_l3_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										1574,
										1575
									],
									[
										1575,
										1576
									],
									[
										2824,
										2825
									],
									[
										2825,
										2826
									],
									[
										4030,
										4031
									],
									[
										4040,
										4041
									]
								],
								"scope": "<default>.l3.rb"
							},
							"rb_l4_<default>":
							{
								"flags": 272,
								"regions":
								[
									[
										4038,
										4039
									],
									[
										4039,
										4040
									]
								],
								"scope": "<default>.l4.rb"
							}
						},
						"selection":
						[
							[
								4312,
								4312
							]
						],
						"settings":
						{
							"__vi_external_disable": true,
							"auto_complete": false,
							"auto_complete_commit_on_tab": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone_locations":
							{
							},
							"bracket_highlighter.ignore": true,
							"color_scheme": "Terminus.hidden-color-scheme",
							"draw_centered": false,
							"draw_indent_guides": false,
							"draw_unicode_white_space": false,
							"draw_white_space": "none",
							"gutter": false,
							"highlight_line": false,
							"is_widget": true,
							"lsp_uri": "buffer:186",
							"result_base_dir": "D:\\Projects\\Project\\code runner\\test",
							"result_file_regex": null,
							"result_line_regex": null,
							"rulers":
							[
								500
							],
							"scroll_past_end": true,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"terminus.highlight_counter": 365,
							"terminus_view": true,
							"terminus_view.args":
							{
								"auto_close": true,
								"cancellable": false,
								"cmd":
								[
									"cmd.exe"
								],
								"cwd": "D:\\Projects\\Project\\code runner\\test",
								"default_title": "Command Prompt",
								"env":
								{
									"TERMINUS_SUBLIME": "1",
									"TERM_PROGRAM": "Terminus-Sublime"
								},
								"file_regex": null,
								"line_regex": null,
								"panel_name": "Terminus",
								"reactivable": true,
								"show_in_panel": null,
								"tag": null,
								"timeit": false,
								"title": null
							},
							"terminus_view.cancellable": false,
							"terminus_view.key.ctrl+k": true,
							"terminus_view.key.ctrl+p": true,
							"terminus_view.natural_keyboard": true,
							"terminus_view.reactivable": true,
							"terminus_view.tag": null,
							"terminus_view.viewport_y": 850.909090909,
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 936.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/D/Projects/Project/code runner/filetype.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 482,
						"regions":
						{
							"rb_l0_JSON":
							{
								"flags": 272,
								"regions":
								[
									[
										0,
										1
									],
									[
										481,
										482
									]
								],
								"scope": "JSON.l0.rb"
							},
							"rb_l1_JSON":
							{
								"flags": 272,
								"regions":
								[
									[
										37,
										38
									],
									[
										479,
										480
									]
								],
								"scope": "JSON.l1.rb"
							},
							"rb_l2_JSON":
							{
								"flags": 272,
								"regions":
								[
									[
										57,
										58
									],
									[
										230,
										231
									],
									[
										248,
										249
									],
									[
										473,
										474
									]
								],
								"scope": "JSON.l2.rb"
							},
							"rb_l3_JSON":
							{
								"flags": 272,
								"regions":
								[
									[
										84,
										85
									],
									[
										142,
										143
									],
									[
										168,
										169
									],
									[
										220,
										221
									],
									[
										275,
										276
									],
									[
										334,
										335
									],
									[
										360,
										361
									],
									[
										463,
										464
									]
								],
								"scope": "JSON.l3.rb"
							}
						},
						"selection":
						[
							[
								272,
								272
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"selector": "- comment - punctuation.separator - punctuation.definition.string.end - constant.character.escape - invalid.illegal - punctuation.section.mapping - punctuation.section.sequence",
									"server": "LSP-json"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										272,
										273
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										262,
										263
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"lsp_active": true,
							"lsp_uri": "file:///D:/Projects/Project/code%20runner/filetype.json",
							"show_definitions": false,
							"syntax": "Packages/JSON/JSON.sublime-syntax",
							"tab_size": 4
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 41.6
	},
	"input":
	{
		"height": 48.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 342.399993896
	},
	"output.Debugger Console":
	{
		"height": 342.399993896
	},
	"output.LSP Log Panel":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 156.0
	},
	"output.diagnostics":
	{
		"height": 0.0
	},
	"output.diff_views":
	{
		"height": 156.0
	},
	"output.exec":
	{
		"height": 156.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "code runner.sublime-project",
	"replace":
	{
		"height": 88.8
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 154.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
